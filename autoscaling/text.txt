{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "433788"
    },
    "items": [
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "f6340ec7-31e7-4ed2-a07b-a69d90a223a8",
                "resourceVersion": "433196",
                "creationTimestamp": "2024-10-02T22:18:45Z",
                "labels": {
                    "agentpool": "agentpool",
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "Standard_D4ds_v5",
                    "beta.kubernetes.io/os": "linux",
                    "failure-domain.beta.kubernetes.io/region": "eastus",
                    "failure-domain.beta.kubernetes.io/zone": "0",
                    "kubernetes.azure.com/agentpool": "agentpool",
                    "kubernetes.azure.com/azure-cni-overlay": "true",
                    "kubernetes.azure.com/cluster": "MC_AnandhakumarG-Testing_wow-testing_eastus",
                    "kubernetes.azure.com/consolidated-additional-properties": "af04ce88-7e75-11ef-a997-a2c20eeae127",
                    "kubernetes.azure.com/kubelet-identity-client-id": "a4ef42de-7a87-4554-82fc-d47316488e9d",
                    "kubernetes.azure.com/mode": "system",
                    "kubernetes.azure.com/network-name": "aks-vnet-15172029",
                    "kubernetes.azure.com/network-resourcegroup": "AnandhakumarG-Testing",
                    "kubernetes.azure.com/network-subnet": "aks-subnet",
                    "kubernetes.azure.com/network-subscription": "4f566413-8688-40c7-913b-56a07c177568",
                    "kubernetes.azure.com/node-image-version": "AKSUbuntu-2204gen2containerd-202409.09.0",
                    "kubernetes.azure.com/nodenetwork-vnetguid": "21d878fb-b97d-425e-bc37-cfadceaa86bb",
                    "kubernetes.azure.com/nodepool-type": "VirtualMachineScaleSets",
                    "kubernetes.azure.com/os-sku": "Ubuntu",
                    "kubernetes.azure.com/podnetwork-type": "overlay",
                    "kubernetes.azure.com/role": "agent",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "aks-agentpool-29385454-vmss000008",
                    "kubernetes.io/os": "linux",
                    "node.kubernetes.io/instance-type": "Standard_D4ds_v5",
                    "topology.disk.csi.azure.com/zone": "",
                    "topology.kubernetes.io/region": "eastus",
                    "topology.kubernetes.io/zone": "0"
                },
                "annotations": {
                    "alpha.kubernetes.io/provided-node-ip": "10.224.0.5",
                    "csi.volume.kubernetes.io/nodeid": "{\"csi.tigera.io\":\"aks-agentpool-29385454-vmss000008\",\"disk.csi.azure.com\":\"aks-agentpool-29385454-vmss000008\",\"file.csi.azure.com\":\"aks-agentpool-29385454-vmss000008\"}",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "projectcalico.org/IPv4Address": "10.224.0.5/16",
                    "projectcalico.org/IPv4IPIPTunnelAddr": "10.0.24.192",
                    "projectcalico.org/IPv4VXLANTunnelAddr": "192.168.224.192",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "providerID": "azure:///subscriptions/4f566413-8688-40c7-913b-56a07c177568/resourceGroups/mc_anandhakumarg-testing_wow-testing_eastus/providers/Microsoft.Compute/virtualMachineScaleSets/aks-agentpool-29385454-vmss/virtualMachines/8"
            },
            "status": {
                "capacity": {
                    "cpu": "4",
                    "ephemeral-storage": "129886128Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "16373516Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "3860m",
                    "ephemeral-storage": "119703055367",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "13967116Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "NetworkUnavailable",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:19:32Z",
                        "lastTransitionTime": "2024-10-02T22:19:32Z",
                        "reason": "CalicoIsUp",
                        "message": "Calico is running on this node"
                    },
                    {
                        "type": "ContainerRuntimeProblem",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:08Z",
                        "lastTransitionTime": "2024-10-02T22:18:53Z",
                        "reason": "ContainerRuntimeIsUp",
                        "message": "container runtime service is up"
                    },
                    {
                        "type": "FrequentKubeletRestart",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:08Z",
                        "lastTransitionTime": "2024-10-02T22:18:53Z",
                        "reason": "NoFrequentKubeletRestart",
                        "message": "kubelet is functioning properly"
                    },
                    {
                        "type": "KernelDeadlock",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:08Z",
                        "lastTransitionTime": "2024-10-02T22:18:53Z",
                        "reason": "KernelHasNoDeadlock",
                        "message": "kernel has no deadlock"
                    },
                    {
                        "type": "FilesystemCorruptionProblem",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:08Z",
                        "lastTransitionTime": "2024-10-02T22:18:53Z",
                        "reason": "FilesystemIsOK",
                        "message": "Filesystem is healthy"
                    },
                    {
                        "type": "FrequentUnregisterNetDevice",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:08Z",
                        "lastTransitionTime": "2024-10-02T22:18:53Z",
                        "reason": "NoFrequentUnregisterNetDevice",
                        "message": "node is functioning properly"
                    },
                    {
                        "type": "KubeletProblem",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:08Z",
                        "lastTransitionTime": "2024-10-02T22:18:53Z",
                        "reason": "KubeletIsUp",
                        "message": "kubelet service is up"
                    },
                    {
                        "type": "VMEventScheduled",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:08Z",
                        "lastTransitionTime": "2024-10-02T22:20:05Z",
                        "reason": "NoVMEventScheduled",
                        "message": "VM has no scheduled event"
                    },
                    {
                        "type": "FrequentContainerdRestart",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:08Z",
                        "lastTransitionTime": "2024-10-02T22:18:53Z",
                        "reason": "NoFrequentContainerdRestart",
                        "message": "containerd is functioning properly"
                    },
                    {
                        "type": "FrequentDockerRestart",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:08Z",
                        "lastTransitionTime": "2024-10-02T22:18:53Z",
                        "reason": "NoFrequentDockerRestart",
                        "message": "docker is functioning properly"
                    },
                    {
                        "type": "ReadonlyFilesystem",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:08Z",
                        "lastTransitionTime": "2024-10-02T22:18:53Z",
                        "reason": "FilesystemIsNotReadOnly",
                        "message": "Filesystem is not read-only"
                    },
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:32:01Z",
                        "lastTransitionTime": "2024-10-02T22:18:45Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:32:01Z",
                        "lastTransitionTime": "2024-10-02T22:18:45Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:32:01Z",
                        "lastTransitionTime": "2024-10-02T22:18:45Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2024-10-02T22:32:01Z",
                        "lastTransitionTime": "2024-10-02T22:19:03Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status. AppArmor enabled"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "10.224.0.5"
                    },
                    {
                        "type": "Hostname",
                        "address": "aks-agentpool-29385454-vmss000008"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "4f9d418cc861428f87d25f9659ba03b4",
                    "systemUUID": "ac11be53-bb47-4484-aa0f-91a1884c82f5",
                    "bootID": "c21820b7-eeb6-4806-9bcc-e7125e567f74",
                    "kernelVersion": "5.15.0-1071-azure",
                    "osImage": "Ubuntu 22.04.4 LTS",
                    "containerRuntimeVersion": "containerd://1.7.20-1",
                    "kubeletVersion": "v1.29.8",
                    "kubeProxyVersion": "v1.29.8",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.9.0-main-07-22-2024-2e3dfb56"
                        ],
                        "sizeBytes": 292423046
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.23"
                        ],
                        "sizeBytes": 288925625
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.14.10-1"
                        ],
                        "sizeBytes": 210876979
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.14.10-2"
                        ],
                        "sizeBytes": 210876677
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.13.13-3"
                        ],
                        "sizeBytes": 202611344
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.13.13-4"
                        ],
                        "sizeBytes": 202610732
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns@sha256:ac90bb442344ffe0a5c023bc1eab12d577cca16051d9e5ece14871b0c987d85c",
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.5.35"
                        ],
                        "sizeBytes": 200043473
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.5.32"
                        ],
                        "sizeBytes": 196792877
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.6.0"
                        ],
                        "sizeBytes": 189191787
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.24.2"
                        ],
                        "sizeBytes": 176633304
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.23.5"
                        ],
                        "sizeBytes": 174847128
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.4.52"
                        ],
                        "sizeBytes": 170896608
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.24.3"
                        ],
                        "sizeBytes": 160737601
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.23.7"
                        ],
                        "sizeBytes": 160577936
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.9.0-main-07-22-2024-2e3dfb56-cfg"
                        ],
                        "sizeBytes": 159017892
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.22.8"
                        ],
                        "sizeBytes": 141323090
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.22.7"
                        ],
                        "sizeBytes": 139595698
                    },
                    {
                        "names": [
                            "docker.io/calico/node@sha256:856ac0c261160e7bb967ab43b31598fa89633b33eb2ee292e17384272d929e22",
                            "docker.io/calico/node:v3.28.2"
                        ],
                        "sizeBytes": 119828494
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.3"
                        ],
                        "sizeBytes": 115136723
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.11"
                        ],
                        "sizeBytes": 112714792
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/nvidia/k8s-device-plugin:v0.14.5"
                        ],
                        "sizeBytes": 108115825
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5"
                        ],
                        "sizeBytes": 101209176
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.7"
                        ],
                        "sizeBytes": 100885970
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-npm:v1.5.34"
                        ],
                        "sizeBytes": 99868850
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.8"
                        ],
                        "sizeBytes": 99151288
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.12"
                        ],
                        "sizeBytes": 98438729
                    },
                    {
                        "names": [
                            "docker.io/calico/cni@sha256:04bd5d80c32a8751f3f4694fef04a50f20c4fed5e4e8b7c7cce752c79702baf3",
                            "docker.io/calico/cni:v3.28.2"
                        ],
                        "sizeBytes": 94697321
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8"
                        ],
                        "sizeBytes": 84190638
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cni:v1.6.0"
                        ],
                        "sizeBytes": 81035839
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cni:v1.6.3"
                        ],
                        "sizeBytes": 81009966
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cni:v1.5.32"
                        ],
                        "sizeBytes": 80972699
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cni@sha256:a69e900899bef0e71d240503ef07ccb0f5e85b5eb25bb9f52212a3f2c31ab63b",
                            "mcr.microsoft.com/containernetworking/azure-cni:v1.5.35"
                        ],
                        "sizeBytes": 80965499
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/cni-dropgz:v0.2.0"
                        ],
                        "sizeBytes": 78047521
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/cni-dropgz:v0.1.4"
                        ],
                        "sizeBytes": 77995066
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/cni-dropgz:v0.0.20"
                        ],
                        "sizeBytes": 73005201
                    },
                    {
                        "names": [
                            "docker.io/library/nginx@sha256:b5d3f3e104699f0768e5ca8626914c16e52647943c65274d8a9e63072bd015bb",
                            "docker.io/library/nginx:latest"
                        ],
                        "sizeBytes": 71027638
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.4"
                        ],
                        "sizeBytes": 66365652
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.3"
                        ],
                        "sizeBytes": 66355894
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/secrets-store/driver:v1.4.3-2"
                        ],
                        "sizeBytes": 64871234
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.6.3"
                        ],
                        "sizeBytes": 63589966
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.8"
                        ],
                        "sizeBytes": 60948524
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9"
                        ],
                        "sizeBytes": 60938870
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.9"
                        ],
                        "sizeBytes": 60000772
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.10"
                        ],
                        "sizeBytes": 59956860
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/secrets-store/driver:v1.4.5"
                        ],
                        "sizeBytes": 58014500
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/secrets-store/driver:v1.4.4"
                        ],
                        "sizeBytes": 56358199
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.11.0"
                        ],
                        "sizeBytes": 44388499
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/open-policy-agent/gatekeeper:v3.16.3"
                        ],
                        "sizeBytes": 41536431
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.9.0-main-07-22-2024-2e3dfb56-targetallocator"
                        ],
                        "sizeBytes": 40769671
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.9"
                        ],
                        "sizeBytes": 39459245
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "20d30808-e32f-4192-81d6-b0f2752e0a99",
                "resourceVersion": "432828",
                "creationTimestamp": "2024-10-02T22:18:36Z",
                "labels": {
                    "agentpool": "agentpool",
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/instance-type": "Standard_D4ds_v5",
                    "beta.kubernetes.io/os": "linux",
                    "failure-domain.beta.kubernetes.io/region": "eastus",
                    "failure-domain.beta.kubernetes.io/zone": "0",
                    "kubernetes.azure.com/agentpool": "agentpool",
                    "kubernetes.azure.com/azure-cni-overlay": "true",
                    "kubernetes.azure.com/cluster": "MC_AnandhakumarG-Testing_wow-testing_eastus",
                    "kubernetes.azure.com/consolidated-additional-properties": "af04ce88-7e75-11ef-a997-a2c20eeae127",
                    "kubernetes.azure.com/kubelet-identity-client-id": "a4ef42de-7a87-4554-82fc-d47316488e9d",
                    "kubernetes.azure.com/mode": "system",
                    "kubernetes.azure.com/network-name": "aks-vnet-15172029",
                    "kubernetes.azure.com/network-resourcegroup": "AnandhakumarG-Testing",
                    "kubernetes.azure.com/network-subnet": "aks-subnet",
                    "kubernetes.azure.com/network-subscription": "4f566413-8688-40c7-913b-56a07c177568",
                    "kubernetes.azure.com/node-image-version": "AKSUbuntu-2204gen2containerd-202409.09.0",
                    "kubernetes.azure.com/nodenetwork-vnetguid": "21d878fb-b97d-425e-bc37-cfadceaa86bb",
                    "kubernetes.azure.com/nodepool-type": "VirtualMachineScaleSets",
                    "kubernetes.azure.com/os-sku": "Ubuntu",
                    "kubernetes.azure.com/podnetwork-type": "overlay",
                    "kubernetes.azure.com/role": "agent",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "aks-agentpool-29385454-vmss000009",
                    "kubernetes.io/os": "linux",
                    "node.kubernetes.io/instance-type": "Standard_D4ds_v5",
                    "topology.disk.csi.azure.com/zone": "",
                    "topology.kubernetes.io/region": "eastus",
                    "topology.kubernetes.io/zone": "0"
                },
                "annotations": {
                    "alpha.kubernetes.io/provided-node-ip": "10.224.0.4",
                    "csi.volume.kubernetes.io/nodeid": "{\"csi.tigera.io\":\"aks-agentpool-29385454-vmss000009\",\"disk.csi.azure.com\":\"aks-agentpool-29385454-vmss000009\",\"file.csi.azure.com\":\"aks-agentpool-29385454-vmss000009\"}",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "projectcalico.org/IPv4Address": "10.224.0.4/16",
                    "projectcalico.org/IPv4IPIPTunnelAddr": "10.0.24.128",
                    "projectcalico.org/IPv4VXLANTunnelAddr": "192.168.204.192",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "providerID": "azure:///subscriptions/4f566413-8688-40c7-913b-56a07c177568/resourceGroups/mc_anandhakumarg-testing_wow-testing_eastus/providers/Microsoft.Compute/virtualMachineScaleSets/aks-agentpool-29385454-vmss/virtualMachines/9"
            },
            "status": {
                "capacity": {
                    "cpu": "4",
                    "ephemeral-storage": "129886128Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "16373520Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "3860m",
                    "ephemeral-storage": "119703055367",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "13967120Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "NetworkUnavailable",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:19:26Z",
                        "lastTransitionTime": "2024-10-02T22:19:26Z",
                        "reason": "CalicoIsUp",
                        "message": "Calico is running on this node"
                    },
                    {
                        "type": "FilesystemCorruptionProblem",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:39Z",
                        "lastTransitionTime": "2024-10-02T22:18:43Z",
                        "reason": "FilesystemIsOK",
                        "message": "Filesystem is healthy"
                    },
                    {
                        "type": "ReadonlyFilesystem",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:39Z",
                        "lastTransitionTime": "2024-10-02T22:18:43Z",
                        "reason": "FilesystemIsNotReadOnly",
                        "message": "Filesystem is not read-only"
                    },
                    {
                        "type": "VMEventScheduled",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:39Z",
                        "lastTransitionTime": "2024-10-02T22:20:37Z",
                        "reason": "NoVMEventScheduled",
                        "message": "VM has no scheduled event"
                    },
                    {
                        "type": "FrequentKubeletRestart",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:39Z",
                        "lastTransitionTime": "2024-10-02T22:18:42Z",
                        "reason": "NoFrequentKubeletRestart",
                        "message": "kubelet is functioning properly"
                    },
                    {
                        "type": "FrequentContainerdRestart",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:39Z",
                        "lastTransitionTime": "2024-10-02T22:18:42Z",
                        "reason": "NoFrequentContainerdRestart",
                        "message": "containerd is functioning properly"
                    },
                    {
                        "type": "ContainerRuntimeProblem",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:39Z",
                        "lastTransitionTime": "2024-10-02T22:18:42Z",
                        "reason": "ContainerRuntimeIsUp",
                        "message": "container runtime service is up"
                    },
                    {
                        "type": "FrequentDockerRestart",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:39Z",
                        "lastTransitionTime": "2024-10-02T22:18:42Z",
                        "reason": "NoFrequentDockerRestart",
                        "message": "docker is functioning properly"
                    },
                    {
                        "type": "KernelDeadlock",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:39Z",
                        "lastTransitionTime": "2024-10-02T22:18:43Z",
                        "reason": "KernelHasNoDeadlock",
                        "message": "kernel has no deadlock"
                    },
                    {
                        "type": "KubeletProblem",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:39Z",
                        "lastTransitionTime": "2024-10-02T22:18:42Z",
                        "reason": "KubeletIsUp",
                        "message": "kubelet service is up"
                    },
                    {
                        "type": "FrequentUnregisterNetDevice",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:30:39Z",
                        "lastTransitionTime": "2024-10-02T22:18:42Z",
                        "reason": "NoFrequentUnregisterNetDevice",
                        "message": "node is functioning properly"
                    },
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:29:51Z",
                        "lastTransitionTime": "2024-10-02T22:18:36Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:29:51Z",
                        "lastTransitionTime": "2024-10-02T22:18:36Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2024-10-02T22:29:51Z",
                        "lastTransitionTime": "2024-10-02T22:18:36Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2024-10-02T22:29:51Z",
                        "lastTransitionTime": "2024-10-02T22:18:53Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status. AppArmor enabled"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "10.224.0.4"
                    },
                    {
                        "type": "Hostname",
                        "address": "aks-agentpool-29385454-vmss000009"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "1e1ee09f599a4f568f60b2d3b1fcd09e",
                    "systemUUID": "72cf248b-240b-46d5-a7da-becab7b12c4b",
                    "bootID": "d9a25904-1bf1-4bc1-8bfa-83f216504923",
                    "kernelVersion": "5.15.0-1071-azure",
                    "osImage": "Ubuntu 22.04.4 LTS",
                    "containerRuntimeVersion": "containerd://1.7.20-1",
                    "kubeletVersion": "v1.29.8",
                    "kubeProxyVersion": "v1.29.8",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "docker.io/dhubtesting/testing@sha256:32c1aa29a81a78464c67e7a5de2d78f58151bf9820d2e2d95f3a2776da2e9239",
                            "docker.io/dhubtesting/testing:flask"
                        ],
                        "sizeBytes": 523396855
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.9.0-main-07-22-2024-2e3dfb56"
                        ],
                        "sizeBytes": 292423046
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.23"
                        ],
                        "sizeBytes": 288925625
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.14.10-1"
                        ],
                        "sizeBytes": 210876979
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.14.10-2"
                        ],
                        "sizeBytes": 210876677
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.13.13-3"
                        ],
                        "sizeBytes": 202611344
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/cilium/cilium:1.13.13-4"
                        ],
                        "sizeBytes": 202610732
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns@sha256:ac90bb442344ffe0a5c023bc1eab12d577cca16051d9e5ece14871b0c987d85c",
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.5.35"
                        ],
                        "sizeBytes": 200043473
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.5.32"
                        ],
                        "sizeBytes": 196792877
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.6.0"
                        ],
                        "sizeBytes": 189191787
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.24.2"
                        ],
                        "sizeBytes": 176633304
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.23.5"
                        ],
                        "sizeBytes": 174847128
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.4.52"
                        ],
                        "sizeBytes": 170896608
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.24.3"
                        ],
                        "sizeBytes": 160737601
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.23.7"
                        ],
                        "sizeBytes": 160577936
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/azuremonitor/containerinsights/ciprod/prometheus-collector/images:6.9.0-main-07-22-2024-2e3dfb56-cfg"
                        ],
                        "sizeBytes": 159017892
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.22.8"
                        ],
                        "sizeBytes": 141323090
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/blob-csi:v1.22.7"
                        ],
                        "sizeBytes": 139595698
                    },
                    {
                        "names": [
                            "docker.io/calico/node@sha256:856ac0c261160e7bb967ab43b31598fa89633b33eb2ee292e17384272d929e22",
                            "docker.io/calico/node:v3.28.2"
                        ],
                        "sizeBytes": 119828494
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.3"
                        ],
                        "sizeBytes": 115136723
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.11"
                        ],
                        "sizeBytes": 112714792
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/nvidia/k8s-device-plugin:v0.14.5"
                        ],
                        "sizeBytes": 108115825
                    },
                    {
                        "names": [
                            "registry.k8s.io/ingress-nginx/controller@sha256:d5f8217feeac4887cb1ed21f27c2674e58be06bd8f5184cacea2a69abaf78dce"
                        ],
                        "sizeBytes": 105405235
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5"
                        ],
                        "sizeBytes": 101209176
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.7"
                        ],
                        "sizeBytes": 100885970
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-npm:v1.5.34"
                        ],
                        "sizeBytes": 99868850
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.29.8"
                        ],
                        "sizeBytes": 99151288
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.28.12"
                        ],
                        "sizeBytes": 98438729
                    },
                    {
                        "names": [
                            "docker.io/calico/cni@sha256:04bd5d80c32a8751f3f4694fef04a50f20c4fed5e4e8b7c7cce752c79702baf3",
                            "docker.io/calico/cni:v3.28.2"
                        ],
                        "sizeBytes": 94697321
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8"
                        ],
                        "sizeBytes": 84190638
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cni:v1.6.0"
                        ],
                        "sizeBytes": 81035839
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cni:v1.6.3"
                        ],
                        "sizeBytes": 81009966
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cni:v1.5.32"
                        ],
                        "sizeBytes": 80972699
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cni@sha256:a69e900899bef0e71d240503ef07ccb0f5e85b5eb25bb9f52212a3f2c31ab63b",
                            "mcr.microsoft.com/containernetworking/azure-cni:v1.5.35"
                        ],
                        "sizeBytes": 80965499
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/cni-dropgz:v0.2.0"
                        ],
                        "sizeBytes": 78047521
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/cni-dropgz:v0.1.4"
                        ],
                        "sizeBytes": 77995066
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/cni-dropgz:v0.0.20"
                        ],
                        "sizeBytes": 73005201
                    },
                    {
                        "names": [
                            "docker.io/library/nginx@sha256:b5d3f3e104699f0768e5ca8626914c16e52647943c65274d8a9e63072bd015bb",
                            "docker.io/library/nginx:latest"
                        ],
                        "sizeBytes": 71027638
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.4"
                        ],
                        "sizeBytes": 66365652
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.3"
                        ],
                        "sizeBytes": 66355894
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/secrets-store/driver:v1.4.3-2"
                        ],
                        "sizeBytes": 64871234
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/containernetworking/azure-cns:v1.6.3"
                        ],
                        "sizeBytes": 63589966
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.8"
                        ],
                        "sizeBytes": 60948524
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9"
                        ],
                        "sizeBytes": 60938870
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.9"
                        ],
                        "sizeBytes": 60000772
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.28.10"
                        ],
                        "sizeBytes": 59956860
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/secrets-store/driver:v1.4.5"
                        ],
                        "sizeBytes": 58014500
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes-csi/secrets-store/driver:v1.4.4"
                        ],
                        "sizeBytes": 56358199
                    },
                    {
                        "names": [
                            "mcr.microsoft.com/oss/kubernetes/kube-state-metrics:v2.11.0"
                        ],
                        "sizeBytes": 44388499
                    },
                    {
                        "names": [
                            "docker.io/calico/apiserver@sha256:0c0c7727d2222222593542886605949803cb2742287ea8abeba02b45d521eb1e",
                            "docker.io/calico/apiserver:v3.28.2"
                        ],
                        "sizeBytes": 41915485
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "433790"
    },
    "items": [
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2bd3edeb5ae",
                "namespace": "kube-system",
                "uid": "5a252549-4d83-4c7a-b247-909f63e3e7d0",
                "resourceVersion": "428883",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "NodeNetworkConfig",
                "namespace": "kube-system",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "1d0fbb97-725d-4c58-b8e8-7d2965412415",
                "apiVersion": "acn.azure.com/v1alpha",
                "resourceVersion": "428868"
            },
            "reason": "CreatingNC",
            "message": "Creating new Overlay NC 21e9b822-3f81-4efb-859b-29f22a26b883 for node 66f96f19c6af3f0001134126_aks-agentpool-29385454-vmss000008",
            "source": {
                "component": "dnc-rc/nnc-reconciler"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "dnc-rc/nnc-reconciler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2bd7f138325",
                "namespace": "kube-system",
                "uid": "f8a2d599-50a5-4923-84ad-45dc5d2328de",
                "resourceVersion": "428955",
                "creationTimestamp": "2024-10-02T22:18:46Z"
            },
            "involvedObject": {
                "kind": "NodeNetworkConfig",
                "namespace": "kube-system",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "1d0fbb97-725d-4c58-b8e8-7d2965412415",
                "apiVersion": "acn.azure.com/v1alpha",
                "resourceVersion": "428868"
            },
            "reason": "UpdatedNC",
            "message": "Published NC 21e9b822-3f81-4efb-859b-29f22a26b883",
            "source": {
                "component": "dnc-rc/nnc-reconciler"
            },
            "firstTimestamp": "2024-10-02T22:18:46Z",
            "lastTimestamp": "2024-10-02T22:18:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "dnc-rc/nnc-reconciler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2bb4b49b053",
                "namespace": "kube-system",
                "uid": "679cf31b-522b-47cf-8b08-f6215f97335b",
                "resourceVersion": "428690",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "NodeNetworkConfig",
                "namespace": "kube-system",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "b88adfc9-ebb0-4c07-b510-ee903a0128df",
                "apiVersion": "acn.azure.com/v1alpha",
                "resourceVersion": "428662"
            },
            "reason": "CreatingNC",
            "message": "Creating new Overlay NC 4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d for node 66f96f19c6af3f0001134126_aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "dnc-rc/nnc-reconciler"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "dnc-rc/nnc-reconciler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2bb8b5541cf",
                "namespace": "kube-system",
                "uid": "c3b03313-d44b-4979-be8e-224e17b83138",
                "resourceVersion": "428724",
                "creationTimestamp": "2024-10-02T22:18:37Z"
            },
            "involvedObject": {
                "kind": "NodeNetworkConfig",
                "namespace": "kube-system",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "b88adfc9-ebb0-4c07-b510-ee903a0128df",
                "apiVersion": "acn.azure.com/v1alpha",
                "resourceVersion": "428662"
            },
            "reason": "UpdatedNC",
            "message": "Published NC 4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d",
            "source": {
                "component": "dnc-rc/nnc-reconciler"
            },
            "firstTimestamp": "2024-10-02T22:18:37Z",
            "lastTimestamp": "2024-10-02T22:18:37Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "dnc-rc/nnc-reconciler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "azure-cns-c455t.17fac2bd3e386d90",
                "namespace": "kube-system",
                "uid": "baef4693-971e-4234-8606-9547d3dd9d62",
                "resourceVersion": "428878",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-c455t",
                "uid": "a0ebafa1-53dd-42ca-8753-0883e893c119",
                "apiVersion": "v1",
                "resourceVersion": "428872"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/azure-cns-c455t to aks-agentpool-29385454-vmss000008",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "azure-cns-c455t.17fac2be41b3649a",
                "namespace": "kube-system",
                "uid": "2d2cc86d-144c-4e2c-9aff-0af15f9ccbb3",
                "resourceVersion": "428984",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-c455t",
                "uid": "a0ebafa1-53dd-42ca-8753-0883e893c119",
                "apiVersion": "v1",
                "resourceVersion": "428875",
                "fieldPath": "spec.initContainers{cni-installer}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/containernetworking/azure-cni:v1.5.35\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "azure-cns-c455t.17fac2bed5d742e9",
                "namespace": "kube-system",
                "uid": "42fa5d00-02e0-49da-8ef6-e53538d881cb",
                "resourceVersion": "429117",
                "creationTimestamp": "2024-10-02T22:18:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-c455t",
                "uid": "a0ebafa1-53dd-42ca-8753-0883e893c119",
                "apiVersion": "v1",
                "resourceVersion": "428875",
                "fieldPath": "spec.initContainers{cni-installer}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/containernetworking/azure-cni:v1.5.35\" in 2.023s (2.485s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:51Z",
            "lastTimestamp": "2024-10-02T22:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "azure-cns-c455t.17fac2bed6bcc881",
                "namespace": "kube-system",
                "uid": "d946828f-1326-4c4a-a92e-937a56cf3b56",
                "resourceVersion": "429118",
                "creationTimestamp": "2024-10-02T22:18:51Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-c455t",
                "uid": "a0ebafa1-53dd-42ca-8753-0883e893c119",
                "apiVersion": "v1",
                "resourceVersion": "428875",
                "fieldPath": "spec.initContainers{cni-installer}"
            },
            "reason": "Created",
            "message": "Created container cni-installer",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:51Z",
            "lastTimestamp": "2024-10-02T22:18:51Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "azure-cns-c455t.17fac2bed99ec768",
                "namespace": "kube-system",
                "uid": "43d49875-adff-424f-ba37-429044f69dfa",
                "resourceVersion": "429120",
                "creationTimestamp": "2024-10-02T22:18:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-c455t",
                "uid": "a0ebafa1-53dd-42ca-8753-0883e893c119",
                "apiVersion": "v1",
                "resourceVersion": "428875",
                "fieldPath": "spec.initContainers{cni-installer}"
            },
            "reason": "Started",
            "message": "Started container cni-installer",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:52Z",
            "lastTimestamp": "2024-10-02T22:18:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "azure-cns-c455t.17fac2bf16444f11",
                "namespace": "kube-system",
                "uid": "b2928a37-2e82-4d96-97a8-55b7392f81cb",
                "resourceVersion": "429137",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-c455t",
                "uid": "a0ebafa1-53dd-42ca-8753-0883e893c119",
                "apiVersion": "v1",
                "resourceVersion": "428875",
                "fieldPath": "spec.containers{cns-container}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/containernetworking/azure-cns:v1.5.35\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "azure-cns-c455t.17fac2c0606aed89",
                "namespace": "kube-system",
                "uid": "a5ab6465-872e-4dee-b473-4c37c4a38591",
                "resourceVersion": "429355",
                "creationTimestamp": "2024-10-02T22:18:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-c455t",
                "uid": "a0ebafa1-53dd-42ca-8753-0883e893c119",
                "apiVersion": "v1",
                "resourceVersion": "428875",
                "fieldPath": "spec.containers{cns-container}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/containernetworking/azure-cns:v1.5.35\" in 1.876s (5.538s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:58Z",
            "lastTimestamp": "2024-10-02T22:18:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "azure-cns-c455t.17fac2c060dad2db",
                "namespace": "kube-system",
                "uid": "e9e19c15-4b73-4b68-9901-046dc8b397f5",
                "resourceVersion": "429356",
                "creationTimestamp": "2024-10-02T22:18:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-c455t",
                "uid": "a0ebafa1-53dd-42ca-8753-0883e893c119",
                "apiVersion": "v1",
                "resourceVersion": "428875",
                "fieldPath": "spec.containers{cns-container}"
            },
            "reason": "Created",
            "message": "Created container cns-container",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:58Z",
            "lastTimestamp": "2024-10-02T22:18:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "azure-cns-c455t.17fac2c062aa70f7",
                "namespace": "kube-system",
                "uid": "0c2f851d-9e9c-4ac5-9aa8-9362f07eba40",
                "resourceVersion": "429357",
                "creationTimestamp": "2024-10-02T22:18:58Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-c455t",
                "uid": "a0ebafa1-53dd-42ca-8753-0883e893c119",
                "apiVersion": "v1",
                "resourceVersion": "428875",
                "fieldPath": "spec.containers{cns-container}"
            },
            "reason": "Started",
            "message": "Started container cns-container",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:58Z",
            "lastTimestamp": "2024-10-02T22:18:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "azure-cns-xrz8n.17fac2bb4d7e3eb4",
                "namespace": "kube-system",
                "uid": "4ea2fce7-9278-4000-a004-f649517cca03",
                "resourceVersion": "428703",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-xrz8n",
                "uid": "8ba6f194-f512-4db6-a03e-38e47887e096",
                "apiVersion": "v1",
                "resourceVersion": "428698"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/azure-cns-xrz8n to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "azure-cns-xrz8n.17fac2bbe4f8ffb7",
                "namespace": "kube-system",
                "uid": "e297055c-6084-4500-a565-113d1301719d",
                "resourceVersion": "428735",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-xrz8n",
                "uid": "8ba6f194-f512-4db6-a03e-38e47887e096",
                "apiVersion": "v1",
                "resourceVersion": "428701",
                "fieldPath": "spec.initContainers{cni-installer}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/containernetworking/azure-cni:v1.5.35\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "azure-cns-xrz8n.17fac2bc9942cd1e",
                "namespace": "kube-system",
                "uid": "ea73dce1-1d6a-43e0-bbd0-5d7171e09568",
                "resourceVersion": "428814",
                "creationTimestamp": "2024-10-02T22:18:42Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-xrz8n",
                "uid": "8ba6f194-f512-4db6-a03e-38e47887e096",
                "apiVersion": "v1",
                "resourceVersion": "428701",
                "fieldPath": "spec.initContainers{cni-installer}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/containernetworking/azure-cni:v1.5.35\" in 892ms (3.024s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:42Z",
            "lastTimestamp": "2024-10-02T22:18:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "azure-cns-xrz8n.17fac2bc99b4947d",
                "namespace": "kube-system",
                "uid": "5a527d23-5c60-42b0-9677-2205b7e80171",
                "resourceVersion": "428815",
                "creationTimestamp": "2024-10-02T22:18:42Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-xrz8n",
                "uid": "8ba6f194-f512-4db6-a03e-38e47887e096",
                "apiVersion": "v1",
                "resourceVersion": "428701",
                "fieldPath": "spec.initContainers{cni-installer}"
            },
            "reason": "Created",
            "message": "Created container cni-installer",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:42Z",
            "lastTimestamp": "2024-10-02T22:18:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "azure-cns-xrz8n.17fac2bcb6c64ac1",
                "namespace": "kube-system",
                "uid": "127224b1-eb8c-482c-aa93-3170c6ca0656",
                "resourceVersion": "428820",
                "creationTimestamp": "2024-10-02T22:18:42Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-xrz8n",
                "uid": "8ba6f194-f512-4db6-a03e-38e47887e096",
                "apiVersion": "v1",
                "resourceVersion": "428701",
                "fieldPath": "spec.initContainers{cni-installer}"
            },
            "reason": "Started",
            "message": "Started container cni-installer",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:42Z",
            "lastTimestamp": "2024-10-02T22:18:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "azure-cns-xrz8n.17fac2bd1fb7d864",
                "namespace": "kube-system",
                "uid": "4b40162a-1f3c-4bdc-8660-023d129a6b77",
                "resourceVersion": "428840",
                "creationTimestamp": "2024-10-02T22:18:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-xrz8n",
                "uid": "8ba6f194-f512-4db6-a03e-38e47887e096",
                "apiVersion": "v1",
                "resourceVersion": "428701",
                "fieldPath": "spec.containers{cns-container}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/containernetworking/azure-cns:v1.5.35\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:44Z",
            "lastTimestamp": "2024-10-02T22:18:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "azure-cns-xrz8n.17fac2bdeda2623e",
                "namespace": "kube-system",
                "uid": "c7e43af3-a40f-4d2f-b9f1-599b9e9b46ab",
                "resourceVersion": "428970",
                "creationTimestamp": "2024-10-02T22:18:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-xrz8n",
                "uid": "8ba6f194-f512-4db6-a03e-38e47887e096",
                "apiVersion": "v1",
                "resourceVersion": "428701",
                "fieldPath": "spec.containers{cns-container}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/containernetworking/azure-cns:v1.5.35\" in 2.645s (3.454s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:48Z",
            "lastTimestamp": "2024-10-02T22:18:48Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "azure-cns-xrz8n.17fac2bdee60530a",
                "namespace": "kube-system",
                "uid": "69550dab-e1f7-49aa-a014-2cc5e133a4fb",
                "resourceVersion": "428971",
                "creationTimestamp": "2024-10-02T22:18:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-xrz8n",
                "uid": "8ba6f194-f512-4db6-a03e-38e47887e096",
                "apiVersion": "v1",
                "resourceVersion": "428701",
                "fieldPath": "spec.containers{cns-container}"
            },
            "reason": "Created",
            "message": "Created container cns-container",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:48Z",
            "lastTimestamp": "2024-10-02T22:18:48Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "azure-cns-xrz8n.17fac2bdf1aa84b6",
                "namespace": "kube-system",
                "uid": "844dcbc9-3ad8-4dcb-94e8-cf8a49e58a85",
                "resourceVersion": "428972",
                "creationTimestamp": "2024-10-02T22:18:48Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-cns-xrz8n",
                "uid": "8ba6f194-f512-4db6-a03e-38e47887e096",
                "apiVersion": "v1",
                "resourceVersion": "428701",
                "fieldPath": "spec.containers{cns-container}"
            },
            "reason": "Started",
            "message": "Started container cns-container",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:48Z",
            "lastTimestamp": "2024-10-02T22:18:48Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "azure-cns.17fac2bb4d0c929c",
                "namespace": "kube-system",
                "uid": "ea904b20-c2c0-457c-9a2b-43ed1d9d44b3",
                "resourceVersion": "428700",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "azure-cns",
                "uid": "62d97116-0ce9-4f44-8703-8dd5a8e4f2af",
                "apiVersion": "apps/v1",
                "resourceVersion": "428473"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: azure-cns-xrz8n",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "azure-cns.17fac2bd3d9266b6",
                "namespace": "kube-system",
                "uid": "36f1a217-7883-4211-9b90-991a4972235b",
                "resourceVersion": "428874",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "azure-cns",
                "uid": "62d97116-0ce9-4f44-8703-8dd5a8e4f2af",
                "apiVersion": "apps/v1",
                "resourceVersion": "428708"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: azure-cns-c455t",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-dqfzl.17fac2bd3bee0131",
                "namespace": "kube-system",
                "uid": "217ba690-8f49-4fe2-981d-222b061492ab",
                "resourceVersion": "428862",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-dqfzl",
                "uid": "ae865b17-9b55-4a66-8a25-f575cb532a63",
                "apiVersion": "v1",
                "resourceVersion": "428852"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/azure-ip-masq-agent-dqfzl to aks-agentpool-29385454-vmss000008",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-dqfzl.17fac2be415116a6",
                "namespace": "kube-system",
                "uid": "0042b713-e5df-4d08-9111-e0358cd2a681",
                "resourceVersion": "428983",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-dqfzl",
                "uid": "ae865b17-9b55-4a66-8a25-f575cb532a63",
                "apiVersion": "v1",
                "resourceVersion": "428857",
                "fieldPath": "spec.containers{azure-ip-masq-agent}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.13\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-dqfzl.17fac2be45edba58",
                "namespace": "kube-system",
                "uid": "d1c6a6b2-63ba-440c-91c4-4b54f70bb00a",
                "resourceVersion": "428989",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-dqfzl",
                "uid": "ae865b17-9b55-4a66-8a25-f575cb532a63",
                "apiVersion": "v1",
                "resourceVersion": "428857",
                "fieldPath": "spec.containers{azure-ip-masq-agent}"
            },
            "reason": "Created",
            "message": "Created container azure-ip-masq-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-dqfzl.17fac2be490c6f36",
                "namespace": "kube-system",
                "uid": "37118caa-fd5d-41da-865d-cd4e85c1fef2",
                "resourceVersion": "428991",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-dqfzl",
                "uid": "ae865b17-9b55-4a66-8a25-f575cb532a63",
                "apiVersion": "v1",
                "resourceVersion": "428857",
                "fieldPath": "spec.containers{azure-ip-masq-agent}"
            },
            "reason": "Started",
            "message": "Started container azure-ip-masq-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-g2j7r.17fac2bb47b77fc6",
                "namespace": "kube-system",
                "uid": "7c601588-ca2f-4e98-895a-c006cffa432e",
                "resourceVersion": "428669",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-g2j7r",
                "uid": "4a9f15c2-e48a-44be-a6f2-d3b3bc1edd5b",
                "apiVersion": "v1",
                "resourceVersion": "428661"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/azure-ip-masq-agent-g2j7r to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-g2j7r.17fac2bbe0aac238",
                "namespace": "kube-system",
                "uid": "39bd2fc2-1c31-48d4-a4b0-31c4cf165bbf",
                "resourceVersion": "428730",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-g2j7r",
                "uid": "4a9f15c2-e48a-44be-a6f2-d3b3bc1edd5b",
                "apiVersion": "v1",
                "resourceVersion": "428665",
                "fieldPath": "spec.containers{azure-ip-masq-agent}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.13\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-g2j7r.17fac2bbe7a32643",
                "namespace": "kube-system",
                "uid": "5b9c9e1f-0827-4b43-87aa-f87f73f0ce09",
                "resourceVersion": "428737",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-g2j7r",
                "uid": "4a9f15c2-e48a-44be-a6f2-d3b3bc1edd5b",
                "apiVersion": "v1",
                "resourceVersion": "428665",
                "fieldPath": "spec.containers{azure-ip-masq-agent}"
            },
            "reason": "Created",
            "message": "Created container azure-ip-masq-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-g2j7r.17fac2bbeda1a4b2",
                "namespace": "kube-system",
                "uid": "dbf66c30-baa7-42b7-986f-2bc70fcc1bd8",
                "resourceVersion": "428740",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent-g2j7r",
                "uid": "4a9f15c2-e48a-44be-a6f2-d3b3bc1edd5b",
                "apiVersion": "v1",
                "resourceVersion": "428665",
                "fieldPath": "spec.containers{azure-ip-masq-agent}"
            },
            "reason": "Started",
            "message": "Started container azure-ip-masq-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent.17fac2bb47168dc5",
                "namespace": "kube-system",
                "uid": "68bb5038-c4f1-4caf-aaf1-312c68cd7d10",
                "resourceVersion": "428668",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent",
                "uid": "60aba0f4-367f-40da-90e3-4b5df690d66f",
                "apiVersion": "apps/v1",
                "resourceVersion": "428472"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: azure-ip-masq-agent-g2j7r",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent.17fac2bd3b822447",
                "namespace": "kube-system",
                "uid": "053f045d-c5b0-4113-bb01-716e06eafc00",
                "resourceVersion": "428856",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "azure-ip-masq-agent",
                "uid": "60aba0f4-367f-40da-90e3-4b5df690d66f",
                "apiVersion": "apps/v1",
                "resourceVersion": "428748"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: azure-ip-masq-agent-dqfzl",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cert-manager-cainjector-leader-election.17fac2c55da4f52d",
                "namespace": "kube-system",
                "uid": "b9798424-379a-468f-a0bb-8ad0bae413ed",
                "resourceVersion": "429543",
                "creationTimestamp": "2024-10-02T22:19:19Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "cert-manager-cainjector-leader-election",
                "uid": "4b32905f-fa2c-47f4-a8c5-be487dd87ab8",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "429542"
            },
            "reason": "LeaderElection",
            "message": "cert-manager-cainjector-5f67bf667f-glzwn_cd894400-805e-4b2f-9abd-7031529990da became leader",
            "source": {
                "component": "cert-manager-cainjector-5f67bf667f-glzwn_cd894400-805e-4b2f-9abd-7031529990da"
            },
            "firstTimestamp": "2024-10-02T22:19:19Z",
            "lastTimestamp": "2024-10-02T22:19:19Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cert-manager-cainjector-5f67bf667f-glzwn_cd894400-805e-4b2f-9abd-7031529990da",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cert-manager-controller.17fac2c1a0663466",
                "namespace": "kube-system",
                "uid": "fdb3bc83-e13e-40df-b041-f10832462ffb",
                "resourceVersion": "429396",
                "creationTimestamp": "2024-10-02T22:19:03Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "cert-manager-controller",
                "uid": "a682512e-206d-4aca-8ced-fd5778f70f35",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "429395"
            },
            "reason": "LeaderElection",
            "message": "cert-manager-98c64c5bd-zfwvm-external-cert-manager-controller became leader",
            "source": {
                "component": "cert-manager-leader-election"
            },
            "firstTimestamp": "2024-10-02T22:19:03Z",
            "lastTimestamp": "2024-10-02T22:19:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cert-manager-leader-election",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cloud-controller-manager.17fac2b1365e2f49",
                "namespace": "kube-system",
                "uid": "9a34dfcf-f0fc-48b1-9eea-cf09134e1316",
                "resourceVersion": "428349",
                "creationTimestamp": "2024-10-02T22:17:53Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "cloud-controller-manager",
                "uid": "884eeecb-dc2a-48a6-88fe-a17d1f4a3ae8",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "428348"
            },
            "reason": "LeaderElection",
            "message": "cloud-controller-manager-86f6955df4-gv8qr_2fd2cd00-5205-4f21-ab69-f9f5cdc2f26f became leader",
            "source": {
                "component": "cloud-controller-manager"
            },
            "firstTimestamp": "2024-10-02T22:17:53Z",
            "lastTimestamp": "2024-10-02T22:17:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cloud-controller-manager",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cloud-node-manager-mdtqw.17fac2bd3d5b27d9",
                "namespace": "kube-system",
                "uid": "8d95a9f5-238e-4edd-966b-bae316a33a15",
                "resourceVersion": "428873",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-mdtqw",
                "uid": "51eb1728-18bc-4640-8aec-3ce616095ed1",
                "apiVersion": "v1",
                "resourceVersion": "428867"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/cloud-node-manager-mdtqw to aks-agentpool-29385454-vmss000008",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cloud-node-manager-mdtqw.17fac2be414fe04f",
                "namespace": "kube-system",
                "uid": "49a457ba-2b2d-4713-8cb1-aa6e15937be9",
                "resourceVersion": "428982",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-mdtqw",
                "uid": "51eb1728-18bc-4640-8aec-3ce616095ed1",
                "apiVersion": "v1",
                "resourceVersion": "428870",
                "fieldPath": "spec.containers{cloud-node-manager}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.29.9\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "cloud-node-manager-mdtqw.17fac2be49e4f990",
                "namespace": "kube-system",
                "uid": "703d27b7-a35c-4570-a675-58d57a61bdb0",
                "resourceVersion": "428992",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-mdtqw",
                "uid": "51eb1728-18bc-4640-8aec-3ce616095ed1",
                "apiVersion": "v1",
                "resourceVersion": "428870",
                "fieldPath": "spec.containers{cloud-node-manager}"
            },
            "reason": "Created",
            "message": "Created container cloud-node-manager",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "cloud-node-manager-mdtqw.17fac2be511e35e4",
                "namespace": "kube-system",
                "uid": "787e7a86-20ba-4281-a56e-867176c27342",
                "resourceVersion": "428993",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-mdtqw",
                "uid": "51eb1728-18bc-4640-8aec-3ce616095ed1",
                "apiVersion": "v1",
                "resourceVersion": "428870",
                "fieldPath": "spec.containers{cloud-node-manager}"
            },
            "reason": "Started",
            "message": "Started container cloud-node-manager",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "cloud-node-manager-tjt2c.17fac2bb47bc8362",
                "namespace": "kube-system",
                "uid": "e0af7bf8-229d-4fcb-970a-5804eef7d954",
                "resourceVersion": "428670",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-tjt2c",
                "uid": "6dddb651-7eeb-4dbf-9319-e215cac562fc",
                "apiVersion": "v1",
                "resourceVersion": "428660"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/cloud-node-manager-tjt2c to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cloud-node-manager-tjt2c.17fac2bbe3d32db0",
                "namespace": "kube-system",
                "uid": "af17be82-e6df-4f68-b822-037ad845c369",
                "resourceVersion": "428734",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-tjt2c",
                "uid": "6dddb651-7eeb-4dbf-9319-e215cac562fc",
                "apiVersion": "v1",
                "resourceVersion": "428663",
                "fieldPath": "spec.containers{cloud-node-manager}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.29.9\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "cloud-node-manager-tjt2c.17fac2bbe8ab6bf8",
                "namespace": "kube-system",
                "uid": "23b0a86b-814c-4549-8631-2b4755fa7d39",
                "resourceVersion": "428738",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-tjt2c",
                "uid": "6dddb651-7eeb-4dbf-9319-e215cac562fc",
                "apiVersion": "v1",
                "resourceVersion": "428663",
                "fieldPath": "spec.containers{cloud-node-manager}"
            },
            "reason": "Created",
            "message": "Created container cloud-node-manager",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "cloud-node-manager-tjt2c.17fac2bbf1ccf092",
                "namespace": "kube-system",
                "uid": "1810556f-616a-4bdd-a270-6a1a54d76126",
                "resourceVersion": "428743",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "cloud-node-manager-tjt2c",
                "uid": "6dddb651-7eeb-4dbf-9319-e215cac562fc",
                "apiVersion": "v1",
                "resourceVersion": "428663",
                "fieldPath": "spec.containers{cloud-node-manager}"
            },
            "reason": "Started",
            "message": "Started container cloud-node-manager",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "cloud-node-manager.17fac2bb4715e8ec",
                "namespace": "kube-system",
                "uid": "152cabc6-2b91-44b3-849d-9cc30c18b92b",
                "resourceVersion": "428664",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "cloud-node-manager",
                "uid": "c64a1005-475d-46e0-9381-a5442181079a",
                "apiVersion": "apps/v1",
                "resourceVersion": "428474"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: cloud-node-manager-tjt2c",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "cloud-node-manager.17fac2bd3cea190e",
                "namespace": "kube-system",
                "uid": "8c585db2-3518-4f30-bbc5-33778d390b93",
                "resourceVersion": "428869",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "cloud-node-manager",
                "uid": "c64a1005-475d-46e0-9381-a5442181079a",
                "apiVersion": "apps/v1",
                "resourceVersion": "428745"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: cloud-node-manager-mdtqw",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-g6br5.17fac26d46c5db8b",
                "namespace": "kube-system",
                "uid": "0387cc2a-6e49-4cf7-947e-134c4851ef04",
                "resourceVersion": "427932",
                "creationTimestamp": "2024-10-02T22:13:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-g6br5",
                "uid": "9180270d-2f50-4b4f-a936-8394b1cce9ca",
                "apiVersion": "v1",
                "resourceVersion": "199120",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Killing",
            "message": "Stopping container coredns",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000007"
            },
            "firstTimestamp": "2024-10-02T22:13:01Z",
            "lastTimestamp": "2024-10-02T22:13:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000007"
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-htf4m.17fac26d5351c8d5",
                "namespace": "kube-system",
                "uid": "22a03afc-3395-4197-b6a4-28fce885155f",
                "resourceVersion": "427956",
                "creationTimestamp": "2024-10-02T22:13:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-htf4m",
                "uid": "efbe04c5-eae1-4636-9c9c-5f1c3a1f64ad",
                "apiVersion": "v1",
                "resourceVersion": "427952"
            },
            "reason": "FailedScheduling",
            "message": "0/2 nodes are available: 2 node(s) were unschedulable. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Warning",
            "eventTime": "2024-10-02T22:13:01.855093Z",
            "action": "Scheduling",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-kube-scheduler-v2-84b957bb87-7p7l9"
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-htf4m.17fac26f6939a855",
                "namespace": "kube-system",
                "uid": "52305320-4bf9-4247-9790-e40c12c268cd",
                "resourceVersion": "428177",
                "creationTimestamp": "2024-10-02T22:13:10Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-htf4m",
                "uid": "efbe04c5-eae1-4636-9c9c-5f1c3a1f64ad",
                "apiVersion": "v1",
                "resourceVersion": "427953"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:13:10Z",
            "lastTimestamp": "2024-10-02T22:13:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-htf4m.17fac2ac59c8f7b9",
                "namespace": "kube-system",
                "uid": "37b4f82d-c29d-4e0e-a78b-d90e39467211",
                "resourceVersion": "428298",
                "creationTimestamp": "2024-10-02T22:17:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-htf4m",
                "uid": "efbe04c5-eae1-4636-9c9c-5f1c3a1f64ad",
                "apiVersion": "v1",
                "resourceVersion": "427953"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:17:32Z",
            "lastTimestamp": "2024-10-02T22:17:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-htf4m.17fac2b39894c112",
                "namespace": "kube-system",
                "uid": "2cc87c7f-89a2-4f9d-ac16-c42fcaffab91",
                "resourceVersion": "428599",
                "creationTimestamp": "2024-10-02T22:18:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-htf4m",
                "uid": "efbe04c5-eae1-4636-9c9c-5f1c3a1f64ad",
                "apiVersion": "v1",
                "resourceVersion": "427953"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:03Z",
            "lastTimestamp": "2024-10-02T22:18:28Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-htf4m.17fac2bbc01cd7e3",
                "namespace": "kube-system",
                "uid": "f772a909-22e5-4c06-836b-4d46d1624fd1",
                "resourceVersion": "428727",
                "creationTimestamp": "2024-10-02T22:18:38Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-htf4m",
                "uid": "efbe04c5-eae1-4636-9c9c-5f1c3a1f64ad",
                "apiVersion": "v1",
                "resourceVersion": "428384"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:38Z",
            "lastTimestamp": "2024-10-02T22:18:38Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-htf4m.17fac2bf4f76e384",
                "namespace": "kube-system",
                "uid": "c410aeab-3b3f-4989-be4e-cf247f41155e",
                "resourceVersion": "429180",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-htf4m",
                "uid": "efbe04c5-eae1-4636-9c9c-5f1c3a1f64ad",
                "apiVersion": "v1",
                "resourceVersion": "428728"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-597bb9d4db-htf4m to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-htf4m.17fac2bf82abbcb4",
                "namespace": "kube-system",
                "uid": "30590b73-b0d9-4ee4-8edf-cb96addfbf36",
                "resourceVersion": "429222",
                "creationTimestamp": "2024-10-02T22:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-htf4m",
                "uid": "efbe04c5-eae1-4636-9c9c-5f1c3a1f64ad",
                "apiVersion": "v1",
                "resourceVersion": "429163",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240704\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:54Z",
            "lastTimestamp": "2024-10-02T22:18:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-htf4m.17fac2bf84494b3b",
                "namespace": "kube-system",
                "uid": "ee8fa74f-5d1e-4d37-9bd2-b7ce05fffa64",
                "resourceVersion": "429223",
                "creationTimestamp": "2024-10-02T22:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-htf4m",
                "uid": "efbe04c5-eae1-4636-9c9c-5f1c3a1f64ad",
                "apiVersion": "v1",
                "resourceVersion": "429163",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:54Z",
            "lastTimestamp": "2024-10-02T22:18:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-htf4m.17fac2bf89f4b256",
                "namespace": "kube-system",
                "uid": "38c47b84-2184-442b-a5a0-56594fbf772b",
                "resourceVersion": "429226",
                "creationTimestamp": "2024-10-02T22:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-htf4m",
                "uid": "efbe04c5-eae1-4636-9c9c-5f1c3a1f64ad",
                "apiVersion": "v1",
                "resourceVersion": "429163",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:54Z",
            "lastTimestamp": "2024-10-02T22:18:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-htf4m.17fac2bfb3845c3f",
                "namespace": "kube-system",
                "uid": "477f25e7-0b28-444a-b484-b5dd1adde349",
                "resourceVersion": "429296",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-htf4m",
                "uid": "efbe04c5-eae1-4636-9c9c-5f1c3a1f64ad",
                "apiVersion": "v1",
                "resourceVersion": "429163",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: Get \"http://10.244.0.19:8181/ready\": dial tcp 10.244.0.19:8181: connect: connection refused",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:56Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-q8w69.17fac26d48cf9683",
                "namespace": "kube-system",
                "uid": "775d6f0d-5b96-48e5-b30c-973ff6740c6e",
                "resourceVersion": "427938",
                "creationTimestamp": "2024-10-02T22:13:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-q8w69",
                "uid": "b7bb2c70-c0d3-45c4-bba3-095cb42eb880",
                "apiVersion": "v1",
                "resourceVersion": "427936"
            },
            "reason": "FailedScheduling",
            "message": "0/2 nodes are available: 2 node(s) were unschedulable. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Warning",
            "eventTime": "2024-10-02T22:13:01.678790Z",
            "action": "Scheduling",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-kube-scheduler-v2-84b957bb87-7p7l9"
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-q8w69.17fac26f6939af5d",
                "namespace": "kube-system",
                "uid": "168579c4-99e9-452a-b865-42db7a165458",
                "resourceVersion": "428178",
                "creationTimestamp": "2024-10-02T22:13:10Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-q8w69",
                "uid": "b7bb2c70-c0d3-45c4-bba3-095cb42eb880",
                "apiVersion": "v1",
                "resourceVersion": "427939"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:13:10Z",
            "lastTimestamp": "2024-10-02T22:13:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-q8w69.17fac2ac59c8ea71",
                "namespace": "kube-system",
                "uid": "5386bed2-10b6-48ea-b966-c4410653b903",
                "resourceVersion": "428297",
                "creationTimestamp": "2024-10-02T22:17:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-q8w69",
                "uid": "b7bb2c70-c0d3-45c4-bba3-095cb42eb880",
                "apiVersion": "v1",
                "resourceVersion": "427939"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:17:32Z",
            "lastTimestamp": "2024-10-02T22:17:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-q8w69.17fac2b39a326967",
                "namespace": "kube-system",
                "uid": "41da2922-f498-4281-be90-f356d64e894b",
                "resourceVersion": "428602",
                "creationTimestamp": "2024-10-02T22:18:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-q8w69",
                "uid": "b7bb2c70-c0d3-45c4-bba3-095cb42eb880",
                "apiVersion": "v1",
                "resourceVersion": "427939"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:03Z",
            "lastTimestamp": "2024-10-02T22:18:29Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-q8w69.17fac2bbfbc7c57b",
                "namespace": "kube-system",
                "uid": "1442e006-0d78-49c2-b586-e7df216ddc64",
                "resourceVersion": "428749",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-q8w69",
                "uid": "b7bb2c70-c0d3-45c4-bba3-095cb42eb880",
                "apiVersion": "v1",
                "resourceVersion": "428386"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-q8w69.17fac2bf4fa7f49f",
                "namespace": "kube-system",
                "uid": "e93c4c08-ce35-4e09-93b9-540443f1f925",
                "resourceVersion": "429182",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-q8w69",
                "uid": "b7bb2c70-c0d3-45c4-bba3-095cb42eb880",
                "apiVersion": "v1",
                "resourceVersion": "428750"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-597bb9d4db-q8w69 to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-q8w69.17fac2bf95a96f7c",
                "namespace": "kube-system",
                "uid": "eeb9ccaf-0b60-4022-87f0-cda7334ff3b6",
                "resourceVersion": "429234",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-q8w69",
                "uid": "b7bb2c70-c0d3-45c4-bba3-095cb42eb880",
                "apiVersion": "v1",
                "resourceVersion": "429165",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240704\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-q8w69.17fac2bf96bfef37",
                "namespace": "kube-system",
                "uid": "a8bc5cc7-ef69-49f0-bb1e-638d6d50e924",
                "resourceVersion": "429236",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-q8w69",
                "uid": "b7bb2c70-c0d3-45c4-bba3-095cb42eb880",
                "apiVersion": "v1",
                "resourceVersion": "429165",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-q8w69.17fac2bf9f9b26f4",
                "namespace": "kube-system",
                "uid": "09764121-9859-4747-81a4-d967613de18d",
                "resourceVersion": "429240",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-q8w69",
                "uid": "b7bb2c70-c0d3-45c4-bba3-095cb42eb880",
                "apiVersion": "v1",
                "resourceVersion": "429165",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-q8w69.17fac2bfb30c8864",
                "namespace": "kube-system",
                "uid": "7e6cd513-3eb9-46bb-bc48-8ea339e30a25",
                "resourceVersion": "429293",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-q8w69",
                "uid": "b7bb2c70-c0d3-45c4-bba3-095cb42eb880",
                "apiVersion": "v1",
                "resourceVersion": "429165",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: Get \"http://10.244.0.76:8181/ready\": dial tcp 10.244.0.76:8181: connect: connection refused",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:56Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-vbmvk.17fac26d50caec9e",
                "namespace": "kube-system",
                "uid": "c883d1d1-3403-4681-8bb0-25a960c67a3b",
                "resourceVersion": "427948",
                "creationTimestamp": "2024-10-02T22:13:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db-vbmvk",
                "uid": "6857ec80-c624-4830-953f-b61de5a6cadc",
                "apiVersion": "v1",
                "resourceVersion": "199142",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Killing",
            "message": "Stopping container coredns",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000006"
            },
            "firstTimestamp": "2024-10-02T22:13:01Z",
            "lastTimestamp": "2024-10-02T22:13:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000006"
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db.17fac26d493021fa",
                "namespace": "kube-system",
                "uid": "645cd38c-60b9-4ba6-a01b-f13abc9f1dd3",
                "resourceVersion": "427940",
                "creationTimestamp": "2024-10-02T22:13:01Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db",
                "uid": "6e2b452a-10d7-4f09-876c-5450ef0a602b",
                "apiVersion": "apps/v1",
                "resourceVersion": "199436"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-597bb9d4db-q8w69",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:01Z",
            "lastTimestamp": "2024-10-02T22:13:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db.17fac26d53b5739f",
                "namespace": "kube-system",
                "uid": "f57f6487-56a4-4047-9f32-15d752b34f1f",
                "resourceVersion": "427954",
                "creationTimestamp": "2024-10-02T22:13:01Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-597bb9d4db",
                "uid": "6e2b452a-10d7-4f09-876c-5450ef0a602b",
                "apiVersion": "apps/v1",
                "resourceVersion": "427942"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-597bb9d4db-htf4m",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:01Z",
            "lastTimestamp": "2024-10-02T22:13:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c-dz4p6.17fac26d5e4997a7",
                "namespace": "kube-system",
                "uid": "9288ac4a-c73f-4afd-a054-6cd99f2bb2b8",
                "resourceVersion": "427974",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-689db4649c-dz4p6",
                "uid": "8ed55b63-04e4-4da4-9392-6cc972d12ade",
                "apiVersion": "v1",
                "resourceVersion": "199162",
                "fieldPath": "spec.containers{autoscaler}"
            },
            "reason": "Killing",
            "message": "Stopping container autoscaler",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000007"
            },
            "firstTimestamp": "2024-10-02T22:13:02Z",
            "lastTimestamp": "2024-10-02T22:13:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000007"
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c-gpqbl.17fac26d5edaaac8",
                "namespace": "kube-system",
                "uid": "bd77bbe4-6468-4aad-9999-9000b8edf2f4",
                "resourceVersion": "427977",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-689db4649c-gpqbl",
                "uid": "c37cfe01-bbf3-4bf1-a82e-c13351986453",
                "apiVersion": "v1",
                "resourceVersion": "427975"
            },
            "reason": "FailedScheduling",
            "message": "0/2 nodes are available: 2 node(s) were unschedulable. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Warning",
            "eventTime": "2024-10-02T22:13:02.048615Z",
            "action": "Scheduling",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-kube-scheduler-v2-84b957bb87-7p7l9"
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c-gpqbl.17fac26f69394c24",
                "namespace": "kube-system",
                "uid": "ab577be8-71f4-4434-9629-60b7f420893d",
                "resourceVersion": "428175",
                "creationTimestamp": "2024-10-02T22:13:10Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-689db4649c-gpqbl",
                "uid": "c37cfe01-bbf3-4bf1-a82e-c13351986453",
                "apiVersion": "v1",
                "resourceVersion": "427978"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:13:10Z",
            "lastTimestamp": "2024-10-02T22:13:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c-gpqbl.17fac2ac59c8d941",
                "namespace": "kube-system",
                "uid": "735c57e7-5199-4321-ab22-e121eb3d2473",
                "resourceVersion": "428292",
                "creationTimestamp": "2024-10-02T22:17:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-689db4649c-gpqbl",
                "uid": "c37cfe01-bbf3-4bf1-a82e-c13351986453",
                "apiVersion": "v1",
                "resourceVersion": "427978"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:17:32Z",
            "lastTimestamp": "2024-10-02T22:17:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c-gpqbl.17fac2b39b129f6f",
                "namespace": "kube-system",
                "uid": "1ed17585-ea76-4bc2-8170-27ad5c294165",
                "resourceVersion": "428603",
                "creationTimestamp": "2024-10-02T22:18:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-689db4649c-gpqbl",
                "uid": "c37cfe01-bbf3-4bf1-a82e-c13351986453",
                "apiVersion": "v1",
                "resourceVersion": "427978"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:03Z",
            "lastTimestamp": "2024-10-02T22:18:29Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c-gpqbl.17fac2bbfc748775",
                "namespace": "kube-system",
                "uid": "431360ac-947a-48c4-bfb9-a61ec1d07a80",
                "resourceVersion": "428751",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-689db4649c-gpqbl",
                "uid": "c37cfe01-bbf3-4bf1-a82e-c13351986453",
                "apiVersion": "v1",
                "resourceVersion": "428388"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c-gpqbl.17fac2bf4f7032fe",
                "namespace": "kube-system",
                "uid": "605c71c8-a330-40f3-a8ee-b347a565f9a0",
                "resourceVersion": "429179",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-689db4649c-gpqbl",
                "uid": "c37cfe01-bbf3-4bf1-a82e-c13351986453",
                "apiVersion": "v1",
                "resourceVersion": "428752"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-autoscaler-689db4649c-gpqbl to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c-gpqbl.17fac2bf7eba989f",
                "namespace": "kube-system",
                "uid": "c5242521-2208-4e46-9de7-d8119c5265d4",
                "resourceVersion": "429221",
                "creationTimestamp": "2024-10-02T22:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-689db4649c-gpqbl",
                "uid": "c37cfe01-bbf3-4bf1-a82e-c13351986453",
                "apiVersion": "v1",
                "resourceVersion": "429164",
                "fieldPath": "spec.containers{autoscaler}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:54Z",
            "lastTimestamp": "2024-10-02T22:18:54Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c-gpqbl.17fac2bf9e7d16aa",
                "namespace": "kube-system",
                "uid": "bddd0789-9885-4a21-bd68-dd939c011b91",
                "resourceVersion": "429239",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-689db4649c-gpqbl",
                "uid": "c37cfe01-bbf3-4bf1-a82e-c13351986453",
                "apiVersion": "v1",
                "resourceVersion": "429164",
                "fieldPath": "spec.containers{autoscaler}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11\" in 532ms (532ms including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c-gpqbl.17fac2bf9fa3f474",
                "namespace": "kube-system",
                "uid": "510d6036-9c91-4ebe-ad1d-28e97d09be7d",
                "resourceVersion": "429241",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-689db4649c-gpqbl",
                "uid": "c37cfe01-bbf3-4bf1-a82e-c13351986453",
                "apiVersion": "v1",
                "resourceVersion": "429164",
                "fieldPath": "spec.containers{autoscaler}"
            },
            "reason": "Created",
            "message": "Created container autoscaler",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c-gpqbl.17fac2bfa8173a9e",
                "namespace": "kube-system",
                "uid": "9bc09118-8198-481b-a488-5de27be5ff95",
                "resourceVersion": "429245",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-689db4649c-gpqbl",
                "uid": "c37cfe01-bbf3-4bf1-a82e-c13351986453",
                "apiVersion": "v1",
                "resourceVersion": "429164",
                "fieldPath": "spec.containers{autoscaler}"
            },
            "reason": "Started",
            "message": "Started container autoscaler",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c.17fac26d5f3d59d5",
                "namespace": "kube-system",
                "uid": "af64242d-f456-4213-962b-f91248feac0e",
                "resourceVersion": "427976",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-autoscaler-689db4649c",
                "uid": "a1097d13-ab3d-45fe-be0b-af7e2bbcbcc2",
                "apiVersion": "apps/v1",
                "resourceVersion": "199223"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-autoscaler-689db4649c-gpqbl",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:02Z",
            "lastTimestamp": "2024-10-02T22:13:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7.17fac2bd3c2da6c7",
                "namespace": "kube-system",
                "uid": "5360e48e-98ce-40d8-ae7c-9b7aacc2963c",
                "resourceVersion": "428865",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-789r7",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "apiVersion": "v1",
                "resourceVersion": "428854"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/csi-azuredisk-node-789r7 to aks-agentpool-29385454-vmss000008",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7.17fac2be40bf6e47",
                "namespace": "kube-system",
                "uid": "bc695201-d460-4b48-9c0e-c09c531a693d",
                "resourceVersion": "428981",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-789r7",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "apiVersion": "v1",
                "resourceVersion": "428860",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7.17fac2be5d399657",
                "namespace": "kube-system",
                "uid": "605fd96d-73d3-4210-9abe-b01f4ebbbbde",
                "resourceVersion": "428997",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-789r7",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "apiVersion": "v1",
                "resourceVersion": "428860",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0\" in 45ms (477ms including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7.17fac2be6a2b4631",
                "namespace": "kube-system",
                "uid": "63b06d90-8e6f-4b5b-9786-359ed9319b92",
                "resourceVersion": "429005",
                "creationTimestamp": "2024-10-02T22:18:50Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-789r7",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "apiVersion": "v1",
                "resourceVersion": "428860",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Created",
            "message": "Created container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:50Z",
            "lastTimestamp": "2024-10-02T22:18:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7.17fac2be78cdb6cf",
                "namespace": "kube-system",
                "uid": "9514b239-666a-43e9-b3c3-3f70e1094d67",
                "resourceVersion": "429007",
                "creationTimestamp": "2024-10-02T22:18:50Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-789r7",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "apiVersion": "v1",
                "resourceVersion": "428860",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Started",
            "message": "Started container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:50Z",
            "lastTimestamp": "2024-10-02T22:18:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7.17fac2be78dcf93b",
                "namespace": "kube-system",
                "uid": "5f12f248-1388-4a4f-904b-941a948feab0",
                "resourceVersion": "429009",
                "creationTimestamp": "2024-10-02T22:18:50Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-789r7",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "apiVersion": "v1",
                "resourceVersion": "428860",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:50Z",
            "lastTimestamp": "2024-10-02T22:18:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7.17fac2bf11da7ebd",
                "namespace": "kube-system",
                "uid": "40f7b211-44bb-4169-b123-79eabd89de5b",
                "resourceVersion": "429133",
                "creationTimestamp": "2024-10-02T22:18:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-789r7",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "apiVersion": "v1",
                "resourceVersion": "428860",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1\" in 324ms (2.566s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:52Z",
            "lastTimestamp": "2024-10-02T22:18:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7.17fac2bf1b57cc40",
                "namespace": "kube-system",
                "uid": "d357e536-fcd3-4262-a201-021f2a558a7f",
                "resourceVersion": "429141",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-789r7",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "apiVersion": "v1",
                "resourceVersion": "428860",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Created",
            "message": "Created container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7.17fac2bf258e1c41",
                "namespace": "kube-system",
                "uid": "775454b3-ffee-4682-99d8-ba9252bb10f4",
                "resourceVersion": "429144",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-789r7",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "apiVersion": "v1",
                "resourceVersion": "428860",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Started",
            "message": "Started container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7.17fac2bf259a7595",
                "namespace": "kube-system",
                "uid": "db0b01b7-c9af-4da8-aadd-6bd4dfbd1b2d",
                "resourceVersion": "429145",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-789r7",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "apiVersion": "v1",
                "resourceVersion": "428860",
                "fieldPath": "spec.containers{azuredisk}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7.17fac2bf2d4eec1e",
                "namespace": "kube-system",
                "uid": "56a7fa4f-b3dd-48c2-9423-1439a309aaa2",
                "resourceVersion": "429148",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-789r7",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "apiVersion": "v1",
                "resourceVersion": "428860",
                "fieldPath": "spec.containers{azuredisk}"
            },
            "reason": "Created",
            "message": "Created container azuredisk",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7.17fac2bf34e040e5",
                "namespace": "kube-system",
                "uid": "b745b875-fb17-4ff4-aed5-323fac9bcf00",
                "resourceVersion": "429150",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-789r7",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "apiVersion": "v1",
                "resourceVersion": "428860",
                "fieldPath": "spec.containers{azuredisk}"
            },
            "reason": "Started",
            "message": "Started container azuredisk",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll.17fac2bb498ef9dc",
                "namespace": "kube-system",
                "uid": "818b13ea-4475-400b-9690-0d6f175dd682",
                "resourceVersion": "428680",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-pkxll",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "apiVersion": "v1",
                "resourceVersion": "428671"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/csi-azuredisk-node-pkxll to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll.17fac2bbde7832c6",
                "namespace": "kube-system",
                "uid": "9ac06df0-f183-49d2-9bb9-3a26ab221b92",
                "resourceVersion": "428729",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-pkxll",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "apiVersion": "v1",
                "resourceVersion": "428676",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll.17fac2bc014c0e1e",
                "namespace": "kube-system",
                "uid": "845aaa15-7a3c-4c50-a11d-ec87a4f20b1f",
                "resourceVersion": "428766",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-pkxll",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "apiVersion": "v1",
                "resourceVersion": "428676",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0\" in 584ms (584ms including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll.17fac2bc3c16ba5f",
                "namespace": "kube-system",
                "uid": "b382b66b-921b-4d32-ad42-15a431a43e45",
                "resourceVersion": "428787",
                "creationTimestamp": "2024-10-02T22:18:40Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-pkxll",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "apiVersion": "v1",
                "resourceVersion": "428676",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Created",
            "message": "Created container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:40Z",
            "lastTimestamp": "2024-10-02T22:18:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll.17fac2bc51910387",
                "namespace": "kube-system",
                "uid": "19c89ac0-e503-4ecd-a2ce-bebe8584ba20",
                "resourceVersion": "428788",
                "creationTimestamp": "2024-10-02T22:18:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-pkxll",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "apiVersion": "v1",
                "resourceVersion": "428676",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Started",
            "message": "Started container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:41Z",
            "lastTimestamp": "2024-10-02T22:18:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll.17fac2bc519d5e65",
                "namespace": "kube-system",
                "uid": "9bb5280a-03ab-48a8-8d1c-a8a5c4ff5466",
                "resourceVersion": "428789",
                "creationTimestamp": "2024-10-02T22:18:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-pkxll",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "apiVersion": "v1",
                "resourceVersion": "428676",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:41Z",
            "lastTimestamp": "2024-10-02T22:18:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll.17fac2bcb226bafc",
                "namespace": "kube-system",
                "uid": "0322f91a-9f62-43f1-a5df-2da0b5a47d52",
                "resourceVersion": "428818",
                "creationTimestamp": "2024-10-02T22:18:42Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-pkxll",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "apiVersion": "v1",
                "resourceVersion": "428676",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1\" in 417ms (1.619s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:42Z",
            "lastTimestamp": "2024-10-02T22:18:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll.17fac2bcb850648b",
                "namespace": "kube-system",
                "uid": "424b7323-2a6c-4c24-b7ef-7e880f5d37ab",
                "resourceVersion": "428821",
                "creationTimestamp": "2024-10-02T22:18:42Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-pkxll",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "apiVersion": "v1",
                "resourceVersion": "428676",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Created",
            "message": "Created container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:42Z",
            "lastTimestamp": "2024-10-02T22:18:42Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll.17fac2bcc6fe790f",
                "namespace": "kube-system",
                "uid": "49082f5c-378c-417a-bf1c-64d209ff8361",
                "resourceVersion": "428822",
                "creationTimestamp": "2024-10-02T22:18:43Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-pkxll",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "apiVersion": "v1",
                "resourceVersion": "428676",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Started",
            "message": "Started container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:43Z",
            "lastTimestamp": "2024-10-02T22:18:43Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll.17fac2bcc7154372",
                "namespace": "kube-system",
                "uid": "b3927ce0-eee8-4694-9ae3-1e4b5d85cf81",
                "resourceVersion": "428823",
                "creationTimestamp": "2024-10-02T22:18:43Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-pkxll",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "apiVersion": "v1",
                "resourceVersion": "428676",
                "fieldPath": "spec.containers{azuredisk}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:43Z",
            "lastTimestamp": "2024-10-02T22:18:43Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll.17fac2bccdca89f4",
                "namespace": "kube-system",
                "uid": "beecc062-2533-4442-9e9e-d0e4edc78785",
                "resourceVersion": "428824",
                "creationTimestamp": "2024-10-02T22:18:43Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-pkxll",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "apiVersion": "v1",
                "resourceVersion": "428676",
                "fieldPath": "spec.containers{azuredisk}"
            },
            "reason": "Created",
            "message": "Created container azuredisk",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:43Z",
            "lastTimestamp": "2024-10-02T22:18:43Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll.17fac2bd004b2c5e",
                "namespace": "kube-system",
                "uid": "4e508325-2b7f-4a3c-9eb6-44d013d63412",
                "resourceVersion": "428834",
                "creationTimestamp": "2024-10-02T22:18:44Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node-pkxll",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "apiVersion": "v1",
                "resourceVersion": "428676",
                "fieldPath": "spec.containers{azuredisk}"
            },
            "reason": "Started",
            "message": "Started container azuredisk",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:44Z",
            "lastTimestamp": "2024-10-02T22:18:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node.17fac2bb4909fb34",
                "namespace": "kube-system",
                "uid": "2179aeda-6d3e-4c5c-ae3a-582f1bc633f6",
                "resourceVersion": "428679",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node",
                "uid": "120c3990-2b2c-47a7-84a6-20757673b3ca",
                "apiVersion": "apps/v1",
                "resourceVersion": "428475"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: csi-azuredisk-node-pkxll",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node.17fac2bd3bc4972d",
                "namespace": "kube-system",
                "uid": "7ed1d382-0d8c-492b-b35f-8bef0ccf740c",
                "resourceVersion": "428861",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "csi-azuredisk-node",
                "uid": "120c3990-2b2c-47a7-84a6-20757673b3ca",
                "apiVersion": "apps/v1",
                "resourceVersion": "428843"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: csi-azuredisk-node-789r7",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v.17fac2bd3f248c82",
                "namespace": "kube-system",
                "uid": "32b8c8f4-ccfa-43b7-a14f-589074b5bea2",
                "resourceVersion": "428884",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-hn75v",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "apiVersion": "v1",
                "resourceVersion": "428877"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/csi-azurefile-node-hn75v to aks-agentpool-29385454-vmss000008",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v.17fac2be3f03bfa0",
                "namespace": "kube-system",
                "uid": "cbc9095d-dea3-499e-9f72-86e6b61b935c",
                "resourceVersion": "428979",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-hn75v",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "apiVersion": "v1",
                "resourceVersion": "428881",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v.17fac2be5a8763e5",
                "namespace": "kube-system",
                "uid": "62f4d1ce-62d2-4f23-887a-19980f51ab01",
                "resourceVersion": "428995",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-hn75v",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "apiVersion": "v1",
                "resourceVersion": "428881",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0\" in 461ms (461ms including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v.17fac2be6a1f3aaf",
                "namespace": "kube-system",
                "uid": "631b3da5-33c4-4093-91e9-d2738a44456e",
                "resourceVersion": "429004",
                "creationTimestamp": "2024-10-02T22:18:50Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-hn75v",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "apiVersion": "v1",
                "resourceVersion": "428881",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Created",
            "message": "Created container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:50Z",
            "lastTimestamp": "2024-10-02T22:18:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v.17fac2be78d3dcb1",
                "namespace": "kube-system",
                "uid": "a8ab3627-8f10-493d-a5f1-f7f24a576a43",
                "resourceVersion": "429008",
                "creationTimestamp": "2024-10-02T22:18:50Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-hn75v",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "apiVersion": "v1",
                "resourceVersion": "428881",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Started",
            "message": "Started container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:50Z",
            "lastTimestamp": "2024-10-02T22:18:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v.17fac2be78dd4ce8",
                "namespace": "kube-system",
                "uid": "762d7444-585f-4091-bd11-2e5fe2d5a35a",
                "resourceVersion": "429010",
                "creationTimestamp": "2024-10-02T22:18:50Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-hn75v",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "apiVersion": "v1",
                "resourceVersion": "428881",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:50Z",
            "lastTimestamp": "2024-10-02T22:18:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v.17fac2bf14b467e3",
                "namespace": "kube-system",
                "uid": "6a6a3766-8f2b-410f-a3c8-bce6419c130e",
                "resourceVersion": "429135",
                "creationTimestamp": "2024-10-02T22:18:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-hn75v",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "apiVersion": "v1",
                "resourceVersion": "428881",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1\" in 47ms (2.614s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:52Z",
            "lastTimestamp": "2024-10-02T22:18:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v.17fac2bf1b5c5697",
                "namespace": "kube-system",
                "uid": "003bca3f-c1a1-4546-971d-3cb6afe7bb82",
                "resourceVersion": "429143",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-hn75v",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "apiVersion": "v1",
                "resourceVersion": "428881",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Created",
            "message": "Created container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v.17fac2bf25e85ffd",
                "namespace": "kube-system",
                "uid": "7f44dd78-e6b7-4a41-8507-75c0ebf8f90f",
                "resourceVersion": "429146",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-hn75v",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "apiVersion": "v1",
                "resourceVersion": "428881",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Started",
            "message": "Started container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v.17fac2bf25ef1d97",
                "namespace": "kube-system",
                "uid": "f31c7072-c9bb-4fa1-a8aa-ef198db23877",
                "resourceVersion": "429147",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-hn75v",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "apiVersion": "v1",
                "resourceVersion": "428881",
                "fieldPath": "spec.containers{azurefile}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v.17fac2bf35a631d5",
                "namespace": "kube-system",
                "uid": "9fa18f0d-90d8-47bd-85d7-b04e07b58de2",
                "resourceVersion": "429151",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-hn75v",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "apiVersion": "v1",
                "resourceVersion": "428881",
                "fieldPath": "spec.containers{azurefile}"
            },
            "reason": "Created",
            "message": "Created container azurefile",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v.17fac2bf3d10c1ab",
                "namespace": "kube-system",
                "uid": "b9e6ddaf-4c2c-4472-882b-c25ee3e91740",
                "resourceVersion": "429152",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-hn75v",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "apiVersion": "v1",
                "resourceVersion": "428881",
                "fieldPath": "spec.containers{azurefile}"
            },
            "reason": "Started",
            "message": "Started container azurefile",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr.17fac2bb499725af",
                "namespace": "kube-system",
                "uid": "02cd86b4-c4fb-4010-9c3c-67c426245c09",
                "resourceVersion": "428681",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9xkr",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "apiVersion": "v1",
                "resourceVersion": "428672"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/csi-azurefile-node-w9xkr to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr.17fac2bbe2edd8f2",
                "namespace": "kube-system",
                "uid": "a17ab983-4a94-40f8-9514-feddf3999131",
                "resourceVersion": "428733",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9xkr",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "apiVersion": "v1",
                "resourceVersion": "428675",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr.17fac2bc640da7f8",
                "namespace": "kube-system",
                "uid": "6358a8af-a49d-4570-9e16-088fdd6fa658",
                "resourceVersion": "428792",
                "creationTimestamp": "2024-10-02T22:18:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9xkr",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "apiVersion": "v1",
                "resourceVersion": "428675",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0\" in 59ms (2.166s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:41Z",
            "lastTimestamp": "2024-10-02T22:18:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr.17fac2bc64b74c69",
                "namespace": "kube-system",
                "uid": "7b5596a7-8caa-442f-9aab-d3083c19d514",
                "resourceVersion": "428795",
                "creationTimestamp": "2024-10-02T22:18:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9xkr",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "apiVersion": "v1",
                "resourceVersion": "428675",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Created",
            "message": "Created container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:41Z",
            "lastTimestamp": "2024-10-02T22:18:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr.17fac2bc6bc0511f",
                "namespace": "kube-system",
                "uid": "49520b02-587f-4107-8d49-937344cc25c0",
                "resourceVersion": "428803",
                "creationTimestamp": "2024-10-02T22:18:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9xkr",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "apiVersion": "v1",
                "resourceVersion": "428675",
                "fieldPath": "spec.containers{liveness-probe}"
            },
            "reason": "Started",
            "message": "Started container liveness-probe",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:41Z",
            "lastTimestamp": "2024-10-02T22:18:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr.17fac2bc6bc89ed0",
                "namespace": "kube-system",
                "uid": "50b6bb3a-5a4f-4778-bf0e-867590497c8e",
                "resourceVersion": "428804",
                "creationTimestamp": "2024-10-02T22:18:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9xkr",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "apiVersion": "v1",
                "resourceVersion": "428675",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:41Z",
            "lastTimestamp": "2024-10-02T22:18:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr.17fac2bd4ff9eead",
                "namespace": "kube-system",
                "uid": "55f68f4d-95df-4143-8dd7-cb0bd92cde3c",
                "resourceVersion": "428910",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9xkr",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "apiVersion": "v1",
                "resourceVersion": "428675",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1\" in 51ms (3.828s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr.17fac2bd50a95e9b",
                "namespace": "kube-system",
                "uid": "b4d8d0c6-3ba6-47cc-b5df-e7184c2e8bbd",
                "resourceVersion": "428911",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9xkr",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "apiVersion": "v1",
                "resourceVersion": "428675",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Created",
            "message": "Created container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr.17fac2bd572ece0d",
                "namespace": "kube-system",
                "uid": "0c91b965-f31a-409b-9b46-f85ccc0e4bb5",
                "resourceVersion": "428915",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9xkr",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "apiVersion": "v1",
                "resourceVersion": "428675",
                "fieldPath": "spec.containers{node-driver-registrar}"
            },
            "reason": "Started",
            "message": "Started container node-driver-registrar",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr.17fac2bd573f9be3",
                "namespace": "kube-system",
                "uid": "44f60183-a1d1-400e-b747-d76e6eb776e9",
                "resourceVersion": "428916",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9xkr",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "apiVersion": "v1",
                "resourceVersion": "428675",
                "fieldPath": "spec.containers{azurefile}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr.17fac2bd5fa4bcff",
                "namespace": "kube-system",
                "uid": "43662c40-018a-4ae1-9d4d-c77ead37cc42",
                "resourceVersion": "428919",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9xkr",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "apiVersion": "v1",
                "resourceVersion": "428675",
                "fieldPath": "spec.containers{azurefile}"
            },
            "reason": "Created",
            "message": "Created container azurefile",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr.17fac2bd6b022b70",
                "namespace": "kube-system",
                "uid": "74627232-bd6d-460e-8059-3a63a41a3911",
                "resourceVersion": "428938",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "csi-azurefile-node-w9xkr",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "apiVersion": "v1",
                "resourceVersion": "428675",
                "fieldPath": "spec.containers{azurefile}"
            },
            "reason": "Started",
            "message": "Started container azurefile",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "csi-azurefile-node.17fac2bb4908b056",
                "namespace": "kube-system",
                "uid": "b96a43f0-cf33-4e98-aea2-d5f86d14d45e",
                "resourceVersion": "428674",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "csi-azurefile-node",
                "uid": "c2ce98e7-0b59-4347-a09b-a2117c9be016",
                "apiVersion": "apps/v1",
                "resourceVersion": "428476"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: csi-azurefile-node-w9xkr",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "csi-azurefile-node.17fac2bd3e9b9350",
                "namespace": "kube-system",
                "uid": "5f9df991-f1e8-44a1-abff-61c0ad7c6362",
                "resourceVersion": "428880",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "csi-azurefile-node",
                "uid": "c2ce98e7-0b59-4347-a09b-a2117c9be016",
                "apiVersion": "apps/v1",
                "resourceVersion": "428699"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: csi-azurefile-node-hn75v",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "disk-csi-azure-com.17fac2b040497fee",
                "namespace": "kube-system",
                "uid": "f51350b9-64ed-4ba3-b1e5-7b4e1aa48154",
                "resourceVersion": "428327",
                "creationTimestamp": "2024-10-02T22:17:49Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "disk-csi-azure-com",
                "uid": "dcfad7ba-42ae-444d-b120-06155a7fb017",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "428326"
            },
            "reason": "LeaderElection",
            "message": "1727907430619-1007-disk-csi-azure-com became leader",
            "source": {
                "component": "disk.csi.azure.com/1727907430619-1007-disk.csi.azure.com"
            },
            "firstTimestamp": "2024-10-02T22:17:49Z",
            "lastTimestamp": "2024-10-02T22:17:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "disk.csi.azure.com/1727907430619-1007-disk.csi.azure.com",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "external-attacher-leader-disk-csi-azure-com.17fac2b0835e8879",
                "namespace": "kube-system",
                "uid": "4602ee7a-ebc4-4c43-8043-c7df68e631d7",
                "resourceVersion": "428334",
                "creationTimestamp": "2024-10-02T22:17:50Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "external-attacher-leader-disk-csi-azure-com",
                "uid": "fe519b3b-cc0e-4f89-9202-61f16670ca07",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "428332"
            },
            "reason": "LeaderElection",
            "message": "csi-azuredisk-controller-796456967f-bqkx5 became leader",
            "source": {
                "component": "external-attacher-leader-disk.csi.azure.com/csi-azuredisk-controller-796456967f-bqkx5"
            },
            "firstTimestamp": "2024-10-02T22:17:50Z",
            "lastTimestamp": "2024-10-02T22:17:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "external-attacher-leader-disk.csi.azure.com/csi-azuredisk-controller-796456967f-bqkx5",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "external-resizer-disk-csi-azure-com.17fac2afadf67eca",
                "namespace": "kube-system",
                "uid": "9d8252cb-68a0-4c65-b09d-1e2103f20338",
                "resourceVersion": "428324",
                "creationTimestamp": "2024-10-02T22:17:46Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "external-resizer-disk-csi-azure-com",
                "uid": "c7526294-ad55-4905-9677-39bc001b5fa6",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "428323"
            },
            "reason": "LeaderElection",
            "message": "csi-azuredisk-controller-796456967f-6wbvw became leader",
            "source": {
                "component": "external-resizer-disk-csi-azure-com/csi-azuredisk-controller-796456967f-6wbvw"
            },
            "firstTimestamp": "2024-10-02T22:17:46Z",
            "lastTimestamp": "2024-10-02T22:17:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "external-resizer-disk-csi-azure-com/csi-azuredisk-controller-796456967f-6wbvw",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "external-resizer-file-csi-azure-com.17fac2af8ebe88e7",
                "namespace": "kube-system",
                "uid": "81d9fbb2-157a-44b6-9a5b-4643d853dcdb",
                "resourceVersion": "428318",
                "creationTimestamp": "2024-10-02T22:17:46Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "external-resizer-file-csi-azure-com",
                "uid": "1ad1d756-2fa2-4ef4-827f-2e9917370da0",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "428317"
            },
            "reason": "LeaderElection",
            "message": "csi-azurefile-controller-bdc7f5c7-rh55t became leader",
            "source": {
                "component": "external-resizer-file-csi-azure-com/csi-azurefile-controller-bdc7f5c7-rh55t"
            },
            "firstTimestamp": "2024-10-02T22:17:46Z",
            "lastTimestamp": "2024-10-02T22:17:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "external-resizer-file-csi-azure-com/csi-azurefile-controller-bdc7f5c7-rh55t",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "external-snapshotter-leader-disk-csi-azure-com.17fac2b103f87ef0",
                "namespace": "kube-system",
                "uid": "58f7fc39-4d71-4314-b8ea-cebc25a4ea0a",
                "resourceVersion": "428343",
                "creationTimestamp": "2024-10-02T22:17:52Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "external-snapshotter-leader-disk-csi-azure-com",
                "uid": "c0dd81c1-c47c-4d10-8cc2-c36753c9f0f6",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "428342"
            },
            "reason": "LeaderElection",
            "message": "csi-azuredisk-controller-796456967f-bqkx5 became leader",
            "source": {
                "component": "external-snapshotter-leader-disk.csi.azure.com/csi-azuredisk-controller-796456967f-bqkx5"
            },
            "firstTimestamp": "2024-10-02T22:17:52Z",
            "lastTimestamp": "2024-10-02T22:17:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "external-snapshotter-leader-disk.csi.azure.com/csi-azuredisk-controller-796456967f-bqkx5",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "external-snapshotter-leader-file-csi-azure-com.17fac2b06aeeaa12",
                "namespace": "kube-system",
                "uid": "7ea50689-8f41-419b-a492-ad09d24bfb05",
                "resourceVersion": "428330",
                "creationTimestamp": "2024-10-02T22:17:50Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "external-snapshotter-leader-file-csi-azure-com",
                "uid": "e7ab62f4-43c0-4c1e-91e4-a3345e276d47",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "428329"
            },
            "reason": "LeaderElection",
            "message": "csi-azurefile-controller-bdc7f5c7-mmhq2 became leader",
            "source": {
                "component": "external-snapshotter-leader-file.csi.azure.com/csi-azurefile-controller-bdc7f5c7-mmhq2"
            },
            "firstTimestamp": "2024-10-02T22:17:50Z",
            "lastTimestamp": "2024-10-02T22:17:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "external-snapshotter-leader-file.csi.azure.com/csi-azurefile-controller-bdc7f5c7-mmhq2",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "file-csi-azure-com.17fac2b08bd0717b",
                "namespace": "kube-system",
                "uid": "e611a354-1b32-4045-b066-f46c424ddc98",
                "resourceVersion": "428336",
                "creationTimestamp": "2024-10-02T22:17:50Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "file-csi-azure-com",
                "uid": "c904607b-ab2a-4bd1-8634-624006593573",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "428335"
            },
            "reason": "LeaderElection",
            "message": "1727907424901-9702-file-csi-azure-com became leader",
            "source": {
                "component": "file.csi.azure.com/1727907424901-9702-file.csi.azure.com"
            },
            "firstTimestamp": "2024-10-02T22:17:50Z",
            "lastTimestamp": "2024-10-02T22:17:50Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "file.csi.azure.com/1727907424901-9702-file.csi.azure.com",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-ftnk7.17fac26d761db772",
                "namespace": "kube-system",
                "uid": "74e7a9dd-442a-4d65-a75b-7b1cf9f4ba4d",
                "resourceVersion": "428002",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-ftnk7",
                "uid": "b4cc1815-fc21-49fd-96b9-6b18aefcfc5f",
                "apiVersion": "v1",
                "resourceVersion": "199163",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Killing",
            "message": "Stopping container konnectivity-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000007"
            },
            "firstTimestamp": "2024-10-02T22:13:02Z",
            "lastTimestamp": "2024-10-02T22:13:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000007"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-mftbf.17fac26d770884f3",
                "namespace": "kube-system",
                "uid": "1b3f5b88-8661-4701-84a7-8dd350a04595",
                "resourceVersion": "428007",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-mftbf",
                "uid": "dac60fb5-8c0a-44ad-8fa3-490aae5449a3",
                "apiVersion": "v1",
                "resourceVersion": "428004"
            },
            "reason": "FailedScheduling",
            "message": "0/2 nodes are available: 2 node(s) were unschedulable. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Warning",
            "eventTime": "2024-10-02T22:13:02.454272Z",
            "action": "Scheduling",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-kube-scheduler-v2-84b957bb87-7p7l9"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-mftbf.17fac26f6939d98d",
                "namespace": "kube-system",
                "uid": "ffcba802-3352-4a82-93db-745678553868",
                "resourceVersion": "428188",
                "creationTimestamp": "2024-10-02T22:13:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-mftbf",
                "uid": "dac60fb5-8c0a-44ad-8fa3-490aae5449a3",
                "apiVersion": "v1",
                "resourceVersion": "428009"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:13:10Z",
            "lastTimestamp": "2024-10-02T22:13:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-mftbf.17fac2ac59c8deb9",
                "namespace": "kube-system",
                "uid": "7cec7a99-7c8f-4079-9514-59a9d8d05580",
                "resourceVersion": "428293",
                "creationTimestamp": "2024-10-02T22:17:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-mftbf",
                "uid": "dac60fb5-8c0a-44ad-8fa3-490aae5449a3",
                "apiVersion": "v1",
                "resourceVersion": "428009"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:17:32Z",
            "lastTimestamp": "2024-10-02T22:17:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-mftbf.17fac2b39bff6dba",
                "namespace": "kube-system",
                "uid": "4200a722-8e6f-4bd6-be03-d24ce0fd88b9",
                "resourceVersion": "428604",
                "creationTimestamp": "2024-10-02T22:18:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-mftbf",
                "uid": "dac60fb5-8c0a-44ad-8fa3-490aae5449a3",
                "apiVersion": "v1",
                "resourceVersion": "428009"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:03Z",
            "lastTimestamp": "2024-10-02T22:18:29Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-mftbf.17fac2bbfd3d6154",
                "namespace": "kube-system",
                "uid": "6427e6a7-dcfd-4ac1-a8b8-06d021734bb4",
                "resourceVersion": "428753",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-mftbf",
                "uid": "dac60fb5-8c0a-44ad-8fa3-490aae5449a3",
                "apiVersion": "v1",
                "resourceVersion": "428390"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-mftbf.17fac2bf4fa972a8",
                "namespace": "kube-system",
                "uid": "046fbfb6-2cb9-4412-9cfe-ebe7770c91eb",
                "resourceVersion": "429183",
                "creationTimestamp": "2024-10-02T22:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-mftbf",
                "uid": "dac60fb5-8c0a-44ad-8fa3-490aae5449a3",
                "apiVersion": "v1",
                "resourceVersion": "428755"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/konnectivity-agent-5c7766456f-mftbf to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-mftbf.17fac2bfa14f1549",
                "namespace": "kube-system",
                "uid": "090d7f00-922e-4796-9178-9a74f526ea1b",
                "resourceVersion": "429243",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-mftbf",
                "uid": "dac60fb5-8c0a-44ad-8fa3-490aae5449a3",
                "apiVersion": "v1",
                "resourceVersion": "429166",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-mftbf.17fac2bfa4d7394d",
                "namespace": "kube-system",
                "uid": "8e4efc0b-3536-4195-bc99-9fc22dac89b6",
                "resourceVersion": "429244",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-mftbf",
                "uid": "dac60fb5-8c0a-44ad-8fa3-490aae5449a3",
                "apiVersion": "v1",
                "resourceVersion": "429166",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Created",
            "message": "Created container konnectivity-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-mftbf.17fac2bfa9198176",
                "namespace": "kube-system",
                "uid": "3d85b460-456c-40da-a832-468f72182341",
                "resourceVersion": "429247",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-mftbf",
                "uid": "dac60fb5-8c0a-44ad-8fa3-490aae5449a3",
                "apiVersion": "v1",
                "resourceVersion": "429166",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Started",
            "message": "Started container konnectivity-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-mftbf.17fac2bfb35a7956",
                "namespace": "kube-system",
                "uid": "3b29ebf9-2712-4b2e-989c-7d15808dac82",
                "resourceVersion": "429253",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-mftbf",
                "uid": "dac60fb5-8c0a-44ad-8fa3-490aae5449a3",
                "apiVersion": "v1",
                "resourceVersion": "429166",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Unhealthy",
            "message": "Readiness probe failed: Get \"http://10.244.0.206:8082/ready\": dial tcp 10.244.0.206:8082: connect: connection refused",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-ncsmt.17fac26d6adf3e4c",
                "namespace": "kube-system",
                "uid": "510ebe5f-35e3-44bd-b3b6-d9f4f89ce205",
                "resourceVersion": "427991",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-ncsmt",
                "uid": "89786646-68bc-4904-ad87-1467c60b1007",
                "apiVersion": "v1",
                "resourceVersion": "427987"
            },
            "reason": "FailedScheduling",
            "message": "0/2 nodes are available: 2 node(s) were unschedulable. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Warning",
            "eventTime": "2024-10-02T22:13:02.250240Z",
            "action": "Scheduling",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-kube-scheduler-v2-84b957bb87-7p7l9"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-ncsmt.17fac26f6939d66d",
                "namespace": "kube-system",
                "uid": "9c0615f3-690a-4b9e-ba45-4579e56954f0",
                "resourceVersion": "428187",
                "creationTimestamp": "2024-10-02T22:13:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-ncsmt",
                "uid": "89786646-68bc-4904-ad87-1467c60b1007",
                "apiVersion": "v1",
                "resourceVersion": "427990"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:13:10Z",
            "lastTimestamp": "2024-10-02T22:13:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-ncsmt.17fac2ac59c8e3cd",
                "namespace": "kube-system",
                "uid": "9a030396-294f-498e-93a7-2196a6490895",
                "resourceVersion": "428295",
                "creationTimestamp": "2024-10-02T22:17:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-ncsmt",
                "uid": "89786646-68bc-4904-ad87-1467c60b1007",
                "apiVersion": "v1",
                "resourceVersion": "427990"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:17:32Z",
            "lastTimestamp": "2024-10-02T22:17:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-ncsmt.17fac2b39cb84648",
                "namespace": "kube-system",
                "uid": "f873a7de-ddea-464b-a6e8-c98461a8b2a2",
                "resourceVersion": "428605",
                "creationTimestamp": "2024-10-02T22:18:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-ncsmt",
                "uid": "89786646-68bc-4904-ad87-1467c60b1007",
                "apiVersion": "v1",
                "resourceVersion": "427990"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:03Z",
            "lastTimestamp": "2024-10-02T22:18:29Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-ncsmt.17fac2bbfde24b78",
                "namespace": "kube-system",
                "uid": "598a8ec4-0103-42cf-96d0-f0b62a69f2f1",
                "resourceVersion": "428756",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-ncsmt",
                "uid": "89786646-68bc-4904-ad87-1467c60b1007",
                "apiVersion": "v1",
                "resourceVersion": "428392"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-ncsmt.17fac2bf4faf7a0a",
                "namespace": "kube-system",
                "uid": "90a76047-8617-4761-9b1e-084cffdaa2e3",
                "resourceVersion": "429189",
                "creationTimestamp": "2024-10-02T22:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-ncsmt",
                "uid": "89786646-68bc-4904-ad87-1467c60b1007",
                "apiVersion": "v1",
                "resourceVersion": "428757"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/konnectivity-agent-5c7766456f-ncsmt to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-ncsmt.17fac2bfbacd03b8",
                "namespace": "kube-system",
                "uid": "0bca523b-2d1c-49ec-a368-e89b8b09ba01",
                "resourceVersion": "429272",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-ncsmt",
                "uid": "89786646-68bc-4904-ad87-1467c60b1007",
                "apiVersion": "v1",
                "resourceVersion": "429170",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-ncsmt.17fac2bfbb42115b",
                "namespace": "kube-system",
                "uid": "c2b07360-8386-41f6-bb4a-7266d11fd0b8",
                "resourceVersion": "429273",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-ncsmt",
                "uid": "89786646-68bc-4904-ad87-1467c60b1007",
                "apiVersion": "v1",
                "resourceVersion": "429170",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Created",
            "message": "Created container konnectivity-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-ncsmt.17fac2bfc073dd4a",
                "namespace": "kube-system",
                "uid": "7ef52ba1-5064-4496-953a-f7359c783262",
                "resourceVersion": "429275",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-ncsmt",
                "uid": "89786646-68bc-4904-ad87-1467c60b1007",
                "apiVersion": "v1",
                "resourceVersion": "429170",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Started",
            "message": "Started container konnectivity-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-zb79l.17fac26d689f44c8",
                "namespace": "kube-system",
                "uid": "daeb00e5-aab5-44f7-a634-5df9070229f9",
                "resourceVersion": "427985",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f-zb79l",
                "uid": "877416bb-8933-45f5-8359-eb676dcfb7c0",
                "apiVersion": "v1",
                "resourceVersion": "199164",
                "fieldPath": "spec.containers{konnectivity-agent}"
            },
            "reason": "Killing",
            "message": "Stopping container konnectivity-agent",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000006"
            },
            "firstTimestamp": "2024-10-02T22:13:02Z",
            "lastTimestamp": "2024-10-02T22:13:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000006"
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f.17fac26d6b3c2557",
                "namespace": "kube-system",
                "uid": "6c8ec391-b189-4aa2-9404-3f7d7cf070a1",
                "resourceVersion": "427988",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f",
                "uid": "cf3af4ea-5df8-4c16-92d1-b8e17c4ba948",
                "apiVersion": "apps/v1",
                "resourceVersion": "199331"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: konnectivity-agent-5c7766456f-ncsmt",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:02Z",
            "lastTimestamp": "2024-10-02T22:13:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f.17fac26d776278f6",
                "namespace": "kube-system",
                "uid": "1edab128-31f3-454c-bbe5-961a5d6a7fab",
                "resourceVersion": "428005",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "konnectivity-agent-5c7766456f",
                "uid": "cf3af4ea-5df8-4c16-92d1-b8e17c4ba948",
                "apiVersion": "apps/v1",
                "resourceVersion": "427993"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: konnectivity-agent-5c7766456f-mftbf",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:02Z",
            "lastTimestamp": "2024-10-02T22:13:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager.17fac2b4eed0be26",
                "namespace": "kube-system",
                "uid": "a68a4fd4-7e3a-4b86-b94a-a14dcfa06e1a",
                "resourceVersion": "428464",
                "creationTimestamp": "2024-10-02T22:18:09Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-controller-manager",
                "uid": "095afb89-7a07-4758-b9a0-ab4646d7c239",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "428463"
            },
            "reason": "LeaderElection",
            "message": "kube-controller-manager-v2-6c5ddc7d65-xvb5v_bb2cbf5e-0d5b-4929-814f-8b1a83338927 became leader",
            "source": {
                "component": "kube-controller-manager"
            },
            "firstTimestamp": "2024-10-02T22:18:09Z",
            "lastTimestamp": "2024-10-02T22:18:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kube-controller-manager",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-dns.17fac2b53eaffe64",
                "namespace": "kube-system",
                "uid": "27ae53eb-2edf-4a97-bc2e-a59ea311610b",
                "resourceVersion": "428798",
                "creationTimestamp": "2024-10-02T22:18:10Z"
            },
            "involvedObject": {
                "kind": "Service",
                "namespace": "kube-system",
                "name": "kube-dns",
                "uid": "b0d9a86e-9e5e-4fd4-be0a-9aab5e12e4ae",
                "apiVersion": "v1",
                "resourceVersion": "468"
            },
            "reason": "FailedToUpdateEndpointSlices",
            "message": "Error updating Endpoint Slices for Service kube-system/kube-dns: [skipping Pod coredns-597bb9d4db-g6br5 for Service kube-system/kube-dns: Node aks-agentpool-29385454-vmss000007 Not Found, skipping Pod coredns-597bb9d4db-vbmvk for Service kube-system/kube-dns: Node aks-agentpool-29385454-vmss000006 Not Found]",
            "source": {
                "component": "endpoint-slice-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:10Z",
            "lastTimestamp": "2024-10-02T22:18:41Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "endpoint-slice-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-dns.17fac2b56855b052",
                "namespace": "kube-system",
                "uid": "5844026f-4b22-4a5c-8a92-9e0874948a5d",
                "resourceVersion": "428585",
                "creationTimestamp": "2024-10-02T22:18:11Z"
            },
            "involvedObject": {
                "kind": "Service",
                "namespace": "kube-system",
                "name": "kube-dns",
                "uid": "b0d9a86e-9e5e-4fd4-be0a-9aab5e12e4ae",
                "apiVersion": "v1",
                "resourceVersion": "468"
            },
            "reason": "FailedToUpdateEndpointSlices",
            "message": "Error updating Endpoint Slices for Service kube-system/kube-dns: [skipping Pod coredns-597bb9d4db-vbmvk for Service kube-system/kube-dns: Node aks-agentpool-29385454-vmss000006 Not Found, skipping Pod coredns-597bb9d4db-g6br5 for Service kube-system/kube-dns: Node aks-agentpool-29385454-vmss000007 Not Found]",
            "source": {
                "component": "endpoint-slice-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:11Z",
            "lastTimestamp": "2024-10-02T22:18:25Z",
            "count": 4,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "endpoint-slice-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-dns.17fac2be9fdb84e1",
                "namespace": "kube-system",
                "uid": "98923149-8e3a-4779-985f-48da5c97e2de",
                "resourceVersion": "429082",
                "creationTimestamp": "2024-10-02T22:18:51Z"
            },
            "involvedObject": {
                "kind": "Service",
                "namespace": "kube-system",
                "name": "kube-dns",
                "uid": "b0d9a86e-9e5e-4fd4-be0a-9aab5e12e4ae",
                "apiVersion": "v1",
                "resourceVersion": "468"
            },
            "reason": "FailedToUpdateEndpointSlices",
            "message": "Error updating Endpoint Slices for Service kube-system/kube-dns: skipping Pod coredns-597bb9d4db-vbmvk for Service kube-system/kube-dns: Node aks-agentpool-29385454-vmss000006 Not Found",
            "source": {
                "component": "endpoint-slice-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:51Z",
            "lastTimestamp": "2024-10-02T22:18:51Z",
            "count": 3,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "endpoint-slice-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-lsxcg.17fac2bd4275f094",
                "namespace": "kube-system",
                "uid": "c0ffeaa7-7f84-4689-9cd8-fe4cc5bffa70",
                "resourceVersion": "428890",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-lsxcg",
                "uid": "feead270-92cc-46f8-b09f-c03c44c3075b",
                "apiVersion": "v1",
                "resourceVersion": "428885"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-lsxcg to aks-agentpool-29385454-vmss000008",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-lsxcg.17fac2be3f220826",
                "namespace": "kube-system",
                "uid": "3a62f945-bd94-470f-8834-6d12f127342d",
                "resourceVersion": "428980",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-lsxcg",
                "uid": "feead270-92cc-46f8-b09f-c03c44c3075b",
                "apiVersion": "v1",
                "resourceVersion": "428888",
                "fieldPath": "spec.initContainers{kube-proxy-bootstrap}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "kube-proxy-lsxcg.17fac2be430d53e7",
                "namespace": "kube-system",
                "uid": "abb6c890-b984-4aa6-91e9-2f18020e4e3d",
                "resourceVersion": "428986",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-lsxcg",
                "uid": "feead270-92cc-46f8-b09f-c03c44c3075b",
                "apiVersion": "v1",
                "resourceVersion": "428888",
                "fieldPath": "spec.initContainers{kube-proxy-bootstrap}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy-bootstrap",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "kube-proxy-lsxcg.17fac2be466ee38b",
                "namespace": "kube-system",
                "uid": "11480172-6911-471a-aa14-2932b9ead9d8",
                "resourceVersion": "428990",
                "creationTimestamp": "2024-10-02T22:18:49Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-lsxcg",
                "uid": "feead270-92cc-46f8-b09f-c03c44c3075b",
                "apiVersion": "v1",
                "resourceVersion": "428888",
                "fieldPath": "spec.initContainers{kube-proxy-bootstrap}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy-bootstrap",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:49Z",
            "lastTimestamp": "2024-10-02T22:18:49Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "kube-proxy-lsxcg.17fac2beda359995",
                "namespace": "kube-system",
                "uid": "ccd1bfee-baf8-4261-8580-db505468b314",
                "resourceVersion": "429121",
                "creationTimestamp": "2024-10-02T22:18:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-lsxcg",
                "uid": "feead270-92cc-46f8-b09f-c03c44c3075b",
                "apiVersion": "v1",
                "resourceVersion": "428888",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:52Z",
            "lastTimestamp": "2024-10-02T22:18:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "kube-proxy-lsxcg.17fac2bedab3e501",
                "namespace": "kube-system",
                "uid": "de6d296f-39d2-4f03-b0d4-7b563c99da12",
                "resourceVersion": "429125",
                "creationTimestamp": "2024-10-02T22:18:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-lsxcg",
                "uid": "feead270-92cc-46f8-b09f-c03c44c3075b",
                "apiVersion": "v1",
                "resourceVersion": "428888",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:52Z",
            "lastTimestamp": "2024-10-02T22:18:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "kube-proxy-lsxcg.17fac2bedde2276e",
                "namespace": "kube-system",
                "uid": "dec4968a-07c5-4502-ad5d-656bb90f2e86",
                "resourceVersion": "429128",
                "creationTimestamp": "2024-10-02T22:18:52Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-lsxcg",
                "uid": "feead270-92cc-46f8-b09f-c03c44c3075b",
                "apiVersion": "v1",
                "resourceVersion": "428888",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:52Z",
            "lastTimestamp": "2024-10-02T22:18:52Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "kube-proxy-zj62b.17fac2bb4b0344fc",
                "namespace": "kube-system",
                "uid": "eb3e841f-0cae-4a75-bd31-d4af55a7f8ed",
                "resourceVersion": "428687",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-zj62b",
                "uid": "f58756eb-81e0-4e65-a35e-9a77bd1a5f0e",
                "apiVersion": "v1",
                "resourceVersion": "428682"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-zj62b to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-zj62b.17fac2bbe227b3b6",
                "namespace": "kube-system",
                "uid": "bf02b0c1-0a35-427a-a152-3073a54287fb",
                "resourceVersion": "428731",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-zj62b",
                "uid": "f58756eb-81e0-4e65-a35e-9a77bd1a5f0e",
                "apiVersion": "v1",
                "resourceVersion": "428684",
                "fieldPath": "spec.initContainers{kube-proxy-bootstrap}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "kube-proxy-zj62b.17fac2bbe573f33b",
                "namespace": "kube-system",
                "uid": "e878e928-3350-4d4c-b634-4283e1d94998",
                "resourceVersion": "428736",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-zj62b",
                "uid": "f58756eb-81e0-4e65-a35e-9a77bd1a5f0e",
                "apiVersion": "v1",
                "resourceVersion": "428684",
                "fieldPath": "spec.initContainers{kube-proxy-bootstrap}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy-bootstrap",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "kube-proxy-zj62b.17fac2bbeb384f1d",
                "namespace": "kube-system",
                "uid": "9f47a9f0-8101-486d-be54-d9b2fb713fcd",
                "resourceVersion": "428739",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-zj62b",
                "uid": "f58756eb-81e0-4e65-a35e-9a77bd1a5f0e",
                "apiVersion": "v1",
                "resourceVersion": "428684",
                "fieldPath": "spec.initContainers{kube-proxy-bootstrap}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy-bootstrap",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "kube-proxy-zj62b.17fac2bc6af5d419",
                "namespace": "kube-system",
                "uid": "4626a776-0146-4a0a-9373-05b1b07443c4",
                "resourceVersion": "428802",
                "creationTimestamp": "2024-10-02T22:18:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-zj62b",
                "uid": "f58756eb-81e0-4e65-a35e-9a77bd1a5f0e",
                "apiVersion": "v1",
                "resourceVersion": "428684",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:41Z",
            "lastTimestamp": "2024-10-02T22:18:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "kube-proxy-zj62b.17fac2bc6ec0d4e7",
                "namespace": "kube-system",
                "uid": "5ce1097a-7234-492f-a840-fcdf91ca6d6b",
                "resourceVersion": "428807",
                "creationTimestamp": "2024-10-02T22:18:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-zj62b",
                "uid": "f58756eb-81e0-4e65-a35e-9a77bd1a5f0e",
                "apiVersion": "v1",
                "resourceVersion": "428684",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:41Z",
            "lastTimestamp": "2024-10-02T22:18:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "kube-proxy-zj62b.17fac2bc7475b12f",
                "namespace": "kube-system",
                "uid": "351555ab-d12f-4c1a-a2c4-bd2e8f5304bc",
                "resourceVersion": "428808",
                "creationTimestamp": "2024-10-02T22:18:41Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-zj62b",
                "uid": "f58756eb-81e0-4e65-a35e-9a77bd1a5f0e",
                "apiVersion": "v1",
                "resourceVersion": "428684",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:41Z",
            "lastTimestamp": "2024-10-02T22:18:41Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "kube-proxy.17fac2bb4a80540d",
                "namespace": "kube-system",
                "uid": "e7237eed-ac98-48ac-97f4-c759893295a9",
                "resourceVersion": "428683",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "6e5aee02-de72-413b-941f-9b8f2de82e16",
                "apiVersion": "apps/v1",
                "resourceVersion": "428477"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-zj62b",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.17fac2bd3f8c5c0a",
                "namespace": "kube-system",
                "uid": "2335527b-d3a6-4d73-b299-ba8a020d6d35",
                "resourceVersion": "428886",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "6e5aee02-de72-413b-941f-9b8f2de82e16",
                "apiVersion": "apps/v1",
                "resourceVersion": "428817"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-lsxcg",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "daemonset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler.17fac2b3988c908f",
                "namespace": "kube-system",
                "uid": "b47e6682-9316-40e3-acd1-c79716baaf25",
                "resourceVersion": "428381",
                "creationTimestamp": "2024-10-02T22:18:03Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "fb02ddb8-334d-4a8c-8c70-4e96595c9dca",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "428380"
            },
            "reason": "LeaderElection",
            "message": "kube-scheduler-v2-84b957bb87-ldmkb_3c4e0733-a66a-4e9c-b51c-9ffd1591bba3 became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:03Z",
            "lastTimestamp": "2024-10-02T22:18:03Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac26d829fca94",
                "namespace": "kube-system",
                "uid": "969b4d41-4d1b-44d3-8870-557b06ac6d3d",
                "resourceVersion": "428023",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "428022"
            },
            "reason": "FailedScheduling",
            "message": "0/2 nodes are available: 2 node(s) were unschedulable. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Warning",
            "eventTime": "2024-10-02T22:13:02.648735Z",
            "action": "Scheduling",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-kube-scheduler-v2-84b957bb87-7p7l9"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac26f6939e15d",
                "namespace": "kube-system",
                "uid": "261203db-13e2-4eb3-b224-123354997802",
                "resourceVersion": "428191",
                "creationTimestamp": "2024-10-02T22:13:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "428027"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:13:10Z",
            "lastTimestamp": "2024-10-02T22:13:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac2ac59c870f5",
                "namespace": "kube-system",
                "uid": "fbc53412-20d3-4faf-b79e-0c6f91894a92",
                "resourceVersion": "428285",
                "creationTimestamp": "2024-10-02T22:17:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "428027"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:17:32Z",
            "lastTimestamp": "2024-10-02T22:17:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac2b39d582ec3",
                "namespace": "kube-system",
                "uid": "fe47cb20-9488-4842-8626-d9839e76a037",
                "resourceVersion": "428607",
                "creationTimestamp": "2024-10-02T22:18:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "428027"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:03Z",
            "lastTimestamp": "2024-10-02T22:18:29Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac2bbfeaeb18d",
                "namespace": "kube-system",
                "uid": "91e5056f-6481-4478-8c48-0de4ef380811",
                "resourceVersion": "428758",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "428394"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac2bf4fab60ce",
                "namespace": "kube-system",
                "uid": "d4116ca1-b5e8-410f-a9a3-031398546963",
                "resourceVersion": "429186",
                "creationTimestamp": "2024-10-02T22:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "428759"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/metrics-server-f46f56d7b-5fc5j to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac2bfa85b8f23",
                "namespace": "kube-system",
                "uid": "084f78c1-0a57-4dbb-9e30-358337f87b0e",
                "resourceVersion": "429246",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "429168",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.22\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac2bfad8f4f5b",
                "namespace": "kube-system",
                "uid": "119deb7c-6c2c-4bd0-b7b4-d274fba54365",
                "resourceVersion": "429248",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "429168",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Created",
            "message": "Created container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac2bfb9baa4c3",
                "namespace": "kube-system",
                "uid": "49e1244b-0446-4c25-b354-d34530d1a475",
                "resourceVersion": "429267",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "429168",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Started",
            "message": "Started container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac2bfb9d007f4",
                "namespace": "kube-system",
                "uid": "a8455634-fd03-4cf4-8cfd-045c24ee37db",
                "resourceVersion": "429269",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "429168",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac2c2441a6c10",
                "namespace": "kube-system",
                "uid": "3dbfa93c-96dd-4cfa-a909-bfb00ed141be",
                "resourceVersion": "429444",
                "creationTimestamp": "2024-10-02T22:19:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "429168",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3\" in 721ms (10.91s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:06Z",
            "lastTimestamp": "2024-10-02T22:19:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac2c244803908",
                "namespace": "kube-system",
                "uid": "d30acfed-bfd1-4979-aa5c-b8ea885347d4",
                "resourceVersion": "429445",
                "creationTimestamp": "2024-10-02T22:19:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "429168",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Created",
            "message": "Created container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:06Z",
            "lastTimestamp": "2024-10-02T22:19:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j.17fac2c25a7607b0",
                "namespace": "kube-system",
                "uid": "c802400f-97c4-4b39-b70b-79b6fe98b052",
                "resourceVersion": "429458",
                "creationTimestamp": "2024-10-02T22:19:07Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-5fc5j",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "apiVersion": "v1",
                "resourceVersion": "429168",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Started",
            "message": "Started container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:07Z",
            "lastTimestamp": "2024-10-02T22:19:07Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-8ggbk.17fac26d8dedccfc",
                "namespace": "kube-system",
                "uid": "f4d04740-aff8-4561-b6b2-5c55ca9fb78a",
                "resourceVersion": "428034",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-8ggbk",
                "uid": "7b5a0f7c-912a-4333-aeb1-2a454aea7ba4",
                "apiVersion": "v1",
                "resourceVersion": "199165",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Killing",
            "message": "Stopping container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000007"
            },
            "firstTimestamp": "2024-10-02T22:13:02Z",
            "lastTimestamp": "2024-10-02T22:13:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000007"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-8ggbk.17fac26d8df264e4",
                "namespace": "kube-system",
                "uid": "48ab7e3c-6776-44a4-8156-9e8e8d50eca8",
                "resourceVersion": "428038",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-8ggbk",
                "uid": "7b5a0f7c-912a-4333-aeb1-2a454aea7ba4",
                "apiVersion": "v1",
                "resourceVersion": "199165",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Killing",
            "message": "Stopping container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000007"
            },
            "firstTimestamp": "2024-10-02T22:13:02Z",
            "lastTimestamp": "2024-10-02T22:13:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000007"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-n82dx.17fac26d8066ef78",
                "namespace": "kube-system",
                "uid": "8a37882a-b889-4b36-bf58-84a43f132e5a",
                "resourceVersion": "428017",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-n82dx",
                "uid": "d7ad1dfa-114e-4a8a-985f-69b99a629979",
                "apiVersion": "v1",
                "resourceVersion": "199166",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Killing",
            "message": "Stopping container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000006"
            },
            "firstTimestamp": "2024-10-02T22:13:02Z",
            "lastTimestamp": "2024-10-02T22:13:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000006"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-n82dx.17fac26d8067fcca",
                "namespace": "kube-system",
                "uid": "92d431c9-5889-4c45-8716-1187a1885daa",
                "resourceVersion": "428021",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-n82dx",
                "uid": "d7ad1dfa-114e-4a8a-985f-69b99a629979",
                "apiVersion": "v1",
                "resourceVersion": "199166",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Killing",
            "message": "Stopping container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000006"
            },
            "firstTimestamp": "2024-10-02T22:13:02Z",
            "lastTimestamp": "2024-10-02T22:13:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000006"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac26d8e850291",
                "namespace": "kube-system",
                "uid": "c1532901-1880-4165-a4db-b7a8ee078940",
                "resourceVersion": "428043",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "428041"
            },
            "reason": "FailedScheduling",
            "message": "0/2 nodes are available: 2 node(s) were unschedulable. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Warning",
            "eventTime": "2024-10-02T22:13:02.848307Z",
            "action": "Scheduling",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-kube-scheduler-v2-84b957bb87-7p7l9"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac26f6939de3d",
                "namespace": "kube-system",
                "uid": "020048e2-b650-4c87-862f-3cbc8473b6e6",
                "resourceVersion": "428189",
                "creationTimestamp": "2024-10-02T22:13:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "428045"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:13:10Z",
            "lastTimestamp": "2024-10-02T22:13:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac2ac59c8b295",
                "namespace": "kube-system",
                "uid": "e04e134f-8705-48ce-967c-9662237cc1dc",
                "resourceVersion": "428287",
                "creationTimestamp": "2024-10-02T22:17:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "428045"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:17:32Z",
            "lastTimestamp": "2024-10-02T22:17:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac2b39e3df760",
                "namespace": "kube-system",
                "uid": "821a55a8-2621-4523-bf90-a8e6b51b1c0f",
                "resourceVersion": "428608",
                "creationTimestamp": "2024-10-02T22:18:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "428045"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:03Z",
            "lastTimestamp": "2024-10-02T22:18:29Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac2bbff87d43a",
                "namespace": "kube-system",
                "uid": "5c79a52b-cee3-47cc-9ca0-74cc94f176e8",
                "resourceVersion": "428760",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "428396"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac2bf4fadf110",
                "namespace": "kube-system",
                "uid": "9831d5e6-9c56-4142-8232-3581442c0c59",
                "resourceVersion": "429187",
                "creationTimestamp": "2024-10-02T22:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "428761"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/metrics-server-f46f56d7b-trtqp to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac2bfae8c9b48",
                "namespace": "kube-system",
                "uid": "4a7e53fa-fd16-439c-add1-89f1f6e3aeb8",
                "resourceVersion": "429249",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "429171",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Pulled",
            "message": "Container image \"mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.22\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac2bfafe2decf",
                "namespace": "kube-system",
                "uid": "be5e673e-92bb-4f7c-a23e-0ad62768aa19",
                "resourceVersion": "429250",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "429171",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Created",
            "message": "Created container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac2bfba269181",
                "namespace": "kube-system",
                "uid": "8e073102-5cc1-4349-b752-1293d2060160",
                "resourceVersion": "429270",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "429171",
                "fieldPath": "spec.containers{metrics-server-vpa}"
            },
            "reason": "Started",
            "message": "Started container metrics-server-vpa",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac2bfba486927",
                "namespace": "kube-system",
                "uid": "4acb2dcd-307e-43c9-8ac6-adf3e7994183",
                "resourceVersion": "429271",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "429171",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac2c2479510c1",
                "namespace": "kube-system",
                "uid": "48d93f35-7e17-41ff-82d4-f8f31dc5a4e6",
                "resourceVersion": "429446",
                "creationTimestamp": "2024-10-02T22:19:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "429171",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3\" in 58ms (10.96s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:06Z",
            "lastTimestamp": "2024-10-02T22:19:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac2c2482e30a6",
                "namespace": "kube-system",
                "uid": "df2127ed-97c6-4330-a75d-c17869a0922f",
                "resourceVersion": "429448",
                "creationTimestamp": "2024-10-02T22:19:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "429171",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Created",
            "message": "Created container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:06Z",
            "lastTimestamp": "2024-10-02T22:19:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp.17fac2c25fdd0bb1",
                "namespace": "kube-system",
                "uid": "75141e1a-b821-473a-90b3-c906e0afbe27",
                "resourceVersion": "429464",
                "creationTimestamp": "2024-10-02T22:19:07Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b-trtqp",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "apiVersion": "v1",
                "resourceVersion": "429171",
                "fieldPath": "spec.containers{metrics-server}"
            },
            "reason": "Started",
            "message": "Started container metrics-server",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:07Z",
            "lastTimestamp": "2024-10-02T22:19:07Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b.17fac26d8303464b",
                "namespace": "kube-system",
                "uid": "7c3abbdf-0583-43e6-b2ee-a7d2d3b6b132",
                "resourceVersion": "428024",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b",
                "uid": "e65d18d5-b661-46b6-ac79-fa1db609863d",
                "apiVersion": "apps/v1",
                "resourceVersion": "199659"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: metrics-server-f46f56d7b-5fc5j",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:02Z",
            "lastTimestamp": "2024-10-02T22:13:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b.17fac26d8eea87e8",
                "namespace": "kube-system",
                "uid": "50b48d9d-d726-4559-b00f-e7c1664be999",
                "resourceVersion": "428042",
                "creationTimestamp": "2024-10-02T22:13:02Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "metrics-server-f46f56d7b",
                "uid": "e65d18d5-b661-46b6-ac79-fa1db609863d",
                "apiVersion": "apps/v1",
                "resourceVersion": "428028"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: metrics-server-f46f56d7b-trtqp",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:02Z",
            "lastTimestamp": "2024-10-02T22:13:02Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "snapshot-controller-leader.17fac2afa2973bd9",
                "namespace": "kube-system",
                "uid": "1e0d68e1-c572-4dff-b8b3-6219fe98cbd5",
                "resourceVersion": "428321",
                "creationTimestamp": "2024-10-02T22:17:46Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "snapshot-controller-leader",
                "uid": "6b8983b3-ef2a-48fe-8e7d-0443be212fac",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "428320"
            },
            "reason": "LeaderElection",
            "message": "csi-snapshot-controller-55bf4c59d4-nnj9g became leader",
            "source": {
                "component": "snapshot-controller-leader/csi-snapshot-controller-55bf4c59d4-nnj9g"
            },
            "firstTimestamp": "2024-10-02T22:17:46Z",
            "lastTimestamp": "2024-10-02T22:17:46Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "snapshot-controller-leader/csi-snapshot-controller-55bf4c59d4-nnj9g",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "433793"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "433793"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "b0d9a86e-9e5e-4fd4-be0a-9aab5e12e4ae",
                "resourceVersion": "468",
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\"},\"name\":\"kube-dns\",\"namespace\":\"kube-system\"},\"spec\":{\"clusterIP\":\"10.0.0.10\",\"ports\":[{\"name\":\"dns\",\"port\":53,\"protocol\":\"UDP\"},{\"name\":\"dns-tcp\",\"port\":53,\"protocol\":\"TCP\"}],\"selector\":{\"k8s-app\":\"kube-dns\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.0.0.10",
                "clusterIPs": [
                    "10.0.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "uid": "c9778234-970a-4b33-94b0-d2576a130a90",
                "resourceVersion": "538",
                "creationTimestamp": "2024-09-29T15:17:45Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "Metrics-server"
                },
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"Metrics-server\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"ports\":[{\"port\":443,\"protocol\":\"TCP\",\"targetPort\":\"ms-https\"}],\"selector\":{\"k8s-app\":\"metrics-server\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": "ms-https"
                    }
                ],
                "selector": {
                    "k8s-app": "metrics-server"
                },
                "clusterIP": "10.0.220.100",
                "clusterIPs": [
                    "10.0.220.100"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "433796"
    },
    "items": [
        {
            "metadata": {
                "name": "azure-cns",
                "namespace": "kube-system",
                "uid": "62d97116-0ce9-4f44-8703-8dd5a8e4f2af",
                "resourceVersion": "429476",
                "generation": 1,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "azure-cns",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"azure-cns\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"azure-cns\",\"namespace\":\"kube-system\"},\"spec\":{\"minReadySeconds\":10,\"selector\":{\"matchLabels\":{\"k8s-app\":\"azure-cns\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/daemonset-pod\":\"true\",\"kubernetes.azure.com/azure-cns-configmap-checksum\":\"77fe859ed6b2e8f8c98fe7b6f111ac01b266976cbf5b3a2f281f29d0b43812cd\",\"prometheus.io/port\":\"10092\"},\"labels\":{\"k8s-app\":\"azure-cns\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"args\":[\"-c\",\"tcp://$(CNSIpAddress):$(CNSPort)\",\"-t\",\"$(CNSLogTarget)\",\"-o\",\"$(CNSLogDir)\"],\"env\":[{\"name\":\"CNSIpAddress\",\"value\":\"127.0.0.1\"},{\"name\":\"CNSPort\",\"value\":\"10090\"},{\"name\":\"CNSLogTarget\",\"value\":\"stdoutfile\"},{\"name\":\"CNSLogDir\",\"value\":\"/var/log\"},{\"name\":\"CNS_CONFIGURATION_PATH\",\"value\":\"/etc/azure-cns/cns_config.json\"},{\"name\":\"NODENAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}},{\"name\":\"POD_CIDRs\",\"value\":\"10.244.0.0/16\"},{\"name\":\"SERVICE_CIDRs\",\"value\":\"10.0.0.0/16\"},{\"name\":\"INFRA_VNET_CIDRs\",\"value\":\"10.224.0.0/12\"}],\"image\":\"mcr.microsoft.com/containernetworking/azure-cns:v1.5.35\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cns-container\",\"ports\":[{\"containerPort\":10090,\"name\":\"api\"},{\"containerPort\":10092,\"name\":\"metrics\"}],\"resources\":{\"limits\":{\"cpu\":\"40m\",\"memory\":\"250Mi\"},\"requests\":{\"cpu\":\"40m\",\"memory\":\"250Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/var/log\",\"name\":\"log\"},{\"mountPath\":\"/var/lib/azure-network\",\"name\":\"cns-state\"},{\"mountPath\":\"/etc/azure-cns\",\"name\":\"cns-config\"},{\"mountPath\":\"/opt/cni/bin\",\"name\":\"cni-bin\"},{\"mountPath\":\"/var/run/azure-vnet\",\"name\":\"azure-vnet\"},{\"mountPath\":\"/var/lock/azure-vnet\",\"name\":\"cni-lock\"},{\"mountPath\":\"/var/run/azure-vnet.json\",\"name\":\"legacy-cni-state\"},{\"mountPath\":\"/etc/cni/net.d\",\"name\":\"cni-conflist\"}]}],\"hostNetwork\":true,\"initContainers\":[{\"args\":[\"deploy\",\"--skip-verify\",\"azure-vnet\",\"-o\",\"/opt/cni/bin/azure-vnet\",\"azure-vnet-telemetry\",\"-o\",\"/opt/cni/bin/azure-vnet-telemetry\"],\"command\":[\"/dropgz\"],\"image\":\"mcr.microsoft.com/containernetworking/azure-cni:v1.5.35\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cni-installer\",\"volumeMounts\":[{\"mountPath\":\"/opt/cni/bin\",\"name\":\"cni-bin\"},{\"mountPath\":\"/etc/cni/net.d\",\"name\":\"cni-conflist\"}]}],\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"azure-cns\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/log/azure-cns\",\"type\":\"DirectoryOrCreate\"},\"name\":\"log\"},{\"hostPath\":{\"path\":\"/var/lib/azure-network\",\"type\":\"DirectoryOrCreate\"},\"name\":\"cns-state\"},{\"hostPath\":{\"path\":\"/opt/cni/bin\",\"type\":\"Directory\"},\"name\":\"cni-bin\"},{\"hostPath\":{\"path\":\"/var/run/azure-vnet\",\"type\":\"DirectoryOrCreate\"},\"name\":\"azure-vnet\"},{\"hostPath\":{\"path\":\"/var/lock/azure-vnet\",\"type\":\"DirectoryOrCreate\"},\"name\":\"cni-lock\"},{\"hostPath\":{\"path\":\"/var/run/azure-vnet.json\",\"type\":\"FileOrCreate\"},\"name\":\"legacy-cni-state\"},{\"hostPath\":{\"path\":\"/etc/cni/net.d\",\"type\":\"Directory\"},\"name\":\"cni-conflist\"},{\"configMap\":{\"name\":\"cns-config\"},\"name\":\"cns-config\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"2%\"},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "azure-cns"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "azure-cns",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/daemonset-pod": "true",
                            "kubernetes.azure.com/azure-cns-configmap-checksum": "77fe859ed6b2e8f8c98fe7b6f111ac01b266976cbf5b3a2f281f29d0b43812cd",
                            "prometheus.io/port": "10092"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "log",
                                "hostPath": {
                                    "path": "/var/log/azure-cns",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cns-state",
                                "hostPath": {
                                    "path": "/var/lib/azure-network",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cni-bin",
                                "hostPath": {
                                    "path": "/opt/cni/bin",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "azure-vnet",
                                "hostPath": {
                                    "path": "/var/run/azure-vnet",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cni-lock",
                                "hostPath": {
                                    "path": "/var/lock/azure-vnet",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "legacy-cni-state",
                                "hostPath": {
                                    "path": "/var/run/azure-vnet.json",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "cni-conflist",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "cns-config",
                                "configMap": {
                                    "name": "cns-config",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "cni-installer",
                                "image": "mcr.microsoft.com/containernetworking/azure-cni:v1.5.35",
                                "command": [
                                    "/dropgz"
                                ],
                                "args": [
                                    "deploy",
                                    "--skip-verify",
                                    "azure-vnet",
                                    "-o",
                                    "/opt/cni/bin/azure-vnet",
                                    "azure-vnet-telemetry",
                                    "-o",
                                    "/opt/cni/bin/azure-vnet-telemetry"
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin",
                                        "mountPath": "/opt/cni/bin"
                                    },
                                    {
                                        "name": "cni-conflist",
                                        "mountPath": "/etc/cni/net.d"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "containers": [
                            {
                                "name": "cns-container",
                                "image": "mcr.microsoft.com/containernetworking/azure-cns:v1.5.35",
                                "args": [
                                    "-c",
                                    "tcp://$(CNSIpAddress):$(CNSPort)",
                                    "-t",
                                    "$(CNSLogTarget)",
                                    "-o",
                                    "$(CNSLogDir)"
                                ],
                                "ports": [
                                    {
                                        "name": "api",
                                        "containerPort": 10090,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 10092,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "CNSIpAddress",
                                        "value": "127.0.0.1"
                                    },
                                    {
                                        "name": "CNSPort",
                                        "value": "10090"
                                    },
                                    {
                                        "name": "CNSLogTarget",
                                        "value": "stdoutfile"
                                    },
                                    {
                                        "name": "CNSLogDir",
                                        "value": "/var/log"
                                    },
                                    {
                                        "name": "CNS_CONFIGURATION_PATH",
                                        "value": "/etc/azure-cns/cns_config.json"
                                    },
                                    {
                                        "name": "NODENAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_CIDRs",
                                        "value": "10.244.0.0/16"
                                    },
                                    {
                                        "name": "SERVICE_CIDRs",
                                        "value": "10.0.0.0/16"
                                    },
                                    {
                                        "name": "INFRA_VNET_CIDRs",
                                        "value": "10.224.0.0/12"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "40m",
                                        "memory": "250Mi"
                                    },
                                    "requests": {
                                        "cpu": "40m",
                                        "memory": "250Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "log",
                                        "mountPath": "/var/log"
                                    },
                                    {
                                        "name": "cns-state",
                                        "mountPath": "/var/lib/azure-network"
                                    },
                                    {
                                        "name": "cns-config",
                                        "mountPath": "/etc/azure-cns"
                                    },
                                    {
                                        "name": "cni-bin",
                                        "mountPath": "/opt/cni/bin"
                                    },
                                    {
                                        "name": "azure-vnet",
                                        "mountPath": "/var/run/azure-vnet"
                                    },
                                    {
                                        "name": "cni-lock",
                                        "mountPath": "/var/lock/azure-vnet"
                                    },
                                    {
                                        "name": "legacy-cni-state",
                                        "mountPath": "/var/run/azure-vnet.json"
                                    },
                                    {
                                        "name": "cni-conflist",
                                        "mountPath": "/etc/cni/net.d"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "azure-cns",
                        "serviceAccount": "azure-cns",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "2%",
                        "maxSurge": 0
                    }
                },
                "minReadySeconds": 10,
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        },
        {
            "metadata": {
                "name": "azure-cns-win",
                "namespace": "kube-system",
                "uid": "d6b93203-88a9-45b9-a74e-ef4e6eec647a",
                "resourceVersion": "420",
                "generation": 1,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "azure-cns-win",
                    "kubernetes.azure.com/managedby": "aks"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"azure-cns-win\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"azure-cns-win\",\"namespace\":\"kube-system\"},\"spec\":{\"minReadySeconds\":10,\"selector\":{\"matchLabels\":{\"k8s-app\":\"azure-cns-win\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/daemonset-pod\":\"true\",\"kubernetes.azure.com/azure-cns-configmap-checksum\":\"77fe859ed6b2e8f8c98fe7b6f111ac01b266976cbf5b3a2f281f29d0b43812cd\",\"prometheus.io/port\":\"10092\"},\"labels\":{\"k8s-app\":\"azure-cns-win\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"args\":[\".\\\\setkubeconfigpath.ps1\",\";\",\".\\\\azure-cns.exe\",\"-c\",\"tcp://$(CNSIpAddress):$(CNSPort)\",\"-t\",\"$(CNSLogTarget)\",\"-o\",\"$(CNSLogDir)\",\"-storefilepath\",\"$(CNSStoreFilePath)\",\"-config-path\",\"%CONTAINER_SANDBOX_MOUNT_POINT%\\\\$(CNS_CONFIGURATION_PATH)\",\"--kubeconfig\",\".\\\\kubeconfig\"],\"command\":[\"powershell.exe\"],\"env\":[{\"name\":\"PATH\",\"value\":\"%CONTAINER_SANDBOX_MOUNT_POINT%\\\\Windows\\\\System32\\\\WindowsPowershell\\\\v1.0\\\\\"},{\"name\":\"CNSIpAddress\",\"value\":\"127.0.0.1\"},{\"name\":\"CNSPort\",\"value\":\"10090\"},{\"name\":\"CNSLogTarget\",\"value\":\"stdoutfile\"},{\"name\":\"CNSLogDir\",\"value\":\"/k/azurecns\"},{\"name\":\"CNSStoreFilePath\",\"value\":\"/k/azurecns/\"},{\"name\":\"CNS_CONFIGURATION_PATH\",\"value\":\"/etc/azure-cns/cns_config.json\"},{\"name\":\"NODENAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/containernetworking/azure-cns:v1.5.35\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cns-container\",\"ports\":[{\"containerPort\":10090,\"name\":\"api\"},{\"containerPort\":10092,\"name\":\"metrics\"}],\"resources\":{\"limits\":{\"cpu\":\"250m\",\"memory\":\"250Mi\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/k/azurecns\",\"name\":\"log\"},{\"mountPath\":\"/etc/azure-cns\",\"name\":\"cns-config\"},{\"mountPath\":\"/var/run/azure-vnet\",\"name\":\"azure-vnet\"}],\"workingDir\":\"$env:CONTAINER_SANDBOX_MOUNT_POINT\"}],\"hostNetwork\":true,\"initContainers\":[{\"args\":[\"%CONTAINER_SANDBOX_MOUNT_POINT%/dropgz\",\"deploy\",\"--skip-verify\",\"azure-vnet\",\"-o\",\"/k/azurecni/bin/azure-vnet.exe\"],\"command\":[\"powershell.exe\"],\"env\":[{\"name\":\"PATHEXT\",\"value\":\".EXE;;\"}],\"image\":\"mcr.microsoft.com/containernetworking/azure-cni:v1.5.35\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cni-installer\",\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}},\"volumeMounts\":[{\"mountPath\":\"/k/azurecni/bin/\",\"name\":\"cni-bin\"}]}],\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"windowsOptions\":{\"hostProcess\":true,\"runAsUserName\":\"NT AUTHORITY\\\\SYSTEM\"}},\"serviceAccountName\":\"azure-cns\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/k/azurecns\",\"type\":\"DirectoryOrCreate\"},\"name\":\"log\"},{\"configMap\":{\"name\":\"cns-win-config\"},\"name\":\"cns-config\"},{\"hostPath\":{\"path\":\"/var/run/azure-vnet\",\"type\":\"DirectoryOrCreate\"},\"name\":\"azure-vnet\"},{\"hostPath\":{\"path\":\"/k/azurecni/bin\",\"type\":\"DirectoryOrCreate\"},\"name\":\"cni-bin\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"2%\"},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "azure-cns-win"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "azure-cns-win",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/daemonset-pod": "true",
                            "kubernetes.azure.com/azure-cns-configmap-checksum": "77fe859ed6b2e8f8c98fe7b6f111ac01b266976cbf5b3a2f281f29d0b43812cd",
                            "prometheus.io/port": "10092"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "log",
                                "hostPath": {
                                    "path": "/k/azurecns",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cns-config",
                                "configMap": {
                                    "name": "cns-win-config",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "azure-vnet",
                                "hostPath": {
                                    "path": "/var/run/azure-vnet",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "cni-bin",
                                "hostPath": {
                                    "path": "/k/azurecni/bin",
                                    "type": "DirectoryOrCreate"
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "cni-installer",
                                "image": "mcr.microsoft.com/containernetworking/azure-cni:v1.5.35",
                                "command": [
                                    "powershell.exe"
                                ],
                                "args": [
                                    "%CONTAINER_SANDBOX_MOUNT_POINT%/dropgz",
                                    "deploy",
                                    "--skip-verify",
                                    "azure-vnet",
                                    "-o",
                                    "/k/azurecni/bin/azure-vnet.exe"
                                ],
                                "env": [
                                    {
                                        "name": "PATHEXT",
                                        "value": ".EXE;;"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "cni-bin",
                                        "mountPath": "/k/azurecni/bin/"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "cns-container",
                                "image": "mcr.microsoft.com/containernetworking/azure-cns:v1.5.35",
                                "command": [
                                    "powershell.exe"
                                ],
                                "args": [
                                    ".\\setkubeconfigpath.ps1",
                                    ";",
                                    ".\\azure-cns.exe",
                                    "-c",
                                    "tcp://$(CNSIpAddress):$(CNSPort)",
                                    "-t",
                                    "$(CNSLogTarget)",
                                    "-o",
                                    "$(CNSLogDir)",
                                    "-storefilepath",
                                    "$(CNSStoreFilePath)",
                                    "-config-path",
                                    "%CONTAINER_SANDBOX_MOUNT_POINT%\\$(CNS_CONFIGURATION_PATH)",
                                    "--kubeconfig",
                                    ".\\kubeconfig"
                                ],
                                "workingDir": "$env:CONTAINER_SANDBOX_MOUNT_POINT",
                                "ports": [
                                    {
                                        "name": "api",
                                        "containerPort": 10090,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 10092,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "PATH",
                                        "value": "%CONTAINER_SANDBOX_MOUNT_POINT%\\Windows\\System32\\WindowsPowershell\\v1.0\\"
                                    },
                                    {
                                        "name": "CNSIpAddress",
                                        "value": "127.0.0.1"
                                    },
                                    {
                                        "name": "CNSPort",
                                        "value": "10090"
                                    },
                                    {
                                        "name": "CNSLogTarget",
                                        "value": "stdoutfile"
                                    },
                                    {
                                        "name": "CNSLogDir",
                                        "value": "/k/azurecns"
                                    },
                                    {
                                        "name": "CNSStoreFilePath",
                                        "value": "/k/azurecns/"
                                    },
                                    {
                                        "name": "CNS_CONFIGURATION_PATH",
                                        "value": "/etc/azure-cns/cns_config.json"
                                    },
                                    {
                                        "name": "NODENAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "250m",
                                        "memory": "250Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "log",
                                        "mountPath": "/k/azurecns"
                                    },
                                    {
                                        "name": "cns-config",
                                        "mountPath": "/etc/azure-cns"
                                    },
                                    {
                                        "name": "azure-vnet",
                                        "mountPath": "/var/run/azure-vnet"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "azure-cns",
                        "serviceAccount": "azure-cns",
                        "hostNetwork": true,
                        "securityContext": {
                            "windowsOptions": {
                                "runAsUserName": "NT AUTHORITY\\SYSTEM",
                                "hostProcess": true
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "2%",
                        "maxSurge": 0
                    }
                },
                "minReadySeconds": 10,
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent",
                "namespace": "kube-system",
                "uid": "60aba0f4-367f-40da-90e3-4b5df690d66f",
                "resourceVersion": "430058",
                "generation": 1,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "component": "azure-ip-masq-agent",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"component\":\"azure-ip-masq-agent\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\",\"tier\":\"node\"},\"name\":\"azure-ip-masq-agent\",\"namespace\":\"kube-system\"},\"spec\":{\"minReadySeconds\":60,\"selector\":{\"matchLabels\":{\"k8s-app\":\"azure-ip-masq-agent\",\"tier\":\"node\"}},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"azure-ip-masq-agent\",\"kubernetes.azure.com/managedby\":\"aks\",\"tier\":\"node\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"automountServiceAccountToken\":false,\"containers\":[{\"args\":[\"--v=2\",\"--resync-interval=60\"],\"image\":\"mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.13\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"azure-ip-masq-agent\",\"resources\":{\"limits\":{\"cpu\":\"500m\",\"memory\":\"250Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"50Mi\"}},\"securityContext\":{\"capabilities\":{\"add\":[\"NET_ADMIN\",\"NET_RAW\"],\"drop\":[\"ALL\"]}},\"volumeMounts\":[{\"mountPath\":\"/etc/config\",\"name\":\"azure-ip-masq-agent-config-volume\"},{\"mountPath\":\"/run/xtables.lock\",\"name\":\"iptableslock\"}]}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"name\":\"azure-ip-masq-agent-config-volume\",\"projected\":{\"sources\":[{\"configMap\":{\"items\":[{\"key\":\"ip-masq-agent\",\"mode\":444,\"path\":\"ip-masq-agent\"}],\"name\":\"azure-ip-masq-agent-config\",\"optional\":true}},{\"configMap\":{\"items\":[{\"key\":\"ip-masq-agent-reconciled\",\"mode\":444,\"path\":\"ip-masq-agent-reconciled\"}],\"name\":\"azure-ip-masq-agent-config-reconciled\",\"optional\":true}}]}},{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"iptableslock\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":\"25%\"},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "azure-ip-masq-agent",
                        "tier": "node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "azure-ip-masq-agent",
                            "kubernetes.azure.com/managedby": "aks",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "azure-ip-masq-agent-config-volume",
                                "projected": {
                                    "sources": [
                                        {
                                            "configMap": {
                                                "name": "azure-ip-masq-agent-config",
                                                "items": [
                                                    {
                                                        "key": "ip-masq-agent",
                                                        "path": "ip-masq-agent",
                                                        "mode": 444
                                                    }
                                                ],
                                                "optional": true
                                            }
                                        },
                                        {
                                            "configMap": {
                                                "name": "azure-ip-masq-agent-config-reconciled",
                                                "items": [
                                                    {
                                                        "key": "ip-masq-agent-reconciled",
                                                        "path": "ip-masq-agent-reconciled",
                                                        "mode": 444
                                                    }
                                                ],
                                                "optional": true
                                            }
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "iptableslock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "azure-ip-masq-agent",
                                "image": "mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.13",
                                "args": [
                                    "--v=2",
                                    "--resync-interval=60"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "500m",
                                        "memory": "250Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "azure-ip-masq-agent-config-volume",
                                        "mountPath": "/etc/config"
                                    },
                                    {
                                        "name": "iptableslock",
                                        "mountPath": "/run/xtables.lock"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_ADMIN",
                                            "NET_RAW"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "automountServiceAccountToken": false,
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": 0
                    }
                },
                "minReadySeconds": 60,
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        },
        {
            "metadata": {
                "name": "cloud-node-manager",
                "namespace": "kube-system",
                "uid": "c64a1005-475d-46e0-9381-a5442181079a",
                "resourceVersion": "429003",
                "generation": 1,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "cloud-node-manager",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"cloud-node-manager\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"cloud-node-manager\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"cloud-node-manager\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/daemonset-pod\":\"true\"},\"labels\":{\"k8s-app\":\"cloud-node-manager\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"command\":[\"cloud-node-manager\",\"--node-name=$(NODE_NAME)\",\"--enable-deprecated-beta-topology-labels=true\"],\"env\":[{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.29.9\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cloud-node-manager\",\"resources\":{\"limits\":{\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"50Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"cloud-node-manager\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\",\"value\":\"true\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "cloud-node-manager"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "cloud-node-manager",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/daemonset-pod": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "cloud-node-manager",
                                "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.29.9",
                                "command": [
                                    "cloud-node-manager",
                                    "--node-name=$(NODE_NAME)",
                                    "--enable-deprecated-beta-topology-labels=true"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "512Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "50Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "cloud-node-manager",
                        "serviceAccount": "cloud-node-manager",
                        "hostNetwork": true,
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal",
                                "value": "true",
                                "effect": "NoSchedule"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        },
        {
            "metadata": {
                "name": "cloud-node-manager-windows",
                "namespace": "kube-system",
                "uid": "3127c8ab-dc1f-4e8d-8a59-831d1de83cc4",
                "resourceVersion": "431",
                "generation": 1,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "cloud-node-manager",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"cloud-node-manager\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"cloud-node-manager-windows\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"k8s-app\":\"cloud-node-manager-windows\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/daemonset-pod\":\"true\"},\"labels\":{\"k8s-app\":\"cloud-node-manager-windows\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"command\":[\"/cloud-node-manager.exe\",\"--node-name=$(NODE_NAME)\"],\"env\":[{\"name\":\"NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.29.9\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"cloud-node-manager\",\"resources\":{\"limits\":{\"memory\":\"512Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"50Mi\"}}}],\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"cloud-node-manager\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\",\"operator\":\"Equal\",\"value\":\"true\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "cloud-node-manager-windows"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "cloud-node-manager-windows",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/daemonset-pod": "true"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "cloud-node-manager",
                                "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.29.9",
                                "command": [
                                    "/cloud-node-manager.exe",
                                    "--node-name=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "512Mi"
                                    },
                                    "requests": {
                                        "cpu": "50m",
                                        "memory": "50Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "cloud-node-manager",
                        "serviceAccount": "cloud-node-manager",
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/master",
                                "operator": "Equal",
                                "value": "true",
                                "effect": "NoSchedule"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node",
                "namespace": "kube-system",
                "uid": "120c3990-2b2c-47a7-84a6-20757673b3ca",
                "resourceVersion": "429200",
                "generation": 1,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"csi-azuredisk-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"csi-azuredisk-node\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-azuredisk-node\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"args\":[\"--csi-address=/csi/csi.sock\",\"--probe-timeout=3s\",\"--health-port=29603\",\"--v=2\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"liveness-probe\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"}]},{\"args\":[\"--csi-address=$(ADDRESS)\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--v=2\"],\"env\":[{\"name\":\"ADDRESS\",\"value\":\"/csi/csi.sock\"},{\"name\":\"DRIVER_REG_SOCK_PATH\",\"value\":\"/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock\"}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"exec\":{\"command\":[\"/csi-node-driver-registrar\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--mode=kubelet-registration-probe\"]},\"initialDelaySeconds\":60,\"timeoutSeconds\":30},\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"},{\"mountPath\":\"/registration\",\"name\":\"registration-dir\"}]},{\"args\":[\"--v=5\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--enable-perf-optimization=true\"],\"env\":[{\"name\":\"AZURE_CREDENTIAL_FILE\",\"value\":\"/etc/kubernetes/azure.json\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix:///csi/csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":10},\"name\":\"azuredisk\",\"ports\":[{\"containerPort\":29603,\"name\":\"healthz\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"memory\":\"600Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"},{\"mountPath\":\"/var/lib/kubelet/\",\"mountPropagation\":\"Bidirectional\",\"name\":\"mountpoint-dir\"},{\"mountPath\":\"/etc/kubernetes/\",\"name\":\"azure-cred\"},{\"mountPath\":\"/dev\",\"name\":\"device-dir\"},{\"mountPath\":\"/sys/bus/scsi/devices\",\"name\":\"sys-devices-dir\"},{\"mountPath\":\"/sys/class/scsi_host/\",\"name\":\"scsi-host-dir\"}]}],\"dnsPolicy\":\"Default\",\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"csi-azuredisk-node-sa\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins/disk.csi.azure.com\",\"type\":\"DirectoryOrCreate\"},\"name\":\"socket-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"mountpoint-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins_registry/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"registration-dir\"},{\"hostPath\":{\"path\":\"/etc/kubernetes/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"azure-cred\"},{\"hostPath\":{\"path\":\"/dev\",\"type\":\"Directory\"},\"name\":\"device-dir\"},{\"hostPath\":{\"path\":\"/sys/bus/scsi/devices\",\"type\":\"Directory\"},\"name\":\"sys-devices-dir\"},{\"hostPath\":{\"path\":\"/sys/class/scsi_host/\",\"type\":\"Directory\"},\"name\":\"scsi-host-dir\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "csi-azuredisk-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "csi-azuredisk-node",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "socket-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins/disk.csi.azure.com",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "mountpoint-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "registration-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins_registry/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "azure-cred",
                                "hostPath": {
                                    "path": "/etc/kubernetes/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "device-dir",
                                "hostPath": {
                                    "path": "/dev",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "sys-devices-dir",
                                "hostPath": {
                                    "path": "/sys/bus/scsi/devices",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "scsi-host-dir",
                                "hostPath": {
                                    "path": "/sys/class/scsi_host/",
                                    "type": "Directory"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "liveness-probe",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0",
                                "args": [
                                    "--csi-address=/csi/csi.sock",
                                    "--probe-timeout=3s",
                                    "--health-port=29603",
                                    "--v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1",
                                "args": [
                                    "--csi-address=$(ADDRESS)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--v=2"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/csi/csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "registration-dir",
                                        "mountPath": "/registration"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/csi-node-driver-registrar",
                                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                            "--mode=kubelet-registration-probe"
                                        ]
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "azuredisk",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9",
                                "args": [
                                    "--v=5",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--enable-perf-optimization=true"
                                ],
                                "ports": [
                                    {
                                        "name": "healthz",
                                        "containerPort": 29603,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "AZURE_CREDENTIAL_FILE",
                                        "value": "/etc/kubernetes/azure.json"
                                    },
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix:///csi/csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "600Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "mountpoint-dir",
                                        "mountPath": "/var/lib/kubelet/",
                                        "mountPropagation": "Bidirectional"
                                    },
                                    {
                                        "name": "azure-cred",
                                        "mountPath": "/etc/kubernetes/"
                                    },
                                    {
                                        "name": "device-dir",
                                        "mountPath": "/dev"
                                    },
                                    {
                                        "name": "sys-devices-dir",
                                        "mountPath": "/sys/bus/scsi/devices"
                                    },
                                    {
                                        "name": "scsi-host-dir",
                                        "mountPath": "/sys/class/scsi_host/"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "csi-azuredisk-node-sa",
                        "serviceAccount": "csi-azuredisk-node-sa",
                        "hostNetwork": true,
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-win",
                "namespace": "kube-system",
                "uid": "3482bf6f-a9dd-43ce-86a2-2df87285a3bb",
                "resourceVersion": "493",
                "generation": 1,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"csi-azuredisk-node-win\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"csi-azuredisk-node-win\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-azuredisk-node-win\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"args\":[\"--v=2\",\"--csi-address=$(CSI_ENDPOINT)\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--plugin-registration-path=$(PLUGIN_REG_DIR)\"],\"command\":[\"csi-node-driver-registrar.exe\"],\"env\":[{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\disk.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"DRIVER_REG_SOCK_PATH\",\"value\":\"C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\disk.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"PLUGIN_REG_DIR\",\"value\":\"C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins_registry\\\\\\\\\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"150Mi\"},\"requests\":{\"cpu\":\"40m\",\"memory\":\"40Mi\"}}},{\"args\":[\"--v=5\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--enable-windows-host-process=true\"],\"command\":[\"azurediskplugin.exe\"],\"env\":[{\"name\":\"AZURE_CREDENTIAL_FILE\",\"value\":\"C:\\\\k\\\\azure.json\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\disk.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9-windows-hp\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"azuredisk\"}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"powershell.exe\",\"-c\",\"New-Item -ItemType Directory -Path C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\ -Force\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9-windows-hp\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"init\"}],\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"},\"windowsOptions\":{\"hostProcess\":true,\"runAsUserName\":\"NT AUTHORITY\\\\SYSTEM\"}},\"serviceAccountName\":\"csi-azuredisk-node-sa\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "csi-azuredisk-node-win"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "csi-azuredisk-node-win",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "initContainers": [
                            {
                                "name": "init",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9-windows-hp",
                                "command": [
                                    "powershell.exe",
                                    "-c",
                                    "New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\ -Force"
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "containers": [
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1",
                                "command": [
                                    "csi-node-driver-registrar.exe"
                                ],
                                "args": [
                                    "--v=2",
                                    "--csi-address=$(CSI_ENDPOINT)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--plugin-registration-path=$(PLUGIN_REG_DIR)"
                                ],
                                "env": [
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "PLUGIN_REG_DIR",
                                        "value": "C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "150Mi"
                                    },
                                    "requests": {
                                        "cpu": "40m",
                                        "memory": "40Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "azuredisk",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9-windows-hp",
                                "command": [
                                    "azurediskplugin.exe"
                                ],
                                "args": [
                                    "--v=5",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--enable-windows-host-process=true"
                                ],
                                "env": [
                                    {
                                        "name": "AZURE_CREDENTIAL_FILE",
                                        "value": "C:\\k\\azure.json"
                                    },
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "csi-azuredisk-node-sa",
                        "serviceAccount": "csi-azuredisk-node-sa",
                        "hostNetwork": true,
                        "securityContext": {
                            "windowsOptions": {
                                "runAsUserName": "NT AUTHORITY\\SYSTEM",
                                "hostProcess": true
                            },
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "csi-azurefile-node",
                "namespace": "kube-system",
                "uid": "c2ce98e7-0b59-4347-a09b-a2117c9be016",
                "resourceVersion": "429206",
                "generation": 1,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"csi-azurefile-node\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"csi-azurefile-node\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-azurefile-node\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"args\":[\"--csi-address=/csi/csi.sock\",\"--probe-timeout=3s\",\"--health-port=29613\",\"--v=2\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"liveness-probe\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"}]},{\"args\":[\"--csi-address=$(ADDRESS)\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--v=2\"],\"env\":[{\"name\":\"ADDRESS\",\"value\":\"/csi/csi.sock\"},{\"name\":\"DRIVER_REG_SOCK_PATH\",\"value\":\"/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock\"}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"exec\":{\"command\":[\"/csi-node-driver-registrar\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--mode=kubelet-registration-probe\"]},\"initialDelaySeconds\":60,\"timeoutSeconds\":30},\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"100Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"},{\"mountPath\":\"/registration\",\"name\":\"registration-dir\"}]},{\"args\":[\"--v=5\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--enable-get-volume-stats=true\",\"--mount-permissions=0777\",\"--metrics-address=0.0.0.0:29615\"],\"env\":[{\"name\":\"AZURE_CREDENTIAL_FILE\",\"value\":\"/etc/kubernetes/azure.json\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix:///csi/csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/healthz\",\"port\":\"healthz\"},\"initialDelaySeconds\":30,\"periodSeconds\":30,\"timeoutSeconds\":10},\"name\":\"azurefile\",\"ports\":[{\"containerPort\":29613,\"name\":\"healthz\",\"protocol\":\"TCP\"},{\"containerPort\":29615,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"resources\":{\"limits\":{\"memory\":\"400Mi\"},\"requests\":{\"cpu\":\"10m\",\"memory\":\"20Mi\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/csi\",\"name\":\"socket-dir\"},{\"mountPath\":\"/var/lib/kubelet/\",\"mountPropagation\":\"Bidirectional\",\"name\":\"mountpoint-dir\"},{\"mountPath\":\"/etc/kubernetes/\",\"name\":\"azure-cred\"},{\"mountPath\":\"/dev\",\"name\":\"device-dir\"}]}],\"dnsPolicy\":\"Default\",\"hostNetwork\":true,\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"csi-azurefile-node-sa\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins/file.csi.azure.com\",\"type\":\"DirectoryOrCreate\"},\"name\":\"socket-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"mountpoint-dir\"},{\"hostPath\":{\"path\":\"/var/lib/kubelet/plugins_registry/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"registration-dir\"},{\"hostPath\":{\"path\":\"/etc/kubernetes/\",\"type\":\"DirectoryOrCreate\"},\"name\":\"azure-cred\"},{\"hostPath\":{\"path\":\"/dev\",\"type\":\"Directory\"},\"name\":\"device-dir\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "csi-azurefile-node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "csi-azurefile-node",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "socket-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins/file.csi.azure.com",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "mountpoint-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "registration-dir",
                                "hostPath": {
                                    "path": "/var/lib/kubelet/plugins_registry/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "azure-cred",
                                "hostPath": {
                                    "path": "/etc/kubernetes/",
                                    "type": "DirectoryOrCreate"
                                }
                            },
                            {
                                "name": "device-dir",
                                "hostPath": {
                                    "path": "/dev",
                                    "type": "Directory"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "liveness-probe",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0",
                                "args": [
                                    "--csi-address=/csi/csi.sock",
                                    "--probe-timeout=3s",
                                    "--health-port=29613",
                                    "--v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1",
                                "args": [
                                    "--csi-address=$(ADDRESS)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--v=2"
                                ],
                                "env": [
                                    {
                                        "name": "ADDRESS",
                                        "value": "/csi/csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "100Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "registration-dir",
                                        "mountPath": "/registration"
                                    }
                                ],
                                "livenessProbe": {
                                    "exec": {
                                        "command": [
                                            "/csi-node-driver-registrar",
                                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                            "--mode=kubelet-registration-probe"
                                        ]
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 30,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "azurefile",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5",
                                "args": [
                                    "--v=5",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--enable-get-volume-stats=true",
                                    "--mount-permissions=0777",
                                    "--metrics-address=0.0.0.0:29615"
                                ],
                                "ports": [
                                    {
                                        "name": "healthz",
                                        "containerPort": 29613,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 29615,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "AZURE_CREDENTIAL_FILE",
                                        "value": "/etc/kubernetes/azure.json"
                                    },
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix:///csi/csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "400Mi"
                                    },
                                    "requests": {
                                        "cpu": "10m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "socket-dir",
                                        "mountPath": "/csi"
                                    },
                                    {
                                        "name": "mountpoint-dir",
                                        "mountPath": "/var/lib/kubelet/",
                                        "mountPropagation": "Bidirectional"
                                    },
                                    {
                                        "name": "azure-cred",
                                        "mountPath": "/etc/kubernetes/"
                                    },
                                    {
                                        "name": "device-dir",
                                        "mountPath": "/dev"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": "healthz",
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "csi-azurefile-node-sa",
                        "serviceAccount": "csi-azurefile-node-sa",
                        "hostNetwork": true,
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-win",
                "namespace": "kube-system",
                "uid": "717bbc50-feda-4a3f-8194-9a9555686030",
                "resourceVersion": "502",
                "generation": 1,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"csi-azurefile-node-win\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"app\":\"csi-azurefile-node-win\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-azurefile-node-win\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"windows\"]}]}]}}},\"containers\":[{\"args\":[\"--csi-address=$(CSI_ENDPOINT)\",\"--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)\",\"--plugin-registration-path=$(PLUGIN_REG_DIR)\",\"--v=2\"],\"command\":[\"csi-node-driver-registrar.exe\"],\"env\":[{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\file.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"DRIVER_REG_SOCK_PATH\",\"value\":\"C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\file.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"PLUGIN_REG_DIR\",\"value\":\"C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins_registry\\\\\\\\\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"node-driver-registrar\",\"resources\":{\"limits\":{\"memory\":\"150Mi\"},\"requests\":{\"cpu\":\"40m\",\"memory\":\"40Mi\"}}},{\"args\":[\"--v=5\",\"--endpoint=$(CSI_ENDPOINT)\",\"--nodeid=$(KUBE_NODE_NAME)\",\"--enable-windows-host-process=true\",\"--remove-smb-mount-on-windows=false\"],\"command\":[\"azurefileplugin.exe\"],\"env\":[{\"name\":\"AZURE_CREDENTIAL_FILE\",\"value\":\"C:\\\\k\\\\azure.json\"},{\"name\":\"CSI_ENDPOINT\",\"value\":\"unix://C:\\\\\\\\var\\\\\\\\lib\\\\\\\\kubelet\\\\\\\\plugins\\\\\\\\file.csi.azure.com\\\\\\\\csi.sock\"},{\"name\":\"KUBE_NODE_NAME\",\"valueFrom\":{\"fieldRef\":{\"apiVersion\":\"v1\",\"fieldPath\":\"spec.nodeName\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5-windows-hp\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"azurefile\"}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"powershell.exe\",\"-c\",\"New-Item -ItemType Directory -Path C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\ -Force\"],\"image\":\"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5-windows-hp\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"init\"}],\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"},\"windowsOptions\":{\"hostProcess\":true,\"runAsUserName\":\"NT AUTHORITY\\\\SYSTEM\"}},\"serviceAccountName\":\"csi-azurefile-node-sa\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}]}}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "csi-azurefile-node-win"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "csi-azurefile-node-win",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "initContainers": [
                            {
                                "name": "init",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5-windows-hp",
                                "command": [
                                    "powershell.exe",
                                    "-c",
                                    "New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\ -Force"
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "containers": [
                            {
                                "name": "node-driver-registrar",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1",
                                "command": [
                                    "csi-node-driver-registrar.exe"
                                ],
                                "args": [
                                    "--csi-address=$(CSI_ENDPOINT)",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--plugin-registration-path=$(PLUGIN_REG_DIR)",
                                    "--v=2"
                                ],
                                "env": [
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "DRIVER_REG_SOCK_PATH",
                                        "value": "C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "PLUGIN_REG_DIR",
                                        "value": "C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "150Mi"
                                    },
                                    "requests": {
                                        "cpu": "40m",
                                        "memory": "40Mi"
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "azurefile",
                                "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5-windows-hp",
                                "command": [
                                    "azurefileplugin.exe"
                                ],
                                "args": [
                                    "--v=5",
                                    "--endpoint=$(CSI_ENDPOINT)",
                                    "--nodeid=$(KUBE_NODE_NAME)",
                                    "--enable-windows-host-process=true",
                                    "--remove-smb-mount-on-windows=false"
                                ],
                                "env": [
                                    {
                                        "name": "AZURE_CREDENTIAL_FILE",
                                        "value": "C:\\k\\azure.json"
                                    },
                                    {
                                        "name": "CSI_ENDPOINT",
                                        "value": "unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"
                                    },
                                    {
                                        "name": "KUBE_NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "csi-azurefile-node-sa",
                        "serviceAccount": "csi-azurefile-node-sa",
                        "hostNetwork": true,
                        "securityContext": {
                            "windowsOptions": {
                                "runAsUserName": "NT AUTHORITY\\SYSTEM",
                                "hostProcess": true
                            },
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "windows"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 0,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 0,
                "numberReady": 0,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "6e5aee02-de72-413b-941f-9b8f2de82e16",
                "resourceVersion": "429142",
                "generation": 1,
                "creationTimestamp": "2024-09-29T15:17:45Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "component": "kube-proxy",
                    "kubernetes.azure.com/managedby": "aks",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"component\":\"kube-proxy\",\"kubernetes.azure.com/managedby\":\"aks\",\"tier\":\"node\"},\"name\":\"kube-proxy\",\"namespace\":\"kube-system\"},\"spec\":{\"selector\":{\"matchLabels\":{\"component\":\"kube-proxy\",\"tier\":\"node\"}},\"template\":{\"metadata\":{\"annotations\":null,\"labels\":{\"component\":\"kube-proxy\",\"kubernetes.azure.com/managedby\":\"aks\",\"tier\":\"node\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"command\":[\"kube-proxy\",\"--conntrack-max-per-core=0\",\"--metrics-bind-address=0.0.0.0:10249\",\"--cluster-cidr=10.244.0.0/16\",\"--detect-local-mode=InterfaceNamePrefix\",\"--pod-interface-name-prefix=azv\",\"--v=3\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"kube-proxy\",\"resources\":{\"requests\":{\"cpu\":\"100m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/run/xtables.lock\",\"name\":\"iptableslock\"},{\"mountPath\":\"/lib/modules\",\"name\":\"modules\"}]}],\"hostNetwork\":true,\"initContainers\":[{\"command\":[\"/bin/sh\",\"-c\",\"get_num_cpu() {\\n  # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: \\\"0-3\\\", \\\"0,1,2\\\", \\\"0-3,4\\\")\\n  # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html\\n  sys_cpu_online=$(cat /sys/devices/system/cpu/online)\\n  result=0\\n  OLD_IFS=\\\"$IFS\\\"; IFS=\\\",\\\"\\n  for rng in \\\"$sys_cpu_online\\\"; do\\n    if echo \\\"$rng\\\" | grep -q -- \\\"-\\\"; then\\n      min=${rng%-*}; max=${rng#*-}\\n      if [ \\\"$min\\\" -le \\\"$max\\\" ]; then\\n        result=$((result + (max - min + 1)))\\n      fi\\n    else\\n      result=$((result + 1))\\n    fi\\n  done\\n  IFS=\\\"$OLD_IFS\\\"\\n  echo $result\\n}\\n\\nSYSCTL=/proc/sys/net/netfilter/nf_conntrack_max\\necho \\\"Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)\\\"\\nDESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?\\u003c=net.netfilter.nf_conntrack_max=).*')\\nif [ -z \\\"$DESIRED\\\" ]; then\\n  NUM_CPU=$(get_num_cpu)\\n  DESIRED=$((32768*$NUM_CPU))\\n  if [ $DESIRED -lt 131072 ]; then\\n    DESIRED=131072\\n  fi\\n\\n  echo \\\"AKS custom config for net.netfilter.nf_conntrack_max not set.\\\"\\n  echo \\\"Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072).\\\"\\n  echo $DESIRED \\u003e $SYSCTL\\nelse\\n  echo \\\"AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED.\\\"\\n  echo \\\"Setting nf_conntrack_max to $DESIRED.\\\"\\n  echo $DESIRED \\u003e $SYSCTL\\nfi\\n\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"kube-proxy-bootstrap\",\"resources\":{\"requests\":{\"cpu\":\"100m\"}},\"securityContext\":{\"privileged\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/sysctl.d\",\"name\":\"sysctls\"},{\"mountPath\":\"/lib/modules\",\"name\":\"modules\"}]}],\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"kube-proxy\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"operator\":\"Exists\"},{\"effect\":\"NoSchedule\",\"operator\":\"Exists\"}],\"volumes\":[{\"hostPath\":{\"path\":\"/run/xtables.lock\",\"type\":\"FileOrCreate\"},\"name\":\"iptableslock\"},{\"hostPath\":{\"path\":\"/etc/sysctl.d\",\"type\":\"Directory\"},\"name\":\"sysctls\"},{\"hostPath\":{\"path\":\"/lib/modules\",\"type\":\"Directory\"},\"name\":\"modules\"}]}},\"updateStrategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"}}}\n"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "component": "kube-proxy",
                        "tier": "node"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "component": "kube-proxy",
                            "kubernetes.azure.com/managedby": "aks",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "iptableslock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "sysctls",
                                "hostPath": {
                                    "path": "/etc/sysctl.d",
                                    "type": "Directory"
                                }
                            },
                            {
                                "name": "modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": "Directory"
                                }
                            }
                        ],
                        "initContainers": [
                            {
                                "name": "kube-proxy-bootstrap",
                                "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8",
                                "command": [
                                    "/bin/sh",
                                    "-c",
                                    "get_num_cpu() {\n  # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: \"0-3\", \"0,1,2\", \"0-3,4\")\n  # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html\n  sys_cpu_online=$(cat /sys/devices/system/cpu/online)\n  result=0\n  OLD_IFS=\"$IFS\"; IFS=\",\"\n  for rng in \"$sys_cpu_online\"; do\n    if echo \"$rng\" | grep -q -- \"-\"; then\n      min=${rng%-*}; max=${rng#*-}\n      if [ \"$min\" -le \"$max\" ]; then\n        result=$((result + (max - min + 1)))\n      fi\n    else\n      result=$((result + 1))\n    fi\n  done\n  IFS=\"$OLD_IFS\"\n  echo $result\n}\n\nSYSCTL=/proc/sys/net/netfilter/nf_conntrack_max\necho \"Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)\"\nDESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?\u003c=net.netfilter.nf_conntrack_max=).*')\nif [ -z \"$DESIRED\" ]; then\n  NUM_CPU=$(get_num_cpu)\n  DESIRED=$((32768*$NUM_CPU))\n  if [ $DESIRED -lt 131072 ]; then\n    DESIRED=131072\n  fi\n\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max not set.\"\n  echo \"Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072).\"\n  echo $DESIRED \u003e $SYSCTL\nelse\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED.\"\n  echo \"Setting nf_conntrack_max to $DESIRED.\"\n  echo $DESIRED \u003e $SYSCTL\nfi\n"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "sysctls",
                                        "mountPath": "/etc/sysctl.d"
                                    },
                                    {
                                        "name": "modules",
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8",
                                "command": [
                                    "kube-proxy",
                                    "--conntrack-max-per-core=0",
                                    "--metrics-bind-address=0.0.0.0:10249",
                                    "--cluster-cidr=10.244.0.0/16",
                                    "--detect-local-mode=InterfaceNamePrefix",
                                    "--pod-interface-name-prefix=azv",
                                    "--v=3"
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "iptableslock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "modules",
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoExecute"
                            },
                            {
                                "operator": "Exists",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 2,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 2,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 2,
                "numberAvailable": 2
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "433799"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "e7848294-e178-49cc-90d7-3799637b0dfb",
                "resourceVersion": "429413",
                "generation": 2,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "kube-dns",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS",
                    "version": "v20"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"kube-dns\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\",\"kubernetes.io/name\":\"CoreDNS\",\"version\":\"v20\"},\"name\":\"coredns\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"kube-dns\",\"version\":\"v20\"}},\"strategy\":{\"rollingUpdate\":{\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"prometheus.io/port\":\"9153\"},\"labels\":{\"k8s-app\":\"kube-dns\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\",\"version\":\"v20\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"kube-dns\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"args\":[\"-conf\",\"/etc/coredns/Corefile\"],\"env\":[{\"name\":\"GOMAXPROCS\",\"valueFrom\":{\"resourceFieldRef\":{\"resource\":\"limits.cpu\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240704\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":5,\"httpGet\":{\"path\":\"/health\",\"port\":8080,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":60,\"successThreshold\":1,\"timeoutSeconds\":5},\"name\":\"coredns\",\"ports\":[{\"containerPort\":53,\"name\":\"dns\",\"protocol\":\"UDP\"},{\"containerPort\":53,\"name\":\"dns-tcp\",\"protocol\":\"TCP\"},{\"containerPort\":9153,\"name\":\"metrics\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8181,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"cpu\":3,\"memory\":\"500Mi\"},\"requests\":{\"cpu\":\"100m\",\"memory\":\"70Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"add\":[\"NET_BIND_SERVICE\"],\"drop\":[\"ALL\"]},\"procMount\":\"Default\",\"readOnlyRootFilesystem\":true},\"volumeMounts\":[{\"mountPath\":\"/etc/coredns\",\"name\":\"config-volume\",\"readOnly\":true},{\"mountPath\":\"/etc/coredns/custom\",\"name\":\"custom-config-volume\",\"readOnly\":true},{\"mountPath\":\"/tmp\",\"name\":\"tmp\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"coredns\",\"tolerations\":[{\"effect\":\"NoSchedule\",\"key\":\"node-role.kubernetes.io/master\"},{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"configMap\":{\"items\":[{\"key\":\"Corefile\",\"path\":\"Corefile\"}],\"name\":\"coredns\"},\"name\":\"config-volume\"},{\"configMap\":{\"name\":\"coredns-custom\",\"optional\":true},\"name\":\"custom-config-volume\"},{\"emptyDir\":{},\"name\":\"tmp\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "version": "v20"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "kubernetes.azure.com/managedby": "aks",
                            "kubernetes.io/cluster-service": "true",
                            "version": "v20"
                        },
                        "annotations": {
                            "prometheus.io/port": "9153"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "custom-config-volume",
                                "configMap": {
                                    "name": "coredns-custom",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240704",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "GOMAXPROCS",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "resource": "limits.cpu",
                                                "divisor": "0"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "3",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "custom-config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns/custom"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "procMount": "Default"
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 2,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-09-29T15:18:22Z",
                        "lastTransitionTime": "2024-09-29T15:17:44Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-597bb9d4db\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-02T22:19:04Z",
                        "lastTransitionTime": "2024-10-02T22:19:04Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "coredns-autoscaler",
                "namespace": "kube-system",
                "uid": "bd2b36e4-dedd-45cc-b7c9-51bdf8217cc2",
                "resourceVersion": "429268",
                "generation": 1,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "coredns-autoscaler",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"coredns-autoscaler\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"coredns-autoscaler\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"coredns-autoscaler\"}},\"template\":{\"metadata\":{\"annotations\":{\"cluster-autoscaler.kubernetes.io/safe-to-evict\":\"true\",\"seccomp.security.alpha.kubernetes.io/pod\":\"runtime/default\"},\"labels\":{\"k8s-app\":\"coredns-autoscaler\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}}},\"containers\":[{\"command\":[\"/cluster-proportional-autoscaler\",\"--namespace=kube-system\",\"--configmap=coredns-autoscaler\",\"--target=deployment/coredns\",\"--default-params={\\\"ladder\\\":{\\\"coresToReplicas\\\":[[1,2],[512,3],[1024,4],[2048,5]],\\\"nodesToReplicas\\\":[[1,2],[8,3],[16,4],[32,5]]}}\",\"--logtostderr=true\",\"--v=2\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/last-poll\",\"port\":8080},\"initialDelaySeconds\":10,\"periodSeconds\":10},\"name\":\"autoscaler\",\"resources\":{\"limits\":{\"cpu\":\"200m\",\"memory\":\"500Mi\"},\"requests\":{\"cpu\":\"20m\",\"memory\":\"10Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}}}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"coredns-autoscaler\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "coredns-autoscaler"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "coredns-autoscaler",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "autoscaler",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11",
                                "command": [
                                    "/cluster-proportional-autoscaler",
                                    "--namespace=kube-system",
                                    "--configmap=coredns-autoscaler",
                                    "--target=deployment/coredns",
                                    "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "10Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/last-poll",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns-autoscaler",
                        "serviceAccount": "coredns-autoscaler",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-09-29T15:18:12Z",
                        "lastTransitionTime": "2024-09-29T15:17:44Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"coredns-autoscaler-689db4649c\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-02T22:18:55Z",
                        "lastTransitionTime": "2024-10-02T22:18:55Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "konnectivity-agent",
                "namespace": "kube-system",
                "uid": "671934cc-feee-433e-b2af-71252ef8b2bf",
                "resourceVersion": "429307",
                "generation": 2,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "app": "konnectivity-agent",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"app\":\"konnectivity-agent\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"konnectivity-agent\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"replicas\":2,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"app\":\"konnectivity-agent\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":0,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"annotations\":{\"checksum/client-cert\":\"d1c37b2b22be8e6e749d4967413809cd79d446a146c6b1425160fb8f552fa770\"},\"labels\":{\"app\":\"konnectivity-agent\",\"component\":\"tunnel\",\"kubernetes.azure.com/managedby\":\"aks\"}},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"konnectivity-agent\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"app\",\"operator\":\"In\",\"values\":[\"konnectivity-agent\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"automountServiceAccountToken\":false,\"containers\":[{\"args\":[\"--proxy-server-host=wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io\",\"--proxy-server-port=443\",\"--health-server-port=8082\",\"--keepalive-time=30s\",\"--agent-key=/certs/client.key\",\"--agent-cert=/certs/client.crt\",\"--ca-cert=/certs/ca.crt\",\"--agent-identifiers=default-route=true\",\"--alpn-proto=konnectivity\",\"-v=2\"],\"command\":[\"/proxy-agent\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8082,\"scheme\":\"HTTP\"},\"initialDelaySeconds\":30,\"periodSeconds\":60,\"timeoutSeconds\":60},\"name\":\"konnectivity-agent\",\"readinessProbe\":{\"httpGet\":{\"path\":\"/ready\",\"port\":8082,\"scheme\":\"HTTP\"}},\"resources\":{\"limits\":{\"cpu\":\"1000m\",\"memory\":\"1Gi\"},\"requests\":{\"cpu\":\"20m\",\"memory\":\"20Mi\"}},\"securityContext\":{\"capabilities\":{\"drop\":[\"ALL\"]}},\"volumeMounts\":[{\"mountPath\":\"/certs\",\"name\":\"certs\"}]}],\"dnsPolicy\":\"Default\",\"priorityClassName\":\"system-node-critical\",\"serviceAccountName\":\"konnectivity-agent\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"name\":\"certs\",\"secret\":{\"secretName\":\"konnectivity-certs\"}}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "konnectivity-agent"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "konnectivity-agent",
                            "component": "tunnel",
                            "kubernetes.azure.com/managedby": "aks"
                        },
                        "annotations": {
                            "checksum/client-cert": "d1c37b2b22be8e6e749d4967413809cd79d446a146c6b1425160fb8f552fa770",
                            "checksum/service-account-key": "1ed3beb816ade5fbc2a89e3d3de5c549acbab09b175057d9868dcdf147db9c44"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "certs",
                                "secret": {
                                    "secretName": "konnectivity-certs",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "konnectivity-agent",
                                "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116",
                                "command": [
                                    "/proxy-agent"
                                ],
                                "args": [
                                    "--proxy-server-host=wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io",
                                    "--proxy-server-port=443",
                                    "--health-server-port=8082",
                                    "--keepalive-time=30s",
                                    "--agent-key=/certs/client.key",
                                    "--agent-cert=/certs/client.crt",
                                    "--ca-cert=/certs/ca.crt",
                                    "--agent-identifiers=default-route=true",
                                    "--alpn-proto=konnectivity",
                                    "-v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "certs",
                                        "mountPath": "/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 60,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "konnectivity-agent",
                        "serviceAccount": "konnectivity-agent",
                        "automountServiceAccountToken": false,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "konnectivity-agent"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "konnectivity-agent"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 2,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-09-29T16:08:06Z",
                        "lastTransitionTime": "2024-09-29T15:17:45Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"konnectivity-agent-5c7766456f\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-02T22:18:56Z",
                        "lastTransitionTime": "2024-10-02T22:18:56Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "metrics-server",
                "namespace": "kube-system",
                "uid": "84975f2a-1990-4c1f-b59f-89ec095dee7f",
                "resourceVersion": "429932",
                "generation": 2,
                "creationTimestamp": "2024-09-29T15:17:45Z",
                "labels": {
                    "addonmanager.kubernetes.io/mode": "Reconcile",
                    "k8s-app": "metrics-server",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "2",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"addonmanager.kubernetes.io/mode\":\"Reconcile\",\"k8s-app\":\"metrics-server\",\"kubernetes.azure.com/managedby\":\"aks\",\"kubernetes.io/cluster-service\":\"true\"},\"name\":\"metrics-server\",\"namespace\":\"kube-system\"},\"spec\":{\"paused\":false,\"replicas\":2,\"revisionHistoryLimit\":2,\"selector\":{\"matchLabels\":{\"k8s-app\":\"metrics-server\"}},\"strategy\":{\"rollingUpdate\":{\"maxSurge\":1,\"maxUnavailable\":1},\"type\":\"RollingUpdate\"},\"template\":{\"metadata\":{\"labels\":{\"k8s-app\":\"metrics-server\",\"kubernetes.azure.com/managedby\":\"aks\"},\"name\":\"metrics-server\"},\"spec\":{\"affinity\":{\"nodeAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"preference\":{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/mode\",\"operator\":\"In\",\"values\":[\"system\"]}]},\"weight\":100}],\"requiredDuringSchedulingIgnoredDuringExecution\":{\"nodeSelectorTerms\":[{\"matchExpressions\":[{\"key\":\"kubernetes.azure.com/cluster\",\"operator\":\"Exists\"},{\"key\":\"type\",\"operator\":\"NotIn\",\"values\":[\"virtual-kubelet\"]},{\"key\":\"kubernetes.io/os\",\"operator\":\"In\",\"values\":[\"linux\"]}]}]}},\"podAntiAffinity\":{\"preferredDuringSchedulingIgnoredDuringExecution\":[{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"metrics-server\"]}]},\"topologyKey\":\"topology.kubernetes.io/zone\"},\"weight\":10},{\"podAffinityTerm\":{\"labelSelector\":{\"matchExpressions\":[{\"key\":\"k8s-app\",\"operator\":\"In\",\"values\":[\"metrics-server\"]}]},\"topologyKey\":\"kubernetes.io/hostname\"},\"weight\":5}]}},\"containers\":[{\"command\":[\"/pod_nanny\",\"--config-dir=/etc/config\",\"--cpu=44m\",\"--extra-cpu=0.5m\",\"--memory=51Mi\",\"--extra-memory=4Mi\",\"--poll-period=180000\",\"--threshold=5\",\"--deployment=metrics-server\",\"--container=metrics-server\"],\"env\":[{\"name\":\"MY_POD_NAME\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.name\"}}},{\"name\":\"MY_POD_NAMESPACE\",\"valueFrom\":{\"fieldRef\":{\"fieldPath\":\"metadata.namespace\"}}}],\"image\":\"mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.22\",\"imagePullPolicy\":\"IfNotPresent\",\"name\":\"metrics-server-vpa\",\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"300Mi\"},\"requests\":{\"cpu\":\"5m\",\"memory\":\"30Mi\"}},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":65532},\"volumeMounts\":[{\"mountPath\":\"/etc/config\",\"name\":\"metrics-server-config-volume\"}]},{\"command\":[\"/metrics-server\",\"--kubelet-insecure-tls\",\"--kubelet-preferred-address-types=InternalIP\",\"--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384\",\"--cert-dir=/tmp\",\"--secure-port=4443\"],\"image\":\"mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3\",\"imagePullPolicy\":\"IfNotPresent\",\"livenessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/livez\",\"port\":\"ms-https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":20,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":10},\"name\":\"metrics-server\",\"ports\":[{\"containerPort\":4443,\"name\":\"ms-https\",\"protocol\":\"TCP\"}],\"readinessProbe\":{\"failureThreshold\":3,\"httpGet\":{\"path\":\"/readyz\",\"port\":\"ms-https\",\"scheme\":\"HTTPS\"},\"initialDelaySeconds\":60,\"periodSeconds\":10,\"successThreshold\":1,\"timeoutSeconds\":10},\"securityContext\":{\"allowPrivilegeEscalation\":false,\"capabilities\":{\"drop\":[\"ALL\"]},\"readOnlyRootFilesystem\":true,\"runAsNonRoot\":true,\"runAsUser\":65532},\"volumeMounts\":[{\"mountPath\":\"/tmp\",\"name\":\"tmp-dir\"}]}],\"priorityClassName\":\"system-node-critical\",\"securityContext\":{\"seccompProfile\":{\"type\":\"RuntimeDefault\"}},\"serviceAccountName\":\"metrics-server\",\"tolerations\":[{\"key\":\"CriticalAddonsOnly\",\"operator\":\"Exists\"},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/unreachable\",\"operator\":\"Exists\",\"tolerationSeconds\":30},{\"effect\":\"NoExecute\",\"key\":\"node.kubernetes.io/not-ready\",\"operator\":\"Exists\",\"tolerationSeconds\":30}],\"volumes\":[{\"emptyDir\":{},\"name\":\"tmp-dir\"},{\"configMap\":{\"name\":\"metrics-server-config\",\"optional\":true},\"name\":\"metrics-server-config-volume\"}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "kubernetes.azure.com/managedby": "aks"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            },
                            {
                                "name": "metrics-server-config-volume",
                                "configMap": {
                                    "name": "metrics-server-config",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server-vpa",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.22",
                                "command": [
                                    "/pod_nanny",
                                    "--config-dir=/etc/config",
                                    "--cpu=44m",
                                    "--extra-cpu=0.5m",
                                    "--memory=51Mi",
                                    "--extra-memory=4Mi",
                                    "--poll-period=180000",
                                    "--threshold=5",
                                    "--deployment=metrics-server",
                                    "--container=metrics-server"
                                ],
                                "env": [
                                    {
                                        "name": "MY_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MY_POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "30Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "metrics-server-config-volume",
                                        "mountPath": "/etc/config"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 65532,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            },
                            {
                                "name": "metrics-server",
                                "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                                "command": [
                                    "/metrics-server",
                                    "--kubelet-insecure-tls",
                                    "--kubelet-preferred-address-types=InternalIP",
                                    "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443"
                                ],
                                "ports": [
                                    {
                                        "name": "ms-https",
                                        "containerPort": 4443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "45m",
                                        "memory": "59Mi"
                                    },
                                    "requests": {
                                        "cpu": "45m",
                                        "memory": "59Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 20,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 65532,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 1
                    }
                },
                "revisionHistoryLimit": 2,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 2,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-09-29T15:19:36Z",
                        "lastTransitionTime": "2024-09-29T15:17:45Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"metrics-server-f46f56d7b\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-02T22:20:14Z",
                        "lastTransitionTime": "2024-10-02T22:20:14Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "433800"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-597bb9d4db",
                "namespace": "kube-system",
                "uid": "6e2b452a-10d7-4f09-876c-5450ef0a602b",
                "resourceVersion": "429412",
                "generation": 2,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true",
                    "pod-template-hash": "597bb9d4db",
                    "version": "v20"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "e7848294-e178-49cc-90d7-3799637b0dfb",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "597bb9d4db",
                        "version": "v20"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "kube-dns",
                            "kubernetes.azure.com/managedby": "aks",
                            "kubernetes.io/cluster-service": "true",
                            "pod-template-hash": "597bb9d4db",
                            "version": "v20"
                        },
                        "annotations": {
                            "prometheus.io/port": "9153"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "custom-config-volume",
                                "configMap": {
                                    "name": "coredns-custom",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            },
                            {
                                "name": "tmp",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240704",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "GOMAXPROCS",
                                        "valueFrom": {
                                            "resourceFieldRef": {
                                                "resource": "limits.cpu",
                                                "divisor": "0"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "3",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    },
                                    {
                                        "name": "custom-config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns/custom"
                                    },
                                    {
                                        "name": "tmp",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false,
                                    "procMount": "Default"
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "node-role.kubernetes.io/master",
                                "effect": "NoSchedule"
                            },
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 2
            }
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c",
                "namespace": "kube-system",
                "uid": "a1097d13-ab3d-45fe-be0b-af7e2bbcbcc2",
                "resourceVersion": "429265",
                "generation": 1,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "k8s-app": "coredns-autoscaler",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "689db4649c"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns-autoscaler",
                        "uid": "bd2b36e4-dedd-45cc-b7c9-51bdf8217cc2",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "coredns-autoscaler",
                        "pod-template-hash": "689db4649c"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "coredns-autoscaler",
                            "kubernetes.azure.com/managedby": "aks",
                            "pod-template-hash": "689db4649c"
                        },
                        "annotations": {
                            "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                            "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "autoscaler",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11",
                                "command": [
                                    "/cluster-proportional-autoscaler",
                                    "--namespace=kube-system",
                                    "--configmap=coredns-autoscaler",
                                    "--target=deployment/coredns",
                                    "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                                    "--logtostderr=true",
                                    "--v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "200m",
                                        "memory": "500Mi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "10Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/last-poll",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "coredns-autoscaler",
                        "serviceAccount": "coredns-autoscaler",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f",
                "namespace": "kube-system",
                "uid": "cf3af4ea-5df8-4c16-92d1-b8e17c4ba948",
                "resourceVersion": "429306",
                "generation": 3,
                "creationTimestamp": "2024-09-29T16:07:54Z",
                "labels": {
                    "app": "konnectivity-agent",
                    "component": "tunnel",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "5c7766456f"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "2"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "konnectivity-agent",
                        "uid": "671934cc-feee-433e-b2af-71252ef8b2bf",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "app": "konnectivity-agent",
                        "pod-template-hash": "5c7766456f"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "konnectivity-agent",
                            "component": "tunnel",
                            "kubernetes.azure.com/managedby": "aks",
                            "pod-template-hash": "5c7766456f"
                        },
                        "annotations": {
                            "checksum/client-cert": "d1c37b2b22be8e6e749d4967413809cd79d446a146c6b1425160fb8f552fa770",
                            "checksum/service-account-key": "1ed3beb816ade5fbc2a89e3d3de5c549acbab09b175057d9868dcdf147db9c44"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "certs",
                                "secret": {
                                    "secretName": "konnectivity-certs",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "konnectivity-agent",
                                "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116",
                                "command": [
                                    "/proxy-agent"
                                ],
                                "args": [
                                    "--proxy-server-host=wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io",
                                    "--proxy-server-port=443",
                                    "--health-server-port=8082",
                                    "--keepalive-time=30s",
                                    "--agent-key=/certs/client.key",
                                    "--agent-cert=/certs/client.crt",
                                    "--ca-cert=/certs/ca.crt",
                                    "--agent-identifiers=default-route=true",
                                    "--alpn-proto=konnectivity",
                                    "-v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "certs",
                                        "mountPath": "/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 60,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "konnectivity-agent",
                        "serviceAccount": "konnectivity-agent",
                        "automountServiceAccountToken": false,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "konnectivity-agent"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "konnectivity-agent"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 3
            }
        },
        {
            "metadata": {
                "name": "konnectivity-agent-9556f9ff4",
                "namespace": "kube-system",
                "uid": "59a7bbeb-51bc-4f2c-aed5-3d21a6368af6",
                "resourceVersion": "12587",
                "generation": 3,
                "creationTimestamp": "2024-09-29T15:17:44Z",
                "labels": {
                    "app": "konnectivity-agent",
                    "component": "tunnel",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "9556f9ff4"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "konnectivity-agent",
                        "uid": "671934cc-feee-433e-b2af-71252ef8b2bf",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 0,
                "selector": {
                    "matchLabels": {
                        "app": "konnectivity-agent",
                        "pod-template-hash": "9556f9ff4"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "konnectivity-agent",
                            "component": "tunnel",
                            "kubernetes.azure.com/managedby": "aks",
                            "pod-template-hash": "9556f9ff4"
                        },
                        "annotations": {
                            "checksum/client-cert": "d1c37b2b22be8e6e749d4967413809cd79d446a146c6b1425160fb8f552fa770"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "certs",
                                "secret": {
                                    "secretName": "konnectivity-certs",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "konnectivity-agent",
                                "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116",
                                "command": [
                                    "/proxy-agent"
                                ],
                                "args": [
                                    "--proxy-server-host=wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io",
                                    "--proxy-server-port=443",
                                    "--health-server-port=8082",
                                    "--keepalive-time=30s",
                                    "--agent-key=/certs/client.key",
                                    "--agent-cert=/certs/client.crt",
                                    "--ca-cert=/certs/ca.crt",
                                    "--agent-identifiers=default-route=true",
                                    "--alpn-proto=konnectivity",
                                    "-v=2"
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "1",
                                        "memory": "1Gi"
                                    },
                                    "requests": {
                                        "cpu": "20m",
                                        "memory": "20Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "certs",
                                        "mountPath": "/certs"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 30,
                                    "timeoutSeconds": 60,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8082,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "serviceAccountName": "konnectivity-agent",
                        "serviceAccount": "konnectivity-agent",
                        "automountServiceAccountToken": false,
                        "securityContext": {},
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "konnectivity-agent"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "app",
                                                        "operator": "In",
                                                        "values": [
                                                            "konnectivity-agent"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 0,
                "observedGeneration": 3
            }
        },
        {
            "metadata": {
                "name": "metrics-server-7b445dd694",
                "namespace": "kube-system",
                "uid": "433fb539-63fc-48b9-89d5-c0c67b74632f",
                "resourceVersion": "1496",
                "generation": 3,
                "creationTimestamp": "2024-09-29T15:17:45Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "7b445dd694"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "metrics-server",
                        "uid": "84975f2a-1990-4c1f-b59f-89ec095dee7f",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 0,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "7b445dd694"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "kubernetes.azure.com/managedby": "aks",
                            "pod-template-hash": "7b445dd694"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            },
                            {
                                "name": "metrics-server-config-volume",
                                "configMap": {
                                    "name": "metrics-server-config",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server-vpa",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.22",
                                "command": [
                                    "/pod_nanny",
                                    "--config-dir=/etc/config",
                                    "--cpu=44m",
                                    "--extra-cpu=0.5m",
                                    "--memory=51Mi",
                                    "--extra-memory=4Mi",
                                    "--poll-period=180000",
                                    "--threshold=5",
                                    "--deployment=metrics-server",
                                    "--container=metrics-server"
                                ],
                                "env": [
                                    {
                                        "name": "MY_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MY_POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "30Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "metrics-server-config-volume",
                                        "mountPath": "/etc/config"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 65532,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            },
                            {
                                "name": "metrics-server",
                                "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                                "command": [
                                    "/metrics-server",
                                    "--kubelet-insecure-tls",
                                    "--kubelet-preferred-address-types=InternalIP",
                                    "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443"
                                ],
                                "ports": [
                                    {
                                        "name": "ms-https",
                                        "containerPort": 4443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 20,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 65532,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 0,
                "observedGeneration": 3
            }
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b",
                "namespace": "kube-system",
                "uid": "e65d18d5-b661-46b6-ac79-fa1db609863d",
                "resourceVersion": "429931",
                "generation": 2,
                "creationTimestamp": "2024-09-29T15:18:25Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "f46f56d7b"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "2"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "metrics-server",
                        "uid": "84975f2a-1990-4c1f-b59f-89ec095dee7f",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "metrics-server",
                        "pod-template-hash": "f46f56d7b"
                    }
                },
                "template": {
                    "metadata": {
                        "name": "metrics-server",
                        "creationTimestamp": null,
                        "labels": {
                            "k8s-app": "metrics-server",
                            "kubernetes.azure.com/managedby": "aks",
                            "pod-template-hash": "f46f56d7b"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "tmp-dir",
                                "emptyDir": {}
                            },
                            {
                                "name": "metrics-server-config-volume",
                                "configMap": {
                                    "name": "metrics-server-config",
                                    "defaultMode": 420,
                                    "optional": true
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "metrics-server-vpa",
                                "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.22",
                                "command": [
                                    "/pod_nanny",
                                    "--config-dir=/etc/config",
                                    "--cpu=44m",
                                    "--extra-cpu=0.5m",
                                    "--memory=51Mi",
                                    "--extra-memory=4Mi",
                                    "--poll-period=180000",
                                    "--threshold=5",
                                    "--deployment=metrics-server",
                                    "--container=metrics-server"
                                ],
                                "env": [
                                    {
                                        "name": "MY_POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "MY_POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "300Mi"
                                    },
                                    "requests": {
                                        "cpu": "5m",
                                        "memory": "30Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "metrics-server-config-volume",
                                        "mountPath": "/etc/config"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 65532,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            },
                            {
                                "name": "metrics-server",
                                "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                                "command": [
                                    "/metrics-server",
                                    "--kubelet-insecure-tls",
                                    "--kubelet-preferred-address-types=InternalIP",
                                    "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                                    "--cert-dir=/tmp",
                                    "--secure-port=4443"
                                ],
                                "ports": [
                                    {
                                        "name": "ms-https",
                                        "containerPort": 4443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "45m",
                                        "memory": "59Mi"
                                    },
                                    "requests": {
                                        "cpu": "45m",
                                        "memory": "59Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "tmp-dir",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/livez",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 20,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/readyz",
                                        "port": "ms-https",
                                        "scheme": "HTTPS"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 10,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 65532,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "serviceAccountName": "metrics-server",
                        "serviceAccount": "metrics-server",
                        "securityContext": {
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        },
                        "affinity": {
                            "nodeAffinity": {
                                "requiredDuringSchedulingIgnoredDuringExecution": {
                                    "nodeSelectorTerms": [
                                        {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/cluster",
                                                    "operator": "Exists"
                                                },
                                                {
                                                    "key": "type",
                                                    "operator": "NotIn",
                                                    "values": [
                                                        "virtual-kubelet"
                                                    ]
                                                },
                                                {
                                                    "key": "kubernetes.io/os",
                                                    "operator": "In",
                                                    "values": [
                                                        "linux"
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                },
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "preference": {
                                            "matchExpressions": [
                                                {
                                                    "key": "kubernetes.azure.com/mode",
                                                    "operator": "In",
                                                    "values": [
                                                        "system"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                ]
                            },
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 10,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "topology.kubernetes.io/zone"
                                        }
                                    },
                                    {
                                        "weight": 5,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "metrics-server"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node.kubernetes.io/unreachable",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            },
                            {
                                "key": "node.kubernetes.io/not-ready",
                                "operator": "Exists",
                                "effect": "NoExecute",
                                "tolerationSeconds": 30
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 2,
                "availableReplicas": 2,
                "observedGeneration": 2
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "433801"
    },
    "items": [
        {
            "metadata": {
                "name": "azure-cns-c455t",
                "generateName": "azure-cns-",
                "namespace": "kube-system",
                "uid": "a0ebafa1-53dd-42ca-8753-0883e893c119",
                "resourceVersion": "429366",
                "creationTimestamp": "2024-10-02T22:18:45Z",
                "labels": {
                    "controller-revision-hash": "5f9456866",
                    "k8s-app": "azure-cns",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "cluster-autoscaler.kubernetes.io/daemonset-pod": "true",
                    "kubernetes.azure.com/azure-cns-configmap-checksum": "77fe859ed6b2e8f8c98fe7b6f111ac01b266976cbf5b3a2f281f29d0b43812cd",
                    "prometheus.io/port": "10092"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "azure-cns",
                        "uid": "62d97116-0ce9-4f44-8703-8dd5a8e4f2af",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "log",
                        "hostPath": {
                            "path": "/var/log/azure-cns",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "cns-state",
                        "hostPath": {
                            "path": "/var/lib/azure-network",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "cni-bin",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "azure-vnet",
                        "hostPath": {
                            "path": "/var/run/azure-vnet",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "cni-lock",
                        "hostPath": {
                            "path": "/var/lock/azure-vnet",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "legacy-cni-state",
                        "hostPath": {
                            "path": "/var/run/azure-vnet.json",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "cni-conflist",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "cns-config",
                        "configMap": {
                            "name": "cns-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-tlg6m",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "cni-installer",
                        "image": "mcr.microsoft.com/containernetworking/azure-cni:v1.5.35",
                        "command": [
                            "/dropgz"
                        ],
                        "args": [
                            "deploy",
                            "--skip-verify",
                            "azure-vnet",
                            "-o",
                            "/opt/cni/bin/azure-vnet",
                            "azure-vnet-telemetry",
                            "-o",
                            "/opt/cni/bin/azure-vnet-telemetry"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "cni-bin",
                                "mountPath": "/opt/cni/bin"
                            },
                            {
                                "name": "cni-conflist",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "kube-api-access-tlg6m",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "containers": [
                    {
                        "name": "cns-container",
                        "image": "mcr.microsoft.com/containernetworking/azure-cns:v1.5.35",
                        "args": [
                            "-c",
                            "tcp://$(CNSIpAddress):$(CNSPort)",
                            "-t",
                            "$(CNSLogTarget)",
                            "-o",
                            "$(CNSLogDir)"
                        ],
                        "ports": [
                            {
                                "name": "api",
                                "hostPort": 10090,
                                "containerPort": 10090,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "hostPort": 10092,
                                "containerPort": 10092,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "CNSIpAddress",
                                "value": "127.0.0.1"
                            },
                            {
                                "name": "CNSPort",
                                "value": "10090"
                            },
                            {
                                "name": "CNSLogTarget",
                                "value": "stdoutfile"
                            },
                            {
                                "name": "CNSLogDir",
                                "value": "/var/log"
                            },
                            {
                                "name": "CNS_CONFIGURATION_PATH",
                                "value": "/etc/azure-cns/cns_config.json"
                            },
                            {
                                "name": "NODENAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "POD_CIDRs",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "SERVICE_CIDRs",
                                "value": "10.0.0.0/16"
                            },
                            {
                                "name": "INFRA_VNET_CIDRs",
                                "value": "10.224.0.0/12"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "40m",
                                "memory": "250Mi"
                            },
                            "requests": {
                                "cpu": "40m",
                                "memory": "250Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "log",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "cns-state",
                                "mountPath": "/var/lib/azure-network"
                            },
                            {
                                "name": "cns-config",
                                "mountPath": "/etc/azure-cns"
                            },
                            {
                                "name": "cni-bin",
                                "mountPath": "/opt/cni/bin"
                            },
                            {
                                "name": "azure-vnet",
                                "mountPath": "/var/run/azure-vnet"
                            },
                            {
                                "name": "cni-lock",
                                "mountPath": "/var/lock/azure-vnet"
                            },
                            {
                                "name": "legacy-cni-state",
                                "mountPath": "/var/run/azure-vnet.json"
                            },
                            {
                                "name": "cni-conflist",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "kube-api-access-tlg6m",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "azure-cns",
                "serviceAccount": "azure-cns",
                "nodeName": "aks-agentpool-29385454-vmss000008",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-agentpool-29385454-vmss000008"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:52Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:59Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:59Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:45Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "hostIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "podIP": "10.224.0.5",
                "podIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "startTime": "2024-10-02T22:18:45Z",
                "initContainerStatuses": [
                    {
                        "name": "cni-installer",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2024-10-02T22:18:51Z",
                                "finishedAt": "2024-10-02T22:18:52Z",
                                "containerID": "containerd://b7ab9d00d33fe394740cbcc3dd05a35291b3f52662d4bd1bc42cfb4837379ff5"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/containernetworking/azure-cni:v1.5.35",
                        "imageID": "mcr.microsoft.com/containernetworking/azure-cni@sha256:a69e900899bef0e71d240503ef07ccb0f5e85b5eb25bb9f52212a3f2c31ab63b",
                        "containerID": "containerd://b7ab9d00d33fe394740cbcc3dd05a35291b3f52662d4bd1bc42cfb4837379ff5",
                        "started": false
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "cns-container",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:58Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/containernetworking/azure-cns:v1.5.35",
                        "imageID": "mcr.microsoft.com/containernetworking/azure-cns@sha256:ac90bb442344ffe0a5c023bc1eab12d577cca16051d9e5ece14871b0c987d85c",
                        "containerID": "containerd://2aefb8f3a848cc23cd289696aff864c1f18a825163cd1c5531c7704ac747b9b0",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "azure-cns-xrz8n",
                "generateName": "azure-cns-",
                "namespace": "kube-system",
                "uid": "8ba6f194-f512-4db6-a03e-38e47887e096",
                "resourceVersion": "428973",
                "creationTimestamp": "2024-10-02T22:18:36Z",
                "labels": {
                    "controller-revision-hash": "5f9456866",
                    "k8s-app": "azure-cns",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "cluster-autoscaler.kubernetes.io/daemonset-pod": "true",
                    "kubernetes.azure.com/azure-cns-configmap-checksum": "77fe859ed6b2e8f8c98fe7b6f111ac01b266976cbf5b3a2f281f29d0b43812cd",
                    "prometheus.io/port": "10092"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "azure-cns",
                        "uid": "62d97116-0ce9-4f44-8703-8dd5a8e4f2af",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "log",
                        "hostPath": {
                            "path": "/var/log/azure-cns",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "cns-state",
                        "hostPath": {
                            "path": "/var/lib/azure-network",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "cni-bin",
                        "hostPath": {
                            "path": "/opt/cni/bin",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "azure-vnet",
                        "hostPath": {
                            "path": "/var/run/azure-vnet",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "cni-lock",
                        "hostPath": {
                            "path": "/var/lock/azure-vnet",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "legacy-cni-state",
                        "hostPath": {
                            "path": "/var/run/azure-vnet.json",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "cni-conflist",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "cns-config",
                        "configMap": {
                            "name": "cns-config",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-jhnlf",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "cni-installer",
                        "image": "mcr.microsoft.com/containernetworking/azure-cni:v1.5.35",
                        "command": [
                            "/dropgz"
                        ],
                        "args": [
                            "deploy",
                            "--skip-verify",
                            "azure-vnet",
                            "-o",
                            "/opt/cni/bin/azure-vnet",
                            "azure-vnet-telemetry",
                            "-o",
                            "/opt/cni/bin/azure-vnet-telemetry"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "cni-bin",
                                "mountPath": "/opt/cni/bin"
                            },
                            {
                                "name": "cni-conflist",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "kube-api-access-jhnlf",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "containers": [
                    {
                        "name": "cns-container",
                        "image": "mcr.microsoft.com/containernetworking/azure-cns:v1.5.35",
                        "args": [
                            "-c",
                            "tcp://$(CNSIpAddress):$(CNSPort)",
                            "-t",
                            "$(CNSLogTarget)",
                            "-o",
                            "$(CNSLogDir)"
                        ],
                        "ports": [
                            {
                                "name": "api",
                                "hostPort": 10090,
                                "containerPort": 10090,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "hostPort": 10092,
                                "containerPort": 10092,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "CNSIpAddress",
                                "value": "127.0.0.1"
                            },
                            {
                                "name": "CNSPort",
                                "value": "10090"
                            },
                            {
                                "name": "CNSLogTarget",
                                "value": "stdoutfile"
                            },
                            {
                                "name": "CNSLogDir",
                                "value": "/var/log"
                            },
                            {
                                "name": "CNS_CONFIGURATION_PATH",
                                "value": "/etc/azure-cns/cns_config.json"
                            },
                            {
                                "name": "NODENAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "POD_CIDRs",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "SERVICE_CIDRs",
                                "value": "10.0.0.0/16"
                            },
                            {
                                "name": "INFRA_VNET_CIDRs",
                                "value": "10.224.0.0/12"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "40m",
                                "memory": "250Mi"
                            },
                            "requests": {
                                "cpu": "40m",
                                "memory": "250Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "log",
                                "mountPath": "/var/log"
                            },
                            {
                                "name": "cns-state",
                                "mountPath": "/var/lib/azure-network"
                            },
                            {
                                "name": "cns-config",
                                "mountPath": "/etc/azure-cns"
                            },
                            {
                                "name": "cni-bin",
                                "mountPath": "/opt/cni/bin"
                            },
                            {
                                "name": "azure-vnet",
                                "mountPath": "/var/run/azure-vnet"
                            },
                            {
                                "name": "cni-lock",
                                "mountPath": "/var/lock/azure-vnet"
                            },
                            {
                                "name": "legacy-cni-state",
                                "mountPath": "/var/run/azure-vnet.json"
                            },
                            {
                                "name": "cni-conflist",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "kube-api-access-jhnlf",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "azure-cns",
                "serviceAccount": "azure-cns",
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-agentpool-29385454-vmss000009"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:43Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:44Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:48Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:48Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:36Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.224.0.4",
                "podIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "startTime": "2024-10-02T22:18:37Z",
                "initContainerStatuses": [
                    {
                        "name": "cni-installer",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2024-10-02T22:18:42Z",
                                "finishedAt": "2024-10-02T22:18:43Z",
                                "containerID": "containerd://946afd36c1d7c4ac24738c3492dc11370ff225ac2506ffc2d25ec7f5bac63c35"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/containernetworking/azure-cni:v1.5.35",
                        "imageID": "mcr.microsoft.com/containernetworking/azure-cni@sha256:a69e900899bef0e71d240503ef07ccb0f5e85b5eb25bb9f52212a3f2c31ab63b",
                        "containerID": "containerd://946afd36c1d7c4ac24738c3492dc11370ff225ac2506ffc2d25ec7f5bac63c35",
                        "started": false
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "cns-container",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:48Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/containernetworking/azure-cns:v1.5.35",
                        "imageID": "mcr.microsoft.com/containernetworking/azure-cns@sha256:ac90bb442344ffe0a5c023bc1eab12d577cca16051d9e5ece14871b0c987d85c",
                        "containerID": "containerd://d53f664cb37f9a3212f466e75efcc84ee01bb34c9c23d605ec2354049ee67d40",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-dqfzl",
                "generateName": "azure-ip-masq-agent-",
                "namespace": "kube-system",
                "uid": "ae865b17-9b55-4a66-8a25-f575cb532a63",
                "resourceVersion": "428999",
                "creationTimestamp": "2024-10-02T22:18:45Z",
                "labels": {
                    "controller-revision-hash": "5b4c7cc5f6",
                    "k8s-app": "azure-ip-masq-agent",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "azure-ip-masq-agent",
                        "uid": "60aba0f4-367f-40da-90e3-4b5df690d66f",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "azure-ip-masq-agent-config-volume",
                        "projected": {
                            "sources": [
                                {
                                    "configMap": {
                                        "name": "azure-ip-masq-agent-config",
                                        "items": [
                                            {
                                                "key": "ip-masq-agent",
                                                "path": "ip-masq-agent",
                                                "mode": 444
                                            }
                                        ],
                                        "optional": true
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "azure-ip-masq-agent-config-reconciled",
                                        "items": [
                                            {
                                                "key": "ip-masq-agent-reconciled",
                                                "path": "ip-masq-agent-reconciled",
                                                "mode": 444
                                            }
                                        ],
                                        "optional": true
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "iptableslock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "azure-ip-masq-agent",
                        "image": "mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.13",
                        "args": [
                            "--v=2",
                            "--resync-interval=60"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "250Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "azure-ip-masq-agent-config-volume",
                                "mountPath": "/etc/config"
                            },
                            {
                                "name": "iptableslock",
                                "mountPath": "/run/xtables.lock"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN",
                                    "NET_RAW"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "automountServiceAccountToken": false,
                "nodeName": "aks-agentpool-29385454-vmss000008",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-agentpool-29385454-vmss000008"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:49Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:45Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:49Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:49Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:45Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "hostIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "podIP": "10.224.0.5",
                "podIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "startTime": "2024-10-02T22:18:45Z",
                "containerStatuses": [
                    {
                        "name": "azure-ip-masq-agent",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:49Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.13",
                        "imageID": "sha256:5c5c7fa933a3d8663d0b88ef04f9fb19919556e24643c7cfbbbc4dd75e27302c",
                        "containerID": "containerd://d5f52e8215f1e878800850a40a3a2f63b3ae5bedb659e584ba1ceb089e2702f8",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "azure-ip-masq-agent-g2j7r",
                "generateName": "azure-ip-masq-agent-",
                "namespace": "kube-system",
                "uid": "4a9f15c2-e48a-44be-a6f2-d3b3bc1edd5b",
                "resourceVersion": "428747",
                "creationTimestamp": "2024-10-02T22:18:36Z",
                "labels": {
                    "controller-revision-hash": "5b4c7cc5f6",
                    "k8s-app": "azure-ip-masq-agent",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "azure-ip-masq-agent",
                        "uid": "60aba0f4-367f-40da-90e3-4b5df690d66f",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "azure-ip-masq-agent-config-volume",
                        "projected": {
                            "sources": [
                                {
                                    "configMap": {
                                        "name": "azure-ip-masq-agent-config",
                                        "items": [
                                            {
                                                "key": "ip-masq-agent",
                                                "path": "ip-masq-agent",
                                                "mode": 444
                                            }
                                        ],
                                        "optional": true
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "azure-ip-masq-agent-config-reconciled",
                                        "items": [
                                            {
                                                "key": "ip-masq-agent-reconciled",
                                                "path": "ip-masq-agent-reconciled",
                                                "mode": 444
                                            }
                                        ],
                                        "optional": true
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "iptableslock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "azure-ip-masq-agent",
                        "image": "mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.13",
                        "args": [
                            "--v=2",
                            "--resync-interval=60"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "500m",
                                "memory": "250Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "azure-ip-masq-agent-config-volume",
                                "mountPath": "/etc/config"
                            },
                            {
                                "name": "iptableslock",
                                "mountPath": "/run/xtables.lock"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_ADMIN",
                                    "NET_RAW"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "automountServiceAccountToken": false,
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-agentpool-29385454-vmss000009"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:39Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:37Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:39Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:39Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:36Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.224.0.4",
                "podIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "startTime": "2024-10-02T22:18:37Z",
                "containerStatuses": [
                    {
                        "name": "azure-ip-masq-agent",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:39Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/aks/ip-masq-agent-v2:v0.1.13",
                        "imageID": "sha256:5c5c7fa933a3d8663d0b88ef04f9fb19919556e24643c7cfbbbc4dd75e27302c",
                        "containerID": "containerd://b48f237e86c5c244826781d4a69f86b3c38fc63b18a352c00b84e9858909afb8",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "cloud-node-manager-mdtqw",
                "generateName": "cloud-node-manager-",
                "namespace": "kube-system",
                "uid": "51eb1728-18bc-4640-8aec-3ce616095ed1",
                "resourceVersion": "429002",
                "creationTimestamp": "2024-10-02T22:18:45Z",
                "labels": {
                    "controller-revision-hash": "7c467897b9",
                    "k8s-app": "cloud-node-manager",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "cluster-autoscaler.kubernetes.io/daemonset-pod": "true"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "cloud-node-manager",
                        "uid": "c64a1005-475d-46e0-9381-a5442181079a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-bj2jm",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "cloud-node-manager",
                        "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.29.9",
                        "command": [
                            "cloud-node-manager",
                            "--node-name=$(NODE_NAME)",
                            "--enable-deprecated-beta-topology-labels=true"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "512Mi"
                            },
                            "requests": {
                                "cpu": "50m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-bj2jm",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "cloud-node-manager",
                "serviceAccount": "cloud-node-manager",
                "nodeName": "aks-agentpool-29385454-vmss000008",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-agentpool-29385454-vmss000008"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:49Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:45Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:49Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:49Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:45Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "hostIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "podIP": "10.224.0.5",
                "podIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "startTime": "2024-10-02T22:18:45Z",
                "containerStatuses": [
                    {
                        "name": "cloud-node-manager",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:49Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.29.9",
                        "imageID": "sha256:ba50fd85ab00f70363d4ef319d7b95dc65b9b7826bf9a2a77be604298b09fdcd",
                        "containerID": "containerd://13ea21bfddaaeb3e3592cd2c92931c6b0209a7d6e46266598993b4838d86a860",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "cloud-node-manager-tjt2c",
                "generateName": "cloud-node-manager-",
                "namespace": "kube-system",
                "uid": "6dddb651-7eeb-4dbf-9319-e215cac562fc",
                "resourceVersion": "428744",
                "creationTimestamp": "2024-10-02T22:18:36Z",
                "labels": {
                    "controller-revision-hash": "7c467897b9",
                    "k8s-app": "cloud-node-manager",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "annotations": {
                    "cluster-autoscaler.kubernetes.io/daemonset-pod": "true"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "cloud-node-manager",
                        "uid": "c64a1005-475d-46e0-9381-a5442181079a",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-2l685",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "cloud-node-manager",
                        "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.29.9",
                        "command": [
                            "cloud-node-manager",
                            "--node-name=$(NODE_NAME)",
                            "--enable-deprecated-beta-topology-labels=true"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "512Mi"
                            },
                            "requests": {
                                "cpu": "50m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-2l685",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "cloud-node-manager",
                "serviceAccount": "cloud-node-manager",
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-agentpool-29385454-vmss000009"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:39Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:37Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:39Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:39Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:36Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.224.0.4",
                "podIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "startTime": "2024-10-02T22:18:37Z",
                "containerStatuses": [
                    {
                        "name": "cloud-node-manager",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:39Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.29.9",
                        "imageID": "sha256:ba50fd85ab00f70363d4ef319d7b95dc65b9b7826bf9a2a77be604298b09fdcd",
                        "containerID": "containerd://fb1023037cb7cad8d9b6e65b5ea995baca7295a0679e67923ac04afe1d899042",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-htf4m",
                "generateName": "coredns-597bb9d4db-",
                "namespace": "kube-system",
                "uid": "efbe04c5-eae1-4636-9c9c-5f1c3a1f64ad",
                "resourceVersion": "429402",
                "creationTimestamp": "2024-10-02T22:13:01Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true",
                    "pod-template-hash": "597bb9d4db",
                    "version": "v20"
                },
                "annotations": {
                    "prometheus.io/port": "9153"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-597bb9d4db",
                        "uid": "6e2b452a-10d7-4f09-876c-5450ef0a602b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "custom-config-volume",
                        "configMap": {
                            "name": "coredns-custom",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "kube-api-access-xfh4s",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240704",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "GOMAXPROCS",
                                "valueFrom": {
                                    "resourceFieldRef": {
                                        "resource": "limits.cpu",
                                        "divisor": "0"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "3",
                                "memory": "500Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "custom-config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns/custom"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-xfh4s",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false,
                            "procMount": "Default"
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 10,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "topology.kubernetes.io/zone"
                                }
                            },
                            {
                                "weight": 5,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:55Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:19:04Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:19:04Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.244.0.19",
                "podIPs": [
                    {
                        "ip": "10.244.0.19"
                    }
                ],
                "startTime": "2024-10-02T22:18:53Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:54Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240704",
                        "imageID": "sha256:e529f1bc3a83669d28ab8c8f725bbebc90d3d4b81396005bb94139d8c2281364",
                        "containerID": "containerd://1197e965048f9df41b126b4cb77b9efee8a439f4998d29bcce598928b459ed4b",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-597bb9d4db-q8w69",
                "generateName": "coredns-597bb9d4db-",
                "namespace": "kube-system",
                "uid": "b7bb2c70-c0d3-45c4-bba3-095cb42eb880",
                "resourceVersion": "429408",
                "creationTimestamp": "2024-10-02T22:13:01Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.azure.com/managedby": "aks",
                    "kubernetes.io/cluster-service": "true",
                    "pod-template-hash": "597bb9d4db",
                    "version": "v20"
                },
                "annotations": {
                    "prometheus.io/port": "9153"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-597bb9d4db",
                        "uid": "6e2b452a-10d7-4f09-876c-5450ef0a602b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "custom-config-volume",
                        "configMap": {
                            "name": "coredns-custom",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "tmp",
                        "emptyDir": {}
                    },
                    {
                        "name": "kube-api-access-nds72",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240704",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "GOMAXPROCS",
                                "valueFrom": {
                                    "resourceFieldRef": {
                                        "resource": "limits.cpu",
                                        "divisor": "0"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "3",
                                "memory": "500Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "custom-config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns/custom"
                            },
                            {
                                "name": "tmp",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-nds72",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false,
                            "procMount": "Default"
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 10,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "topology.kubernetes.io/zone"
                                }
                            },
                            {
                                "weight": 5,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node-role.kubernetes.io/master",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:55Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:19:04Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:19:04Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.244.0.76",
                "podIPs": [
                    {
                        "ip": "10.244.0.76"
                    }
                ],
                "startTime": "2024-10-02T22:18:53Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:55Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/coredns:v1.9.4-hotfix.20240704",
                        "imageID": "sha256:e529f1bc3a83669d28ab8c8f725bbebc90d3d4b81396005bb94139d8c2281364",
                        "containerID": "containerd://a2f79099444e6912a593e12508c858f3222eeb50f1fa7090f1128de641fc5fbd",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-autoscaler-689db4649c-gpqbl",
                "generateName": "coredns-autoscaler-689db4649c-",
                "namespace": "kube-system",
                "uid": "c37cfe01-bbf3-4bf1-a82e-c13351986453",
                "resourceVersion": "429264",
                "creationTimestamp": "2024-10-02T22:13:02Z",
                "labels": {
                    "k8s-app": "coredns-autoscaler",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "689db4649c"
                },
                "annotations": {
                    "cluster-autoscaler.kubernetes.io/safe-to-evict": "true",
                    "seccomp.security.alpha.kubernetes.io/pod": "runtime/default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-autoscaler-689db4649c",
                        "uid": "a1097d13-ab3d-45fe-be0b-af7e2bbcbcc2",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-6j9z6",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "autoscaler",
                        "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11",
                        "command": [
                            "/cluster-proportional-autoscaler",
                            "--namespace=kube-system",
                            "--configmap=coredns-autoscaler",
                            "--target=deployment/coredns",
                            "--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}",
                            "--logtostderr=true",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "200m",
                                "memory": "500Mi"
                            },
                            "requests": {
                                "cpu": "20m",
                                "memory": "10Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-6j9z6",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/last-poll",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "coredns-autoscaler",
                "serviceAccount": "coredns-autoscaler",
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:55Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:55Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:55Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.244.0.223",
                "podIPs": [
                    {
                        "ip": "10.244.0.223"
                    }
                ],
                "startTime": "2024-10-02T22:18:53Z",
                "containerStatuses": [
                    {
                        "name": "autoscaler",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:55Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11",
                        "imageID": "mcr.microsoft.com/oss/kubernetes/autoscaler/cluster-proportional-autoscaler@sha256:2ebc4219d132975a535cfa52871f5af75da9ee82c3df857178c2df8002a2a7fb",
                        "containerID": "containerd://28a917a4cf94eb564afc95040c7eee01cec9e4b456726bbdbc19a4cabe8dd652",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-789r7",
                "generateName": "csi-azuredisk-node-",
                "namespace": "kube-system",
                "uid": "ca756a60-2c96-47c3-88cd-4172f1e637a8",
                "resourceVersion": "429198",
                "creationTimestamp": "2024-10-02T22:18:45Z",
                "labels": {
                    "app": "csi-azuredisk-node",
                    "controller-revision-hash": "6f966776fc",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "csi-azuredisk-node",
                        "uid": "120c3990-2b2c-47a7-84a6-20757673b3ca",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "socket-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins/disk.csi.azure.com",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "mountpoint-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "registration-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins_registry/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "azure-cred",
                        "hostPath": {
                            "path": "/etc/kubernetes/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "device-dir",
                        "hostPath": {
                            "path": "/dev",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "sys-devices-dir",
                        "hostPath": {
                            "path": "/sys/bus/scsi/devices",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "scsi-host-dir",
                        "hostPath": {
                            "path": "/sys/class/scsi_host/",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-47zrt",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "liveness-probe",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0",
                        "args": [
                            "--csi-address=/csi/csi.sock",
                            "--probe-timeout=3s",
                            "--health-port=29603",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "kube-api-access-47zrt",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "node-driver-registrar",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1",
                        "args": [
                            "--csi-address=$(ADDRESS)",
                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "ADDRESS",
                                "value": "/csi/csi.sock"
                            },
                            {
                                "name": "DRIVER_REG_SOCK_PATH",
                                "value": "/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "registration-dir",
                                "mountPath": "/registration"
                            },
                            {
                                "name": "kube-api-access-47zrt",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/csi-node-driver-registrar",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--mode=kubelet-registration-probe"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "azuredisk",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9",
                        "args": [
                            "--v=5",
                            "--endpoint=$(CSI_ENDPOINT)",
                            "--nodeid=$(KUBE_NODE_NAME)",
                            "--enable-perf-optimization=true"
                        ],
                        "ports": [
                            {
                                "name": "healthz",
                                "hostPort": 29603,
                                "containerPort": 29603,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "AZURE_CREDENTIAL_FILE",
                                "value": "/etc/kubernetes/azure.json"
                            },
                            {
                                "name": "CSI_ENDPOINT",
                                "value": "unix:///csi/csi.sock"
                            },
                            {
                                "name": "KUBE_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "600Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "mountpoint-dir",
                                "mountPath": "/var/lib/kubelet/",
                                "mountPropagation": "Bidirectional"
                            },
                            {
                                "name": "azure-cred",
                                "mountPath": "/etc/kubernetes/"
                            },
                            {
                                "name": "device-dir",
                                "mountPath": "/dev"
                            },
                            {
                                "name": "sys-devices-dir",
                                "mountPath": "/sys/bus/scsi/devices"
                            },
                            {
                                "name": "scsi-host-dir",
                                "mountPath": "/sys/class/scsi_host/"
                            },
                            {
                                "name": "kube-api-access-47zrt",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": "healthz",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 10,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "csi-azuredisk-node-sa",
                "serviceAccount": "csi-azuredisk-node-sa",
                "nodeName": "aks-agentpool-29385454-vmss000008",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-agentpool-29385454-vmss000008"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:54Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:45Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:54Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:54Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:45Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "hostIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "podIP": "10.224.0.5",
                "podIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "startTime": "2024-10-02T22:18:45Z",
                "containerStatuses": [
                    {
                        "name": "azuredisk",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:53Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9",
                        "imageID": "sha256:6d3705b3127976c13d63a73a78ad977cd240cb7acfbef4264cc41213c139cb25",
                        "containerID": "containerd://99369e8c441a7d101807bfdc01a525233f02db55ab9bd87ab7c7714ade93d259",
                        "started": true
                    },
                    {
                        "name": "liveness-probe",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:50Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0",
                        "imageID": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe@sha256:c762188c45d1b9bc9144b694b85313d5e49c741935a81d5b94fd7db978a40ae1",
                        "containerID": "containerd://1191b6c00d316381b8904b21ed0dc0506fe264470ddec561bea11560b6f0a120",
                        "started": true
                    },
                    {
                        "name": "node-driver-registrar",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:53Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1",
                        "imageID": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar@sha256:b3bbd7a6171bff15eeefd137316fa16415aa6a4c817e5ec609662793093b3526",
                        "containerID": "containerd://db7078ad615b7bb69d41bb3724ae81674af0833243290388db37ba9173fb7273",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "csi-azuredisk-node-pkxll",
                "generateName": "csi-azuredisk-node-",
                "namespace": "kube-system",
                "uid": "47dd0392-102d-4a1e-9409-249d8f31353a",
                "resourceVersion": "428842",
                "creationTimestamp": "2024-10-02T22:18:36Z",
                "labels": {
                    "app": "csi-azuredisk-node",
                    "controller-revision-hash": "6f966776fc",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "csi-azuredisk-node",
                        "uid": "120c3990-2b2c-47a7-84a6-20757673b3ca",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "socket-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins/disk.csi.azure.com",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "mountpoint-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "registration-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins_registry/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "azure-cred",
                        "hostPath": {
                            "path": "/etc/kubernetes/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "device-dir",
                        "hostPath": {
                            "path": "/dev",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "sys-devices-dir",
                        "hostPath": {
                            "path": "/sys/bus/scsi/devices",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "scsi-host-dir",
                        "hostPath": {
                            "path": "/sys/class/scsi_host/",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-qvkdx",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "liveness-probe",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0",
                        "args": [
                            "--csi-address=/csi/csi.sock",
                            "--probe-timeout=3s",
                            "--health-port=29603",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "kube-api-access-qvkdx",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "node-driver-registrar",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1",
                        "args": [
                            "--csi-address=$(ADDRESS)",
                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "ADDRESS",
                                "value": "/csi/csi.sock"
                            },
                            {
                                "name": "DRIVER_REG_SOCK_PATH",
                                "value": "/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "registration-dir",
                                "mountPath": "/registration"
                            },
                            {
                                "name": "kube-api-access-qvkdx",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/csi-node-driver-registrar",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--mode=kubelet-registration-probe"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "azuredisk",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9",
                        "args": [
                            "--v=5",
                            "--endpoint=$(CSI_ENDPOINT)",
                            "--nodeid=$(KUBE_NODE_NAME)",
                            "--enable-perf-optimization=true"
                        ],
                        "ports": [
                            {
                                "name": "healthz",
                                "hostPort": 29603,
                                "containerPort": 29603,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "AZURE_CREDENTIAL_FILE",
                                "value": "/etc/kubernetes/azure.json"
                            },
                            {
                                "name": "CSI_ENDPOINT",
                                "value": "unix:///csi/csi.sock"
                            },
                            {
                                "name": "KUBE_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "600Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "mountpoint-dir",
                                "mountPath": "/var/lib/kubelet/",
                                "mountPropagation": "Bidirectional"
                            },
                            {
                                "name": "azure-cred",
                                "mountPath": "/etc/kubernetes/"
                            },
                            {
                                "name": "device-dir",
                                "mountPath": "/dev"
                            },
                            {
                                "name": "sys-devices-dir",
                                "mountPath": "/sys/bus/scsi/devices"
                            },
                            {
                                "name": "scsi-host-dir",
                                "mountPath": "/sys/class/scsi_host/"
                            },
                            {
                                "name": "kube-api-access-qvkdx",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": "healthz",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 10,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "csi-azuredisk-node-sa",
                "serviceAccount": "csi-azuredisk-node-sa",
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-agentpool-29385454-vmss000009"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:44Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:37Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:44Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:44Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:36Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.224.0.4",
                "podIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "startTime": "2024-10-02T22:18:37Z",
                "containerStatuses": [
                    {
                        "name": "azuredisk",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:43Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.29.9",
                        "imageID": "sha256:6d3705b3127976c13d63a73a78ad977cd240cb7acfbef4264cc41213c139cb25",
                        "containerID": "containerd://64fd8273616355423d8a535744a1ee3fe72c30604e22ec47ef1c864dedf3fa5b",
                        "started": true
                    },
                    {
                        "name": "liveness-probe",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:41Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0",
                        "imageID": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe@sha256:c762188c45d1b9bc9144b694b85313d5e49c741935a81d5b94fd7db978a40ae1",
                        "containerID": "containerd://be6870d42406c521fba75bdd9db2f2701add05ee435c1d61a50810bad433b92c",
                        "started": true
                    },
                    {
                        "name": "node-driver-registrar",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:43Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1",
                        "imageID": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar@sha256:b3bbd7a6171bff15eeefd137316fa16415aa6a4c817e5ec609662793093b3526",
                        "containerID": "containerd://0eb3dda87e7c47bb8cfbd08f51da5e77410cd04ede94c7c84d5a92ab20011f1c",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-hn75v",
                "generateName": "csi-azurefile-node-",
                "namespace": "kube-system",
                "uid": "97af22be-631b-4f03-b7d1-55cecd2b09ab",
                "resourceVersion": "429203",
                "creationTimestamp": "2024-10-02T22:18:45Z",
                "labels": {
                    "app": "csi-azurefile-node",
                    "controller-revision-hash": "64d96788cd",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "csi-azurefile-node",
                        "uid": "c2ce98e7-0b59-4347-a09b-a2117c9be016",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "socket-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins/file.csi.azure.com",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "mountpoint-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "registration-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins_registry/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "azure-cred",
                        "hostPath": {
                            "path": "/etc/kubernetes/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "device-dir",
                        "hostPath": {
                            "path": "/dev",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-5nr8z",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "liveness-probe",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0",
                        "args": [
                            "--csi-address=/csi/csi.sock",
                            "--probe-timeout=3s",
                            "--health-port=29613",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "kube-api-access-5nr8z",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "node-driver-registrar",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1",
                        "args": [
                            "--csi-address=$(ADDRESS)",
                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "ADDRESS",
                                "value": "/csi/csi.sock"
                            },
                            {
                                "name": "DRIVER_REG_SOCK_PATH",
                                "value": "/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "registration-dir",
                                "mountPath": "/registration"
                            },
                            {
                                "name": "kube-api-access-5nr8z",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/csi-node-driver-registrar",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--mode=kubelet-registration-probe"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "azurefile",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5",
                        "args": [
                            "--v=5",
                            "--endpoint=$(CSI_ENDPOINT)",
                            "--nodeid=$(KUBE_NODE_NAME)",
                            "--enable-get-volume-stats=true",
                            "--mount-permissions=0777",
                            "--metrics-address=0.0.0.0:29615"
                        ],
                        "ports": [
                            {
                                "name": "healthz",
                                "hostPort": 29613,
                                "containerPort": 29613,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "hostPort": 29615,
                                "containerPort": 29615,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "AZURE_CREDENTIAL_FILE",
                                "value": "/etc/kubernetes/azure.json"
                            },
                            {
                                "name": "CSI_ENDPOINT",
                                "value": "unix:///csi/csi.sock"
                            },
                            {
                                "name": "KUBE_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "400Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "mountpoint-dir",
                                "mountPath": "/var/lib/kubelet/",
                                "mountPropagation": "Bidirectional"
                            },
                            {
                                "name": "azure-cred",
                                "mountPath": "/etc/kubernetes/"
                            },
                            {
                                "name": "device-dir",
                                "mountPath": "/dev"
                            },
                            {
                                "name": "kube-api-access-5nr8z",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": "healthz",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 10,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "csi-azurefile-node-sa",
                "serviceAccount": "csi-azurefile-node-sa",
                "nodeName": "aks-agentpool-29385454-vmss000008",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-agentpool-29385454-vmss000008"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:54Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:45Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:54Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:54Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:45Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "hostIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "podIP": "10.224.0.5",
                "podIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "startTime": "2024-10-02T22:18:45Z",
                "containerStatuses": [
                    {
                        "name": "azurefile",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:53Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5",
                        "imageID": "sha256:8f2fb5a07b56ea57b0a32f6dfd387e9eb637d861e12ef938dc2d4fd18535c76a",
                        "containerID": "containerd://ba15a5a1e01f2d11ea6d6239ded287ee6ab1ee3707a391cf5457d2b4a79b0a7a",
                        "started": true
                    },
                    {
                        "name": "liveness-probe",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:50Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0",
                        "imageID": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe@sha256:c762188c45d1b9bc9144b694b85313d5e49c741935a81d5b94fd7db978a40ae1",
                        "containerID": "containerd://0bafdeab742967038233fa78ff9244658103a604251d6d2faaab68b34bbcd4fe",
                        "started": true
                    },
                    {
                        "name": "node-driver-registrar",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:53Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1",
                        "imageID": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar@sha256:b3bbd7a6171bff15eeefd137316fa16415aa6a4c817e5ec609662793093b3526",
                        "containerID": "containerd://c6fa92debed12b9033520f71478d70e61b4b848075520e69c80dc009727c7042",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "csi-azurefile-node-w9xkr",
                "generateName": "csi-azurefile-node-",
                "namespace": "kube-system",
                "uid": "02b4fd18-88a9-4046-9486-f5208a0ed725",
                "resourceVersion": "428959",
                "creationTimestamp": "2024-10-02T22:18:36Z",
                "labels": {
                    "app": "csi-azurefile-node",
                    "controller-revision-hash": "64d96788cd",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "csi-azurefile-node",
                        "uid": "c2ce98e7-0b59-4347-a09b-a2117c9be016",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "socket-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins/file.csi.azure.com",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "mountpoint-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "registration-dir",
                        "hostPath": {
                            "path": "/var/lib/kubelet/plugins_registry/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "azure-cred",
                        "hostPath": {
                            "path": "/etc/kubernetes/",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "device-dir",
                        "hostPath": {
                            "path": "/dev",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-rdv8r",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "liveness-probe",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0",
                        "args": [
                            "--csi-address=/csi/csi.sock",
                            "--probe-timeout=3s",
                            "--health-port=29613",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "kube-api-access-rdv8r",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "node-driver-registrar",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1",
                        "args": [
                            "--csi-address=$(ADDRESS)",
                            "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                            "--v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "ADDRESS",
                                "value": "/csi/csi.sock"
                            },
                            {
                                "name": "DRIVER_REG_SOCK_PATH",
                                "value": "/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "100Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "registration-dir",
                                "mountPath": "/registration"
                            },
                            {
                                "name": "kube-api-access-rdv8r",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "exec": {
                                "command": [
                                    "/csi-node-driver-registrar",
                                    "--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)",
                                    "--mode=kubelet-registration-probe"
                                ]
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 30,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    },
                    {
                        "name": "azurefile",
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5",
                        "args": [
                            "--v=5",
                            "--endpoint=$(CSI_ENDPOINT)",
                            "--nodeid=$(KUBE_NODE_NAME)",
                            "--enable-get-volume-stats=true",
                            "--mount-permissions=0777",
                            "--metrics-address=0.0.0.0:29615"
                        ],
                        "ports": [
                            {
                                "name": "healthz",
                                "hostPort": 29613,
                                "containerPort": 29613,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "hostPort": 29615,
                                "containerPort": 29615,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "AZURE_CREDENTIAL_FILE",
                                "value": "/etc/kubernetes/azure.json"
                            },
                            {
                                "name": "CSI_ENDPOINT",
                                "value": "unix:///csi/csi.sock"
                            },
                            {
                                "name": "KUBE_NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "400Mi"
                            },
                            "requests": {
                                "cpu": "10m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "socket-dir",
                                "mountPath": "/csi"
                            },
                            {
                                "name": "mountpoint-dir",
                                "mountPath": "/var/lib/kubelet/",
                                "mountPropagation": "Bidirectional"
                            },
                            {
                                "name": "azure-cred",
                                "mountPath": "/etc/kubernetes/"
                            },
                            {
                                "name": "device-dir",
                                "mountPath": "/dev"
                            },
                            {
                                "name": "kube-api-access-rdv8r",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": "healthz",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 10,
                            "periodSeconds": 30,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "csi-azurefile-node-sa",
                "serviceAccount": "csi-azurefile-node-sa",
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-agentpool-29385454-vmss000009"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:46Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:37Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:46Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:46Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:36Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.224.0.4",
                "podIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "startTime": "2024-10-02T22:18:37Z",
                "containerStatuses": [
                    {
                        "name": "azurefile",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:45Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.5",
                        "imageID": "sha256:8f2fb5a07b56ea57b0a32f6dfd387e9eb637d861e12ef938dc2d4fd18535c76a",
                        "containerID": "containerd://e061864c1db5fbace35c0aa2b3128e656de378045010240394e07a2ccdf07fb5",
                        "started": true
                    },
                    {
                        "name": "liveness-probe",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:41Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.12.0",
                        "imageID": "mcr.microsoft.com/oss/kubernetes-csi/livenessprobe@sha256:c762188c45d1b9bc9144b694b85313d5e49c741935a81d5b94fd7db978a40ae1",
                        "containerID": "containerd://cb71da8885c4cccf274fc01011e4fba2402ab09aed7c26d8dbafe1d6e54b44bd",
                        "started": true
                    },
                    {
                        "name": "node-driver-registrar",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:45Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.10.1",
                        "imageID": "mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar@sha256:b3bbd7a6171bff15eeefd137316fa16415aa6a4c817e5ec609662793093b3526",
                        "containerID": "containerd://d01d3e459023148fd33bbabcbffed196a7100766b312d82b4bdf9277f8719706",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-mftbf",
                "generateName": "konnectivity-agent-5c7766456f-",
                "namespace": "kube-system",
                "uid": "dac60fb5-8c0a-44ad-8fa3-490aae5449a3",
                "resourceVersion": "429304",
                "creationTimestamp": "2024-10-02T22:13:02Z",
                "labels": {
                    "app": "konnectivity-agent",
                    "component": "tunnel",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "5c7766456f"
                },
                "annotations": {
                    "checksum/client-cert": "d1c37b2b22be8e6e749d4967413809cd79d446a146c6b1425160fb8f552fa770",
                    "checksum/service-account-key": "1ed3beb816ade5fbc2a89e3d3de5c549acbab09b175057d9868dcdf147db9c44"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "konnectivity-agent-5c7766456f",
                        "uid": "cf3af4ea-5df8-4c16-92d1-b8e17c4ba948",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "certs",
                        "secret": {
                            "secretName": "konnectivity-certs",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "konnectivity-agent",
                        "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116",
                        "command": [
                            "/proxy-agent"
                        ],
                        "args": [
                            "--proxy-server-host=wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io",
                            "--proxy-server-port=443",
                            "--health-server-port=8082",
                            "--keepalive-time=30s",
                            "--agent-key=/certs/client.key",
                            "--agent-cert=/certs/client.crt",
                            "--ca-cert=/certs/ca.crt",
                            "--agent-identifiers=default-route=true",
                            "--alpn-proto=konnectivity",
                            "-v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "20m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "certs",
                                "mountPath": "/certs"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8082,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 60,
                            "periodSeconds": 60,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8082,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "konnectivity-agent",
                "serviceAccount": "konnectivity-agent",
                "automountServiceAccountToken": false,
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 10,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "app",
                                                "operator": "In",
                                                "values": [
                                                    "konnectivity-agent"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "topology.kubernetes.io/zone"
                                }
                            },
                            {
                                "weight": 5,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "app",
                                                "operator": "In",
                                                "values": [
                                                    "konnectivity-agent"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:55Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:56Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:56Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.244.0.206",
                "podIPs": [
                    {
                        "ip": "10.244.0.206"
                    }
                ],
                "startTime": "2024-10-02T22:18:53Z",
                "containerStatuses": [
                    {
                        "name": "konnectivity-agent",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:55Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116",
                        "imageID": "sha256:186473cf0a31771a84572c2245ab61e4b1e26340ca151169868dc1c666d481a0",
                        "containerID": "containerd://c49cfff68b4ab3daa60c8733f44f77c059d3f76373c7bda8b99949cda6ca072f",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "konnectivity-agent-5c7766456f-ncsmt",
                "generateName": "konnectivity-agent-5c7766456f-",
                "namespace": "kube-system",
                "uid": "89786646-68bc-4904-ad87-1467c60b1007",
                "resourceVersion": "429299",
                "creationTimestamp": "2024-10-02T22:13:02Z",
                "labels": {
                    "app": "konnectivity-agent",
                    "component": "tunnel",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "5c7766456f"
                },
                "annotations": {
                    "checksum/client-cert": "d1c37b2b22be8e6e749d4967413809cd79d446a146c6b1425160fb8f552fa770",
                    "checksum/service-account-key": "1ed3beb816ade5fbc2a89e3d3de5c549acbab09b175057d9868dcdf147db9c44"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "konnectivity-agent-5c7766456f",
                        "uid": "cf3af4ea-5df8-4c16-92d1-b8e17c4ba948",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "certs",
                        "secret": {
                            "secretName": "konnectivity-certs",
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "konnectivity-agent",
                        "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116",
                        "command": [
                            "/proxy-agent"
                        ],
                        "args": [
                            "--proxy-server-host=wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io",
                            "--proxy-server-port=443",
                            "--health-server-port=8082",
                            "--keepalive-time=30s",
                            "--agent-key=/certs/client.key",
                            "--agent-cert=/certs/client.crt",
                            "--ca-cert=/certs/ca.crt",
                            "--agent-identifiers=default-route=true",
                            "--alpn-proto=konnectivity",
                            "-v=2"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "1",
                                "memory": "1Gi"
                            },
                            "requests": {
                                "cpu": "20m",
                                "memory": "20Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "certs",
                                "mountPath": "/certs"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8082,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 30,
                            "timeoutSeconds": 60,
                            "periodSeconds": 60,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8082,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "serviceAccountName": "konnectivity-agent",
                "serviceAccount": "konnectivity-agent",
                "automountServiceAccountToken": false,
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 10,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "app",
                                                "operator": "In",
                                                "values": [
                                                    "konnectivity-agent"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "topology.kubernetes.io/zone"
                                }
                            },
                            {
                                "weight": 5,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "app",
                                                "operator": "In",
                                                "values": [
                                                    "konnectivity-agent"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:56Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:56Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:56Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.244.0.222",
                "podIPs": [
                    {
                        "ip": "10.244.0.222"
                    }
                ],
                "startTime": "2024-10-02T22:18:53Z",
                "containerStatuses": [
                    {
                        "name": "konnectivity-agent",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:55Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.1.6-hotfix.20240116",
                        "imageID": "sha256:186473cf0a31771a84572c2245ab61e4b1e26340ca151169868dc1c666d481a0",
                        "containerID": "containerd://2aafd624bcebf89ddb946349d3fbba7791c3dce2100d8a3571dbe44d34f8beae",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-lsxcg",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "feead270-92cc-46f8-b09f-c03c44c3075b",
                "resourceVersion": "429140",
                "creationTimestamp": "2024-10-02T22:18:45Z",
                "labels": {
                    "component": "kube-proxy",
                    "controller-revision-hash": "6f69cd7d9c",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "6e5aee02-de72-413b-941f-9b8f2de82e16",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "iptableslock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "sysctls",
                        "hostPath": {
                            "path": "/etc/sysctl.d",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-l5fxk",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "kube-proxy-bootstrap",
                        "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8",
                        "command": [
                            "/bin/sh",
                            "-c",
                            "get_num_cpu() {\n  # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: \"0-3\", \"0,1,2\", \"0-3,4\")\n  # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html\n  sys_cpu_online=$(cat /sys/devices/system/cpu/online)\n  result=0\n  OLD_IFS=\"$IFS\"; IFS=\",\"\n  for rng in \"$sys_cpu_online\"; do\n    if echo \"$rng\" | grep -q -- \"-\"; then\n      min=${rng%-*}; max=${rng#*-}\n      if [ \"$min\" -le \"$max\" ]; then\n        result=$((result + (max - min + 1)))\n      fi\n    else\n      result=$((result + 1))\n    fi\n  done\n  IFS=\"$OLD_IFS\"\n  echo $result\n}\n\nSYSCTL=/proc/sys/net/netfilter/nf_conntrack_max\necho \"Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)\"\nDESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?\u003c=net.netfilter.nf_conntrack_max=).*')\nif [ -z \"$DESIRED\" ]; then\n  NUM_CPU=$(get_num_cpu)\n  DESIRED=$((32768*$NUM_CPU))\n  if [ $DESIRED -lt 131072 ]; then\n    DESIRED=131072\n  fi\n\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max not set.\"\n  echo \"Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072).\"\n  echo $DESIRED \u003e $SYSCTL\nelse\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED.\"\n  echo \"Setting nf_conntrack_max to $DESIRED.\"\n  echo $DESIRED \u003e $SYSCTL\nfi\n"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "sysctls",
                                "mountPath": "/etc/sysctl.d"
                            },
                            {
                                "name": "modules",
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-l5fxk",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8",
                        "command": [
                            "kube-proxy",
                            "--conntrack-max-per-core=0",
                            "--metrics-bind-address=0.0.0.0:10249",
                            "--cluster-cidr=10.244.0.0/16",
                            "--detect-local-mode=InterfaceNamePrefix",
                            "--pod-interface-name-prefix=azv",
                            "--v=3"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "iptableslock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "modules",
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-l5fxk",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "aks-agentpool-29385454-vmss000008",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-agentpool-29385454-vmss000008"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:50Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:52Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:45Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "hostIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "podIP": "10.224.0.5",
                "podIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "startTime": "2024-10-02T22:18:45Z",
                "initContainerStatuses": [
                    {
                        "name": "kube-proxy-bootstrap",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2024-10-02T22:18:49Z",
                                "finishedAt": "2024-10-02T22:18:50Z",
                                "containerID": "containerd://38e7782960311972c9ccdf75ca40a9870ade10f9b503113c7315a7b1495eda15"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8",
                        "imageID": "sha256:f476a63ca8f2cb9cbb0862b511daef52eccdede95206b9a60fae567876008f11",
                        "containerID": "containerd://38e7782960311972c9ccdf75ca40a9870ade10f9b503113c7315a7b1495eda15",
                        "started": false
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:52Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8",
                        "imageID": "sha256:f476a63ca8f2cb9cbb0862b511daef52eccdede95206b9a60fae567876008f11",
                        "containerID": "containerd://a48e9dc42ea4f378b6dc5e4a3df1cbe1b807ea7598afb49c9a454f71cfb3f2fa",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-zj62b",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "f58756eb-81e0-4e65-a35e-9a77bd1a5f0e",
                "resourceVersion": "428816",
                "creationTimestamp": "2024-10-02T22:18:36Z",
                "labels": {
                    "component": "kube-proxy",
                    "controller-revision-hash": "6f69cd7d9c",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "6e5aee02-de72-413b-941f-9b8f2de82e16",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "iptableslock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "sysctls",
                        "hostPath": {
                            "path": "/etc/sysctl.d",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": "Directory"
                        }
                    },
                    {
                        "name": "kube-api-access-6tnnt",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "initContainers": [
                    {
                        "name": "kube-proxy-bootstrap",
                        "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8",
                        "command": [
                            "/bin/sh",
                            "-c",
                            "get_num_cpu() {\n  # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: \"0-3\", \"0,1,2\", \"0-3,4\")\n  # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html\n  sys_cpu_online=$(cat /sys/devices/system/cpu/online)\n  result=0\n  OLD_IFS=\"$IFS\"; IFS=\",\"\n  for rng in \"$sys_cpu_online\"; do\n    if echo \"$rng\" | grep -q -- \"-\"; then\n      min=${rng%-*}; max=${rng#*-}\n      if [ \"$min\" -le \"$max\" ]; then\n        result=$((result + (max - min + 1)))\n      fi\n    else\n      result=$((result + 1))\n    fi\n  done\n  IFS=\"$OLD_IFS\"\n  echo $result\n}\n\nSYSCTL=/proc/sys/net/netfilter/nf_conntrack_max\necho \"Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)\"\nDESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?\u003c=net.netfilter.nf_conntrack_max=).*')\nif [ -z \"$DESIRED\" ]; then\n  NUM_CPU=$(get_num_cpu)\n  DESIRED=$((32768*$NUM_CPU))\n  if [ $DESIRED -lt 131072 ]; then\n    DESIRED=131072\n  fi\n\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max not set.\"\n  echo \"Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072).\"\n  echo $DESIRED \u003e $SYSCTL\nelse\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED.\"\n  echo \"Setting nf_conntrack_max to $DESIRED.\"\n  echo $DESIRED \u003e $SYSCTL\nfi\n"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "sysctls",
                                "mountPath": "/etc/sysctl.d"
                            },
                            {
                                "name": "modules",
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-6tnnt",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8",
                        "command": [
                            "kube-proxy",
                            "--conntrack-max-per-core=0",
                            "--metrics-bind-address=0.0.0.0:10249",
                            "--cluster-cidr=10.244.0.0/16",
                            "--detect-local-mode=InterfaceNamePrefix",
                            "--pod-interface-name-prefix=azv",
                            "--v=3"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "iptableslock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "modules",
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-6tnnt",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "aks-agentpool-29385454-vmss000009"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:39Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:41Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:42Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:42Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:36Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.224.0.4",
                "podIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "startTime": "2024-10-02T22:18:37Z",
                "initContainerStatuses": [
                    {
                        "name": "kube-proxy-bootstrap",
                        "state": {
                            "terminated": {
                                "exitCode": 0,
                                "reason": "Completed",
                                "startedAt": "2024-10-02T22:18:39Z",
                                "finishedAt": "2024-10-02T22:18:39Z",
                                "containerID": "containerd://19d85c0fa0ce608a4a8dcb2f3e35b9fac06e57616d270519323040e62ef3a930"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8",
                        "imageID": "sha256:f476a63ca8f2cb9cbb0862b511daef52eccdede95206b9a60fae567876008f11",
                        "containerID": "containerd://19d85c0fa0ce608a4a8dcb2f3e35b9fac06e57616d270519323040e62ef3a930",
                        "started": false
                    }
                ],
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:41Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.29.8",
                        "imageID": "sha256:f476a63ca8f2cb9cbb0862b511daef52eccdede95206b9a60fae567876008f11",
                        "containerID": "containerd://3bd45d90122cb2654b3318aaebf2a517386443733363b42215006ad7265270b6",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-5fc5j",
                "generateName": "metrics-server-f46f56d7b-",
                "namespace": "kube-system",
                "uid": "5a274337-e33d-4557-b767-ba9ba3a86c49",
                "resourceVersion": "429927",
                "creationTimestamp": "2024-10-02T22:13:02Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "f46f56d7b"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "metrics-server-f46f56d7b",
                        "uid": "e65d18d5-b661-46b6-ac79-fa1db609863d",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp-dir",
                        "emptyDir": {}
                    },
                    {
                        "name": "metrics-server-config-volume",
                        "configMap": {
                            "name": "metrics-server-config",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "kube-api-access-4ggh6",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "metrics-server-vpa",
                        "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.22",
                        "command": [
                            "/pod_nanny",
                            "--config-dir=/etc/config",
                            "--cpu=44m",
                            "--extra-cpu=0.5m",
                            "--memory=51Mi",
                            "--extra-memory=4Mi",
                            "--poll-period=180000",
                            "--threshold=5",
                            "--deployment=metrics-server",
                            "--container=metrics-server"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "MY_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "MY_POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "300Mi"
                            },
                            "requests": {
                                "cpu": "5m",
                                "memory": "30Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "metrics-server-config-volume",
                                "mountPath": "/etc/config"
                            },
                            {
                                "name": "kube-api-access-4ggh6",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsUser": 65532,
                            "runAsNonRoot": true,
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    },
                    {
                        "name": "metrics-server",
                        "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                        "command": [
                            "/metrics-server",
                            "--kubelet-insecure-tls",
                            "--kubelet-preferred-address-types=InternalIP",
                            "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                            "--cert-dir=/tmp",
                            "--secure-port=4443"
                        ],
                        "ports": [
                            {
                                "name": "ms-https",
                                "containerPort": 4443,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "45m",
                                "memory": "59Mi"
                            },
                            "requests": {
                                "cpu": "45m",
                                "memory": "59Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "tmp-dir",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-4ggh6",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": "ms-https",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 20,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": "ms-https",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsUser": 65532,
                            "runAsNonRoot": true,
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "metrics-server",
                "serviceAccount": "metrics-server",
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 10,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "metrics-server"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "topology.kubernetes.io/zone"
                                }
                            },
                            {
                                "weight": 5,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "metrics-server"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:19:07Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:20:14Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:20:14Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.244.0.49",
                "podIPs": [
                    {
                        "ip": "10.244.0.49"
                    }
                ],
                "startTime": "2024-10-02T22:18:53Z",
                "containerStatuses": [
                    {
                        "name": "metrics-server",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:19:07Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                        "imageID": "mcr.microsoft.com/oss/kubernetes/metrics-server@sha256:c49553d5b948fcf5b23bed3718c797f42ebe87d7ae5f2c6f537f530b65cadaec",
                        "containerID": "containerd://91c90c286b137e7b6d241fc1b0978159d6d56afe5988478735da1c7b7c644e75",
                        "started": true
                    },
                    {
                        "name": "metrics-server-vpa",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:55Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.22",
                        "imageID": "sha256:64e5b3a566f8463f9eb99d3d47079e9689ef4233eed03c43ed640d319192ee0d",
                        "containerID": "containerd://3b3f6f3f7c10be0d74751ea86bf202028038a90c19b3c3fb52d82c0f72f4efaa",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "metrics-server-f46f56d7b-trtqp",
                "generateName": "metrics-server-f46f56d7b-",
                "namespace": "kube-system",
                "uid": "8ef9f4a7-2f8b-447e-b16f-8d555060c897",
                "resourceVersion": "429920",
                "creationTimestamp": "2024-10-02T22:13:02Z",
                "labels": {
                    "k8s-app": "metrics-server",
                    "kubernetes.azure.com/managedby": "aks",
                    "pod-template-hash": "f46f56d7b"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "metrics-server-f46f56d7b",
                        "uid": "e65d18d5-b661-46b6-ac79-fa1db609863d",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "tmp-dir",
                        "emptyDir": {}
                    },
                    {
                        "name": "metrics-server-config-volume",
                        "configMap": {
                            "name": "metrics-server-config",
                            "defaultMode": 420,
                            "optional": true
                        }
                    },
                    {
                        "name": "kube-api-access-zgnsr",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "metrics-server-vpa",
                        "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.22",
                        "command": [
                            "/pod_nanny",
                            "--config-dir=/etc/config",
                            "--cpu=44m",
                            "--extra-cpu=0.5m",
                            "--memory=51Mi",
                            "--extra-memory=4Mi",
                            "--poll-period=180000",
                            "--threshold=5",
                            "--deployment=metrics-server",
                            "--container=metrics-server"
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "MY_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "MY_POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "300Mi"
                            },
                            "requests": {
                                "cpu": "5m",
                                "memory": "30Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "metrics-server-config-volume",
                                "mountPath": "/etc/config"
                            },
                            {
                                "name": "kube-api-access-zgnsr",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsUser": 65532,
                            "runAsNonRoot": true,
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    },
                    {
                        "name": "metrics-server",
                        "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                        "command": [
                            "/metrics-server",
                            "--kubelet-insecure-tls",
                            "--kubelet-preferred-address-types=InternalIP",
                            "--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
                            "--cert-dir=/tmp",
                            "--secure-port=4443"
                        ],
                        "ports": [
                            {
                                "name": "ms-https",
                                "containerPort": 4443,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "KUBERNETES_SERVICE_HOST",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            },
                            {
                                "name": "KUBERNETES_PORT",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP",
                                "value": "tcp://wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io:443"
                            },
                            {
                                "name": "KUBERNETES_PORT_443_TCP_ADDR",
                                "value": "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "45m",
                                "memory": "59Mi"
                            },
                            "requests": {
                                "cpu": "45m",
                                "memory": "59Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "tmp-dir",
                                "mountPath": "/tmp"
                            },
                            {
                                "name": "kube-api-access-zgnsr",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": "ms-https",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 20,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": "ms-https",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 10,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsUser": 65532,
                            "runAsNonRoot": true,
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "metrics-server",
                "serviceAccount": "metrics-server",
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/cluster",
                                            "operator": "Exists"
                                        },
                                        {
                                            "key": "type",
                                            "operator": "NotIn",
                                            "values": [
                                                "virtual-kubelet"
                                            ]
                                        },
                                        {
                                            "key": "kubernetes.io/os",
                                            "operator": "In",
                                            "values": [
                                                "linux"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "preference": {
                                    "matchExpressions": [
                                        {
                                            "key": "kubernetes.azure.com/mode",
                                            "operator": "In",
                                            "values": [
                                                "system"
                                            ]
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 10,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "metrics-server"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "topology.kubernetes.io/zone"
                                }
                            },
                            {
                                "weight": 5,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "metrics-server"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 30
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:19:07Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:20:14Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:20:14Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.244.0.20",
                "podIPs": [
                    {
                        "ip": "10.244.0.20"
                    }
                ],
                "startTime": "2024-10-02T22:18:53Z",
                "containerStatuses": [
                    {
                        "name": "metrics-server",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:19:07Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/metrics-server:v0.6.3",
                        "imageID": "mcr.microsoft.com/oss/kubernetes/metrics-server@sha256:c49553d5b948fcf5b23bed3718c797f42ebe87d7ae5f2c6f537f530b65cadaec",
                        "containerID": "containerd://120656bb157daecf5e97e8ada772dda6dd21bfede0ead913879e5142c0ed46cd",
                        "started": true
                    },
                    {
                        "name": "metrics-server-vpa",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:18:55Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "mcr.microsoft.com/oss/kubernetes/autoscaler/addon-resizer:1.8.22",
                        "imageID": "sha256:64e5b3a566f8463f9eb99d3d47079e9689ef4233eed03c43ed640d319192ee0d",
                        "containerID": "containerd://d4fdc69164a94e255d509955aa4b8b38e287a4f846b80f5685be9af85bd0864d",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container cni-installer of pod kube-system/azure-cns-c455t ====
ts=1727907532.3569703 level=info msg="wrote file" sources=azure-vnet,azure-vnet-telemetry outputs=/opt/cni/bin/azure-vnet,/opt/cni/bin/azure-vnet-telemetry cmd=deploy src=azure-vnet dest=/opt/cni/bin/azure-vnet
ts=1727907532.4401982 level=info msg="wrote file" sources=azure-vnet,azure-vnet-telemetry outputs=/opt/cni/bin/azure-vnet,/opt/cni/bin/azure-vnet-telemetry cmd=deploy src=azure-vnet-telemetry dest=/opt/cni/bin/azure-vnet-telemetry
ts=1727907532.4402237 level=info msg="successfully wrote files" sources=azure-vnet,azure-vnet-telemetry outputs=/opt/cni/bin/azure-vnet,/opt/cni/bin/azure-vnet-telemetry cmd=deploy
==== END logs for container cni-installer of pod kube-system/azure-cns-c455t ====
==== START logs for container cns-container of pod kube-system/azure-cns-c455t ====
2024/10/02 22:18:59 [1] [Configuration] Using config path: /etc/azure-cns/cns_config.json
2024/10/02 22:18:59 [1] GetAzureCloud querying url: http://169.254.169.254/metadata/instance/compute/azEnvironment?api-version=2018-10-01&format=text
2024/10/02 22:18:59 [1] [Utils] Initializing HTTP client with connection timeout: 7, response header timeout: 7
2024/10/02 22:18:59 [1] AI Telemetry Handle created
2024/10/02 22:18:59 [1] [Azure CNS] Using config: &{AZRSettings:{PopulateHomeAzCacheRetryIntervalSecs:60} AsyncPodDeletePath:/var/run/azure-vnet/deleteIDs CNIConflistFilepath:/etc/cni/net.d/15-azure-swift-overlay.conflist CNIConflistScenario:v4overlay ChannelMode:CRD EnableAsyncPodDelete:true EnableCNIConflistGeneration:true EnableIPAMv2:false EnablePprof:false EnableStateMigration:false EnableSubnetScarcity:false EnableSwiftV2:false InitializeFromCNI:true KeyVaultSettings:{URL: CertificateName: RefreshIntervalInHrs:12} MSISettings:{ResourceID:} ManageEndpointState:false ManagedSettings:{PrivateEndpoint: InfrastructureNetworkID: NodeID: NodeSyncIntervalInSeconds:30} MellanoxMonitorIntervalSecs:0 MetricsBindAddress::10092 ProgramSNATIPTables:false SWIFTV2Mode: SyncHostNCTimeoutMs:500 SyncHostNCVersionIntervalMs:1000 TLSCertificatePath: TLSEndpoint: TLSPort: TLSSubjectName: TelemetrySettings:{DisableAll:false DisableTrace:false DisableMetric:false DisableEvent:false TelemetryBatchSizeBytes:16384 TelemetryBatchIntervalInSecs:15 HeartBeatIntervalInMins:30 DisableMetadataRefreshThread:false RefreshIntervalInSecs:15 DebugMode:false SnapshotIntervalInMins:60 AppInsightsInstrumentationKey:} UseHTTPS:false UseMTLS:false WatchPods:false WireserverIP:168.63.129.16}
2024/10/02 22:18:59 [1] [Telemetry] Request metadata from wireserver
2024/10/02 22:18:59 [1] Running on Linux version 5.15.0-1071-azure (buildd@lcy02-amd64-063) (gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0, GNU ld (GNU Binutils for Ubuntu) 2.38) #80-Ubuntu SMP Tue Aug 6 19:27:32 UTC 2024
2024/10/02 22:18:59 [1] [Azure CNS] GetPrimaryInterfaceInfoFromHost
⇨ http server started on [::]:10092
2024/10/02 22:18:59 [1] [Azure CNS] Response received from NMAgent for get interface details: <Interfaces><Interface MacAddress="6045BDD63B7D" IsPrimary="true"><IPSubnet Prefix="10.224.0.0/16"><IPAddress Address="10.224.0.5" IsPrimary="true"/></IPSubnet></Interface></Interfaces>
2024/10/02 22:18:59 [1] [Azure CNS] Initialize HTTPRemoteRestService
2024/10/02 22:18:59 [1] user specifies -c option
2024/10/02 22:18:59 [1] [Azure CNS] restoreState
2024/10/02 22:18:59 [1] [Azure CNS]  No state to restore.
2024/10/02 22:18:59 [1] [Azure CNS] Enter Restoring Network State
2024/10/02 22:18:59 [1] [Azure CNS] Store does not exist, nothing to restore for network state.
2024/10/02 22:18:59 [1] [Utils] Initializing HTTP client with connection timeout: 5, response header timeout: 120
2024/10/02 22:18:59 [1] SetContext details called with:  orchestrator nodeID 
2024/10/02 22:18:59 [1] [Azure CNS]  Listening.
2024/10/02 22:18:59 [1] Writing {} to CNI statefile /var/run/azure-vnet.json
2024/10/02 22:18:59 [1] Acquiring process lock
2024/10/02 22:18:59 [1] Acquired process lock with timeout value of 10s
2024/10/02 22:18:59 [1] Released process lock
2024/10/02 22:19:00 [1] Set GlobalPodInfoScheme 1 (InitializeFromCNI=true)
2024/10/02 22:19:00 [1] [Azure CNS] setOrchestratorType
2024/10/02 22:19:00 [1] SetContext details called with: KubernetesCRD orchestrator nodeID 
2024/10/02 22:19:00 [1] [azure-cns] Sent cns.Response {ReturnCode:Success Message:}.
2024/10/02 22:19:00 [1] Initializing from CNI
2024/10/02 22:19:00 [1] Reconciling initial CNS state
2024/10/02 22:19:00 [1] reconciling initial CNS state attempt: 1
2024/10/02 22:19:00 [1] Retrieved NNC: &{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:aks-agentpool-29385454-vmss000008 GenerateName: Namespace:kube-system SelfLink: UID:1d0fbb97-725d-4c58-b8e8-7d2965412415 ResourceVersion:428956 Generation:1 CreationTimestamp:2024-10-02 22:18:45 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[kubernetes.azure.com/podnetwork-delegationguid: kubernetes.azure.com/podnetwork-subnet: kubernetes.azure.com/podnetwork-type:overlay managed:true owner:aks-agentpool-29385454-vmss000008] Annotations:map[] OwnerReferences:[{APIVersion:v1 Kind:Node Name:aks-agentpool-29385454-vmss000008 UID:f6340ec7-31e7-4ed2-a07b-a69d90a223a8 Controller:0xc00014b9df BlockOwnerDeletion:0xc00014b9de}] Finalizers:[finalizers.acn.azure.com/dnc-operations] ManagedFields:[{Manager:dnc-rc Operation:Update APIVersion:acn.azure.com/v1alpha Time:2024-10-02 22:18:45 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{".":{},"v:\"finalizers.acn.azure.com/dnc-operations\"":{}},"f:labels":{".":{},"f:kubernetes.azure.com/podnetwork-delegationguid":{},"f:kubernetes.azure.com/podnetwork-subnet":{},"f:kubernetes.azure.com/podnetwork-type":{},"f:managed":{},"f:owner":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f6340ec7-31e7-4ed2-a07b-a69d90a223a8\"}":{}}},"f:spec":{".":{},"f:requestedIPCount":{}}} Subresource:} {Manager:dnc-rc Operation:Update APIVersion:acn.azure.com/v1alpha Time:2024-10-02 22:18:46 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:status":{".":{},"f:assignedIPCount":{},"f:networkContainers":{}}} Subresource:status}]} Spec:{RequestedIPCount:0 IPsNotInUse:[]} Status:{AssignedIPCount:256 Scaler:{BatchSize:0 ReleaseThresholdPercent:0 RequestThresholdPercent:0 MaxIPCount:0} Status: NetworkContainers:[{ID:21e9b822-3f81-4efb-859b-29f22a26b883 AssignmentMode:static Type:overlay PrimaryIP:10.244.1.0/24 SubnetName:routingdomain_dfe2f0f8-7278-5fa8-b703-280fe18cfed6_overlaysubnet IPAssignments:[] DefaultGateway: SubnetAddressSpace:10.244.0.0/16 Version:0 NodeIP:10.224.0.5 SubscriptionID: ResourceGroupID: VNETID: SubnetID: Status:}]}}
2024/10/02 22:19:00 [1] Reconciling CNS IPAM state with nc requests: [[CreateNetworkContainerRequest{Version: 0, NetworkContainerType: Docker, NetworkContainerid: 21e9b822-3f81-4efb-859b-29f22a26b883, PrimaryInterfaceIdentifier: , LocalIPConfiguration: {IPSubnet:{IPAddress: PrefixLength:0} DNSServers:[] GatewayIPAddress:}, IPConfiguration: {IPSubnet:{IPAddress:10.244.1.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:}, SecondaryIPConfigs: map[10.244.1.0:{IPAddress:10.244.1.0 NCVersion:0} 10.244.1.1:{IPAddress:10.244.1.1 NCVersion:0} 10.244.1.10:{IPAddress:10.244.1.10 NCVersion:0} 10.244.1.100:{IPAddress:10.244.1.100 NCVersion:0} 10.244.1.101:{IPAddress:10.244.1.101 NCVersion:0} 10.244.1.102:{IPAddress:10.244.1.102 NCVersion:0} 10.244.1.103:{IPAddress:10.244.1.103 NCVersion:0} 10.244.1.104:{IPAddress:10.244.1.104 NCVersion:0} 10.244.1.105:{IPAddress:10.244.1.105 NCVersion:0} 10.244.1.106:{IPAddress:10.244.1.106 NCVersion:0} 10.244.1.107:{IPAddress:10.244.1.107 NCVersion:0} 10.244.1.108:{IPAddress:10.244.1.108 NCVersion:0} 10.244.1.109:{IPAddress:10.244.1.109 NCVersion:0} 10.244.1.11:{IPAddress:10.244.1.11 NCVersion:0} 10.244.1.110:{IPAddress:10.244.1.110 NCVersion:0} 10.244.1.111:{IPAddress:10.244.1.111 NCVersion:0} 10.244.1.112:{IPAddress:10.244.1.112 NCVersion:0} 10.244.1.113:{IPAddress:10.244.1.113 NCVersion:0} 10.244.1.114:{IPAddress:10.244.1.114 NCVersion:0} 10.244.1.115:{IPAddress:10.244.1.115 NCVersion:0} 10.244.1.116:{IPAddress:10.244.1.116 NCVersion:0} 10.244.1.117:{IPAddress:10.244.1.117 NCVersion:0} 10.244.1.118:{IPAddress:10.244.1.118 NCVersion:0} 10.244.1.119:{IPAddress:10.244.1.119 NCVersion:0} 10.244.1.12:{IPAddress:10.244.1.12 NCVersion:0} 10.244.1.120:{IPAddress:10.244.1.120 NCVersion:0} 10.244.1.121:{IPAddress:10.244.1.121 NCVersion:0} 10.244.1.122:{IPAddress:10.244.1.122 NCVersion:0} 10.244.1.123:{IPAddress:10.244.1.123 NCVersion:0} 10.244.1.124:{IPAddress:10.244.1.124 NCVersion:0} 10.244.1.125:{IPAddress:10.244.1.125 NCVersion:0} 10.244.1.126:{IPAddress:10.244.1.126 NCVersion:0} 10.244.1.127:{IPAddress:10.244.1.127 NCVersion:0} 10.244.1.128:{IPAddress:10.244.1.128 NCVersion:0} 10.244.1.129:{IPAddress:10.244.1.129 NCVersion:0} 10.244.1.13:{IPAddress:10.244.1.13 NCVersion:0} 10.244.1.130:{IPAddress:10.244.1.130 NCVersion:0} 10.244.1.131:{IPAddress:10.244.1.131 NCVersion:0} 10.244.1.132:{IPAddress:10.244.1.132 NCVersion:0} 10.244.1.133:{IPAddress:10.244.1.133 NCVersion:0} 10.244.1.134:{IPAddress:10.244.1.134 NCVersion:0} 10.244.1.135:{IPAddress:10.244.1.135 NCVersion:0} 10.244.1.136:{IPAddress:10.244.1.136 NCVersion:0} 10.244.1.137:{IPAddress:10.244.1.137 NCVersion:0} 10.244.1.138:{IPAddress:10.244.1.138 NCVersion:0} 10.244.1.139:{IPAddress:10.244.1.139 NCVersion:0} 10.244.1.14:{IPAddress:10.244.1.14 NCVersion:0} 10.244.1.140:{IPAddress:10.244.1.140 NCVersion:0} 10.244.1.141:{IPAddress:10.244.1.141 NCVersion:0} 10.244.1.142:{IPAddress:10.244.1.142 NCVersion:0} 10.244.1.143:{IPAddress:10.244.1.143 NCVersion:0} 10.244.1.144:{IPAddress:10.244.1.144 NCVersion:0} 10.244.1.145:{IPAddress:10.244.1.145 NCVersion:0} 10.244.1.146:{IPAddress:10.244.1.146 NCVersion:0} 10.244.1.147:{IPAddress:10.244.1.147 NCVersion:0} 10.244.1.148:{IPAddress:10.244.1.148 NCVersion:0} 10.244.1.149:{IPAddress:10.244.1.149 NCVersion:0} 10.244.1.15:{IPAddress:10.244.1.15 NCVersion:0} 10.244.1.150:{IPAddress:10.244.1.150 NCVersion:0} 10.244.1.151:{IPAddress:10.244.1.151 NCVersion:0} 10.244.1.152:{IPAddress:10.244.1.152 NCVersion:0} 10.244.1.153:{IPAddress:10.244.1.153 NCVersion:0} 10.244.1.154:{IPAddress:10.244.1.154 NCVersion:0} 10.244.1.155:{IPAddress:10.244.1.155 NCVersion:0} 10.244.1.156:{IPAddress:10.244.1.156 NCVersion:0} 10.244.1.157:{IPAddress:10.244.1.157 NCVersion:0} 10.244.1.158:{IPAddress:10.244.1.158 NCVersion:0} 10.244.1.159:{IPAddress:10.244.1.159 NCVersion:0} 10.244.1.16:{IPAddress:10.244.1.16 NCVersion:0} 10.244.1.160:{IPAddress:10.244.1.160 NCVersion:0} 10.244.1.161:{IPAddress:10.244.1.161 NCVersion:0} 10.244.1.162:{IPAddress:10.244.1.162 NCVersion:0} 10.244.1.163:{IPAddress:10.244.1.163 NCVersion:0} 10.244.1.164:{IPAddress:10.244.1.164 NCVersion:0} 10.244.1.165:{IPAddress:10.244.1.165 NCVersion:0} 10.244.1.166:{IPAddress:10.244.1.166 NCVersion:0} 10.244.1.167:{IPAddress:10.244.1.167 NCVersion:0} 10.244.1.168:{IPAddress:10.244.1.168 NCVersion:0} 10.244.1.169:{IPAddress:10.244.1.169 NCVersion:0} 10.244.1.17:{IPAddress:10.244.1.17 NCVersion:0} 10.244.1.170:{IPAddress:10.244.1.170 NCVersion:0} 10.244.1.171:{IPAddress:10.244.1.171 NCVersion:0} 10.244.1.172:{IPAddress:10.244.1.172 NCVersion:0} 10.244.1.173:{IPAddress:10.244.1.173 NCVersion:0} 10.244.1.174:{IPAddress:10.244.1.174 NCVersion:0} 10.244.1.175:{IPAddress:10.244.1.175 NCVersion:0} 10.244.1.176:{IPAddress:10.244.1.176 NCVersion:0} 10.244.1.177:{IPAddress:10.244.1.177 NCVersion:0} 10.244.1.178:{IPAddress:10.244.1.178 NCVersion:0} 10.244.1.179:{IPAddress:10.244.1.179 NCVersion:0} 10.244.1.18:{IPAddress:10.244.1.18 NCVersion:0} 10.244.1.180:{IPAddress:10.244.1.180 NCVersion:0} 10.244.1.181:{IPAddress:10.244.1.181 NCVersion:0} 10.244.1.182:{IPAddress:10.244.1.182 NCVersion:0} 10.244.1.183:{IPAddress:10.244.1.183 NCVersion:0} 10.244.1.184:{IPAddress:10.244.1.184 NCVersion:0} 10.244.1.185:{IPAddress:10.244.1.185 NCVersion:0} 10.244.1.186:{IPAddress:10.244.1.186 NCVersion:0} 10.244.1.187:{IPAddress:10.244.1.187 NCVersion:0} 10.244.1.188:{IPAddress:10.244.1.188 NCVersion:0} 10.244.1.189:{IPAddress:10.244.1.189 NCVersion:0} 10.244.1.19:{IPAddress:10.244.1.19 NCVersion:0} 10.244.1.190:{IPAddress:10.244.1.190 NCVersion:0} 10.244.1.191:{IPAddress:10.244.1.191 NCVersion:0} 10.244.1.192:{IPAddress:10.244.1.192 NCVersion:0} 10.244.1.193:{IPAddress:10.244.1.193 NCVersion:0} 10.244.1.194:{IPAddress:10.244.1.194 NCVersion:0} 10.244.1.195:{IPAddress:10.244.1.195 NCVersion:0} 10.244.1.196:{IPAddress:10.244.1.196 NCVersion:0} 10.244.1.197:{IPAddress:10.244.1.197 NCVersion:0} 10.244.1.198:{IPAddress:10.244.1.198 NCVersion:0} 10.244.1.199:{IPAddress:10.244.1.199 NCVersion:0} 10.244.1.2:{IPAddress:10.244.1.2 NCVersion:0} 10.244.1.20:{IPAddress:10.244.1.20 NCVersion:0} 10.244.1.200:{IPAddress:10.244.1.200 NCVersion:0} 10.244.1.201:{IPAddress:10.244.1.201 NCVersion:0} 10.244.1.202:{IPAddress:10.244.1.202 NCVersion:0} 10.244.1.203:{IPAddress:10.244.1.203 NCVersion:0} 10.244.1.204:{IPAddress:10.244.1.204 NCVersion:0} 10.244.1.205:{IPAddress:10.244.1.205 NCVersion:0} 10.244.1.206:{IPAddress:10.244.1.206 NCVersion:0} 10.244.1.207:{IPAddress:10.244.1.207 NCVersion:0} 10.244.1.208:{IPAddress:10.244.1.208 NCVersion:0} 10.244.1.209:{IPAddress:10.244.1.209 NCVersion:0} 10.244.1.21:{IPAddress:10.244.1.21 NCVersion:0} 10.244.1.210:{IPAddress:10.244.1.210 NCVersion:0} 10.244.1.211:{IPAddress:10.244.1.211 NCVersion:0} 10.244.1.212:{IPAddress:10.244.1.212 NCVersion:0} 10.244.1.213:{IPAddress:10.244.1.213 NCVersion:0} 10.244.1.214:{IPAddress:10.244.1.214 NCVersion:0} 10.244.1.215:{IPAddress:10.244.1.215 NCVersion:0} 10.244.1.216:{IPAddress:10.244.1.216 NCVersion:0} 10.244.1.217:{IPAddress:10.244.1.217 NCVersion:0} 10.244.1.218:{IPAddress:10.244.1.218 NCVersion:0} 10.244.1.219:{IPAddress:10.244.1.219 NCVersion:0} 10.244.1.22:{IPAddress:10.244.1.22 NCVersion:0} 10.244.1.220:{IPAddress:10.244.1.220 NCVersion:0} 10.244.1.221:{IPAddress:10.244.1.221 NCVersion:0} 10.244.1.222:{IPAddress:10.244.1.222 NCVersion:0} 10.244.1.223:{IPAddress:10.244.1.223 NCVersion:0} 10.244.1.224:{IPAddress:10.244.1.224 NCVersion:0} 10.244.1.225:{IPAddress:10.244.1.225 NCVersion:0} 10.244.1.226:{IPAddress:10.244.1.226 NCVersion:0} 10.244.1.227:{IPAddress:10.244.1.227 NCVersion:0} 10.244.1.228:{IPAddress:10.244.1.228 NCVersion:0} 10.244.1.229:{IPAddress:10.244.1.229 NCVersion:0} 10.244.1.23:{IPAddress:10.244.1.23 NCVersion:0} 10.244.1.230:{IPAddress:10.244.1.230 NCVersion:0} 10.244.1.231:{IPAddress:10.244.1.231 NCVersion:0} 10.244.1.232:{IPAddress:10.244.1.232 NCVersion:0} 10.244.1.233:{IPAddress:10.244.1.233 NCVersion:0} 10.244.1.234:{IPAddress:10.244.1.234 NCVersion:0} 10.244.1.235:{IPAddress:10.244.1.235 NCVersion:0} 10.244.1.236:{IPAddress:10.244.1.236 NCVersion:0} 10.244.1.237:{IPAddress:10.244.1.237 NCVersion:0} 10.244.1.238:{IPAddress:10.244.1.238 NCVersion:0} 10.244.1.239:{IPAddress:10.244.1.239 NCVersion:0} 10.244.1.24:{IPAddress:10.244.1.24 NCVersion:0} 10.244.1.240:{IPAddress:10.244.1.240 NCVersion:0} 10.244.1.241:{IPAddress:10.244.1.241 NCVersion:0} 10.244.1.242:{IPAddress:10.244.1.242 NCVersion:0} 10.244.1.243:{IPAddress:10.244.1.243 NCVersion:0} 10.244.1.244:{IPAddress:10.244.1.244 NCVersion:0} 10.244.1.245:{IPAddress:10.244.1.245 NCVersion:0} 10.244.1.246:{IPAddress:10.244.1.246 NCVersion:0} 10.244.1.247:{IPAddress:10.244.1.247 NCVersion:0} 10.244.1.248:{IPAddress:10.244.1.248 NCVersion:0} 10.244.1.249:{IPAddress:10.244.1.249 NCVersion:0} 10.244.1.25:{IPAddress:10.244.1.25 NCVersion:0} 10.244.1.250:{IPAddress:10.244.1.250 NCVersion:0} 10.244.1.251:{IPAddress:10.244.1.251 NCVersion:0} 10.244.1.252:{IPAddress:10.244.1.252 NCVersion:0} 10.244.1.253:{IPAddress:10.244.1.253 NCVersion:0} 10.244.1.254:{IPAddress:10.244.1.254 NCVersion:0} 10.244.1.255:{IPAddress:10.244.1.255 NCVersion:0} 10.244.1.26:{IPAddress:10.244.1.26 NCVersion:0} 10.244.1.27:{IPAddress:10.244.1.27 NCVersion:0} 10.244.1.28:{IPAddress:10.244.1.28 NCVersion:0} 10.244.1.29:{IPAddress:10.244.1.29 NCVersion:0} 10.244.1.3:{IPAddress:10.244.1.3 NCVersion:0} 10.244.1.30:{IPAddress:10.244.1.30 NCVersion:0} 10.244.1.31:{IPAddress:10.244.1.31 NCVersion:0} 10.244.1.32:{IPAddress:10.244.1.32 NCVersion:0} 10.244.1.33:{IPAddress:10.244.1.33 NCVersion:0} 10.244.1.34:{IPAddress:10.244.1.34 NCVersion:0} 10.244.1.35:{IPAddress:10.244.1.35 NCVersion:0} 10.244.1.36:{IPAddress:10.244.1.36 NCVersion:0} 10.244.1.37:{IPAddress:10.244.1.37 NCVersion:0} 10.244.1.38:{IPAddress:10.244.1.38 NCVersion:0} 10.244.1.39:{IPAddress:10.244.1.39 NCVersion:0} 10.244.1.4:{IPAddress:10.244.1.4 NCVersion:0} 10.244.1.40:{IPAddress:10.244.1.40 NCVersion:0} 10.244.1.41:{IPAddress:10.244.1.41 NCVersion:0} 10.244.1.42:{IPAddress:10.244.1.42 NCVersion:0} 10.244.1.43:{IPAddress:10.244.1.43 NCVersion:0} 10.244.1.44:{IPAddress:10.244.1.44 NCVersion:0} 10.244.1.45:{IPAddress:10.244.1.45 NCVersion:0} 10.244.1.46:{IPAddress:10.244.1.46 NCVersion:0} 10.244.1.47:{IPAddress:10.244.1.47 NCVersion:0} 10.244.1.48:{IPAddress:10.244.1.48 NCVersion:0} 10.244.1.49:{IPAddress:10.244.1.49 NCVersion:0} 10.244.1.5:{IPAddress:10.244.1.5 NCVersion:0} 10.244.1.50:{IPAddress:10.244.1.50 NCVersion:0} 10.244.1.51:{IPAddress:10.244.1.51 NCVersion:0} 10.244.1.52:{IPAddress:10.244.1.52 NCVersion:0} 10.244.1.53:{IPAddress:10.244.1.53 NCVersion:0} 10.244.1.54:{IPAddress:10.244.1.54 NCVersion:0} 10.244.1.55:{IPAddress:10.244.1.55 NCVersion:0} 10.244.1.56:{IPAddress:10.244.1.56 NCVersion:0} 10.244.1.57:{IPAddress:10.244.1.57 NCVersion:0} 10.244.1.58:{IPAddress:10.244.1.58 NCVersion:0} 10.244.1.59:{IPAddress:10.244.1.59 NCVersion:0} 10.244.1.6:{IPAddress:10.244.1.6 NCVersion:0} 10.244.1.60:{IPAddress:10.244.1.60 NCVersion:0} 10.244.1.61:{IPAddress:10.244.1.61 NCVersion:0} 10.244.1.62:{IPAddress:10.244.1.62 NCVersion:0} 10.244.1.63:{IPAddress:10.244.1.63 NCVersion:0} 10.244.1.64:{IPAddress:10.244.1.64 NCVersion:0} 10.244.1.65:{IPAddress:10.244.1.65 NCVersion:0} 10.244.1.66:{IPAddress:10.244.1.66 NCVersion:0} 10.244.1.67:{IPAddress:10.244.1.67 NCVersion:0} 10.244.1.68:{IPAddress:10.244.1.68 NCVersion:0} 10.244.1.69:{IPAddress:10.244.1.69 NCVersion:0} 10.244.1.7:{IPAddress:10.244.1.7 NCVersion:0} 10.244.1.70:{IPAddress:10.244.1.70 NCVersion:0} 10.244.1.71:{IPAddress:10.244.1.71 NCVersion:0} 10.244.1.72:{IPAddress:10.244.1.72 NCVersion:0} 10.244.1.73:{IPAddress:10.244.1.73 NCVersion:0} 10.244.1.74:{IPAddress:10.244.1.74 NCVersion:0} 10.244.1.75:{IPAddress:10.244.1.75 NCVersion:0} 10.244.1.76:{IPAddress:10.244.1.76 NCVersion:0} 10.244.1.77:{IPAddress:10.244.1.77 NCVersion:0} 10.244.1.78:{IPAddress:10.244.1.78 NCVersion:0} 10.244.1.79:{IPAddress:10.244.1.79 NCVersion:0} 10.244.1.8:{IPAddress:10.244.1.8 NCVersion:0} 10.244.1.80:{IPAddress:10.244.1.80 NCVersion:0} 10.244.1.81:{IPAddress:10.244.1.81 NCVersion:0} 10.244.1.82:{IPAddress:10.244.1.82 NCVersion:0} 10.244.1.83:{IPAddress:10.244.1.83 NCVersion:0} 10.244.1.84:{IPAddress:10.244.1.84 NCVersion:0} 10.244.1.85:{IPAddress:10.244.1.85 NCVersion:0} 10.244.1.86:{IPAddress:10.244.1.86 NCVersion:0} 10.244.1.87:{IPAddress:10.244.1.87 NCVersion:0} 10.244.1.88:{IPAddress:10.244.1.88 NCVersion:0} 10.244.1.89:{IPAddress:10.244.1.89 NCVersion:0} 10.244.1.9:{IPAddress:10.244.1.9 NCVersion:0} 10.244.1.90:{IPAddress:10.244.1.90 NCVersion:0} 10.244.1.91:{IPAddress:10.244.1.91 NCVersion:0} 10.244.1.92:{IPAddress:10.244.1.92 NCVersion:0} 10.244.1.93:{IPAddress:10.244.1.93 NCVersion:0} 10.244.1.94:{IPAddress:10.244.1.94 NCVersion:0} 10.244.1.95:{IPAddress:10.244.1.95 NCVersion:0} 10.244.1.96:{IPAddress:10.244.1.96 NCVersion:0} 10.244.1.97:{IPAddress:10.244.1.97 NCVersion:0} 10.244.1.98:{IPAddress:10.244.1.98 NCVersion:0} 10.244.1.99:{IPAddress:10.244.1.99 NCVersion:0}], MultitenancyInfo: {EncapType: ID:0}, AllowHostToNCCommunication: false, AllowNCToHostCommunication: false, NCStatus: , NetworkInterfaceInfo: {NICType: MACAddress:}}]], PodInfo [map[]], NNC: [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:aks-agentpool-29385454-vmss000008 GenerateName: Namespace:kube-system SelfLink: UID:1d0fbb97-725d-4c58-b8e8-7d2965412415 ResourceVersion:428956 Generation:1 CreationTimestamp:2024-10-02 22:18:45 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[kubernetes.azure.com/podnetwork-delegationguid: kubernetes.azure.com/podnetwork-subnet: kubernetes.azure.com/podnetwork-type:overlay managed:true owner:aks-agentpool-29385454-vmss000008] Annotations:map[] OwnerReferences:[{APIVersion:v1 Kind:Node Name:aks-agentpool-29385454-vmss000008 UID:f6340ec7-31e7-4ed2-a07b-a69d90a223a8 Controller:0xc00014b9df BlockOwnerDeletion:0xc00014b9de}] Finalizers:[finalizers.acn.azure.com/dnc-operations] ManagedFields:[{Manager:dnc-rc Operation:Update APIVersion:acn.azure.com/v1alpha Time:2024-10-02 22:18:45 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{".":{},"v:\"finalizers.acn.azure.com/dnc-operations\"":{}},"f:labels":{".":{},"f:kubernetes.azure.com/podnetwork-delegationguid":{},"f:kubernetes.azure.com/podnetwork-subnet":{},"f:kubernetes.azure.com/podnetwork-type":{},"f:managed":{},"f:owner":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"f6340ec7-31e7-4ed2-a07b-a69d90a223a8\"}":{}}},"f:spec":{".":{},"f:requestedIPCount":{}}} Subresource:} {Manager:dnc-rc Operation:Update APIVersion:acn.azure.com/v1alpha Time:2024-10-02 22:18:46 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:status":{".":{},"f:assignedIPCount":{},"f:networkContainers":{}}} Subresource:status}]} Spec:{RequestedIPCount:0 IPsNotInUse:[]} Status:{AssignedIPCount:256 Scaler:{BatchSize:0 ReleaseThresholdPercent:0 RequestThresholdPercent:0 MaxIPCount:0} Status: NetworkContainers:[{ID:21e9b822-3f81-4efb-859b-29f22a26b883 AssignmentMode:static Type:overlay PrimaryIP:10.244.1.0/24 SubnetName:routingdomain_dfe2f0f8-7278-5fa8-b703-280fe18cfed6_overlaysubnet IPAssignments:[] DefaultGateway: SubnetAddressSpace:10.244.0.0/16 Version:0 NodeIP:10.224.0.5 SubscriptionID: ResourceGroupID: VNETID: SubnetID: Status:}]}}]
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.37, IP 10.244.1.37 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.37 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.93, IP 10.244.1.93 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.93 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.101, IP 10.244.1.101 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.101 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.130, IP 10.244.1.130 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.130 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.227, IP 10.244.1.227 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.227 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.2, IP 10.244.1.2 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.2 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.56, IP 10.244.1.56 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.56 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.83, IP 10.244.1.83 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.83 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.213, IP 10.244.1.213 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.213 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.44, IP 10.244.1.44 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.44 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.176, IP 10.244.1.176 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.176 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.197, IP 10.244.1.197 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.197 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.154, IP 10.244.1.154 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.154 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.180, IP 10.244.1.180 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.180 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.251, IP 10.244.1.251 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.251 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.158, IP 10.244.1.158 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.158 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.59, IP 10.244.1.59 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.59 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.113, IP 10.244.1.113 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.113 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.157, IP 10.244.1.157 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.157 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.249, IP 10.244.1.249 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.249 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.21, IP 10.244.1.21 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.21 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.5, IP 10.244.1.5 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.5 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.36, IP 10.244.1.36 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.36 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.248, IP 10.244.1.248 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.248 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.252, IP 10.244.1.252 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.252 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.4, IP 10.244.1.4 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.4 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.43, IP 10.244.1.43 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.43 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.69, IP 10.244.1.69 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.69 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.108, IP 10.244.1.108 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.108 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.141, IP 10.244.1.141 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.141 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.147, IP 10.244.1.147 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.147 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.174, IP 10.244.1.174 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.174 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.198, IP 10.244.1.198 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.198 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.8, IP 10.244.1.8 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.8 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.222, IP 10.244.1.222 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.222 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.38, IP 10.244.1.38 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.38 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.39, IP 10.244.1.39 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.39 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.218, IP 10.244.1.218 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.218 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.31, IP 10.244.1.31 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.31 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.111, IP 10.244.1.111 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.111 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.145, IP 10.244.1.145 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.145 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.196, IP 10.244.1.196 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.196 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.229, IP 10.244.1.229 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.229 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.45, IP 10.244.1.45 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.45 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.54, IP 10.244.1.54 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.54 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.68, IP 10.244.1.68 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.68 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.134, IP 10.244.1.134 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.134 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.152, IP 10.244.1.152 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.152 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.165, IP 10.244.1.165 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.165 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.184, IP 10.244.1.184 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.184 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.245, IP 10.244.1.245 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.245 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.19, IP 10.244.1.19 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.19 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.76, IP 10.244.1.76 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.76 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.189, IP 10.244.1.189 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.189 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.41, IP 10.244.1.41 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.41 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.171, IP 10.244.1.171 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.171 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.214, IP 10.244.1.214 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.214 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.142, IP 10.244.1.142 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.142 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.79, IP 10.244.1.79 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.79 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.87, IP 10.244.1.87 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.87 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.109, IP 10.244.1.109 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.109 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.117, IP 10.244.1.117 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.117 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.124, IP 10.244.1.124 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.124 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.143, IP 10.244.1.143 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.143 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.148, IP 10.244.1.148 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.148 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.75, IP 10.244.1.75 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.75 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.230, IP 10.244.1.230 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.230 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.164, IP 10.244.1.164 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.164 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.42, IP 10.244.1.42 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.42 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.191, IP 10.244.1.191 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.191 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.232, IP 10.244.1.232 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.232 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.247, IP 10.244.1.247 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.247 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.25, IP 10.244.1.25 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.25 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.80, IP 10.244.1.80 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.80 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.199, IP 10.244.1.199 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.199 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.6, IP 10.244.1.6 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.6 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.140, IP 10.244.1.140 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.140 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.146, IP 10.244.1.146 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.146 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.200, IP 10.244.1.200 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.200 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.208, IP 10.244.1.208 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.208 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.220, IP 10.244.1.220 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.220 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.24, IP 10.244.1.24 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.24 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.228, IP 10.244.1.228 version to 0, programmed host nc version is -1
2024/10/02 22:19:00 [1] [Azure-Cns] Add IP 10.244.1.228 as PendingProgramming
2024/10/02 22:19:00 [1] [Azure-Cns] Set ipId 10.244.1.231, IP 10.244.1.231 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.231 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.209, IP 10.244.1.209 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.209 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.105, IP 10.244.1.105 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.105 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.166, IP 10.244.1.166 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.166 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.250, IP 10.244.1.250 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.250 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.17, IP 10.244.1.17 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.17 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.88, IP 10.244.1.88 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.88 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.122, IP 10.244.1.122 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.122 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.181, IP 10.244.1.181 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.181 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.18, IP 10.244.1.18 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.18 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.81, IP 10.244.1.81 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.81 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.90, IP 10.244.1.90 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.90 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.114, IP 10.244.1.114 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.114 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.173, IP 10.244.1.173 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.173 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.188, IP 10.244.1.188 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.188 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.255, IP 10.244.1.255 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.255 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.52, IP 10.244.1.52 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.52 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.13, IP 10.244.1.13 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.13 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.115, IP 10.244.1.115 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.115 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.9, IP 10.244.1.9 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.9 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.67, IP 10.244.1.67 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.67 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.86, IP 10.244.1.86 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.86 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.103, IP 10.244.1.103 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.103 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.127, IP 10.244.1.127 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.127 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.211, IP 10.244.1.211 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.211 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.243, IP 10.244.1.243 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.243 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.23, IP 10.244.1.23 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.23 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.150, IP 10.244.1.150 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.150 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.7, IP 10.244.1.7 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.7 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.92, IP 10.244.1.92 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.92 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.135, IP 10.244.1.135 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.135 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.138, IP 10.244.1.138 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.138 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.194, IP 10.244.1.194 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.194 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.254, IP 10.244.1.254 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.254 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.11, IP 10.244.1.11 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.11 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.137, IP 10.244.1.137 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.137 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.26, IP 10.244.1.26 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.26 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.240, IP 10.244.1.240 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.240 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.82, IP 10.244.1.82 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.82 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.236, IP 10.244.1.236 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.236 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.162, IP 10.244.1.162 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.162 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.55, IP 10.244.1.55 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.55 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.77, IP 10.244.1.77 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.77 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.91, IP 10.244.1.91 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.91 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.29, IP 10.244.1.29 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.29 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.50, IP 10.244.1.50 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.50 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.74, IP 10.244.1.74 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.74 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.139, IP 10.244.1.139 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.139 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.186, IP 10.244.1.186 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.186 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.27, IP 10.244.1.27 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.27 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.89, IP 10.244.1.89 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.89 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.170, IP 10.244.1.170 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.170 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.72, IP 10.244.1.72 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.72 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.203, IP 10.244.1.203 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.203 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.224, IP 10.244.1.224 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.224 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.120, IP 10.244.1.120 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.120 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.177, IP 10.244.1.177 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.177 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.179, IP 10.244.1.179 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.179 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.112, IP 10.244.1.112 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.112 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.47, IP 10.244.1.47 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.47 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.61, IP 10.244.1.61 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.61 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.65, IP 10.244.1.65 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.65 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.185, IP 10.244.1.185 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.185 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.225, IP 10.244.1.225 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.225 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.40, IP 10.244.1.40 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.40 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.100, IP 10.244.1.100 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.100 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.121, IP 10.244.1.121 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.121 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.160, IP 10.244.1.160 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.160 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.175, IP 10.244.1.175 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.175 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.48, IP 10.244.1.48 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.48 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.53, IP 10.244.1.53 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.53 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.64, IP 10.244.1.64 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.64 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.223, IP 10.244.1.223 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.223 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.239, IP 10.244.1.239 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.239 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.253, IP 10.244.1.253 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.253 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.15, IP 10.244.1.15 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.15 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.3, IP 10.244.1.3 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.3 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.62, IP 10.244.1.62 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.62 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.204, IP 10.244.1.204 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.204 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.1, IP 10.244.1.1 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.1 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.33, IP 10.244.1.33 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.33 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.172, IP 10.244.1.172 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.172 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.182, IP 10.244.1.182 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.182 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.192, IP 10.244.1.192 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.192 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.12, IP 10.244.1.12 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.12 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.78, IP 10.244.1.78 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.78 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.106, IP 10.244.1.106 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.106 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.153, IP 10.244.1.153 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.153 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.212, IP 10.244.1.212 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.212 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.73, IP 10.244.1.73 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.73 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.178, IP 10.244.1.178 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.178 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.201, IP 10.244.1.201 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.201 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.217, IP 10.244.1.217 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.217 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.233, IP 10.244.1.233 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.233 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.58, IP 10.244.1.58 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.58 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.95, IP 10.244.1.95 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.95 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.99, IP 10.244.1.99 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.99 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.206, IP 10.244.1.206 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.206 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.215, IP 10.244.1.215 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.215 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.71, IP 10.244.1.71 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.71 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.195, IP 10.244.1.195 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.195 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.219, IP 10.244.1.219 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.219 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.94, IP 10.244.1.94 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.94 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.167, IP 10.244.1.167 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.167 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.238, IP 10.244.1.238 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.238 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.110, IP 10.244.1.110 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.110 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.46, IP 10.244.1.46 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.46 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.51, IP 10.244.1.51 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.51 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.119, IP 10.244.1.119 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.119 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.128, IP 10.244.1.128 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.128 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.129, IP 10.244.1.129 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.129 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.144, IP 10.244.1.144 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.144 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.226, IP 10.244.1.226 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.226 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.32, IP 10.244.1.32 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.32 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.133, IP 10.244.1.133 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.133 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.159, IP 10.244.1.159 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.159 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.202, IP 10.244.1.202 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.202 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.216, IP 10.244.1.216 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.216 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.125, IP 10.244.1.125 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.125 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.85, IP 10.244.1.85 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.85 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.97, IP 10.244.1.97 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.97 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.98, IP 10.244.1.98 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.98 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.235, IP 10.244.1.235 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.235 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.57, IP 10.244.1.57 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.57 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.14, IP 10.244.1.14 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.14 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.20, IP 10.244.1.20 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.20 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.35, IP 10.244.1.35 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.35 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.66, IP 10.244.1.66 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.66 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.84, IP 10.244.1.84 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.84 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.161, IP 10.244.1.161 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.161 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.187, IP 10.244.1.187 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.187 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.0, IP 10.244.1.0 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.0 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.221, IP 10.244.1.221 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.221 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.190, IP 10.244.1.190 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.190 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.116, IP 10.244.1.116 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.116 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.205, IP 10.244.1.205 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.205 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.237, IP 10.244.1.237 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.237 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.242, IP 10.244.1.242 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.242 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.10, IP 10.244.1.10 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.10 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.241, IP 10.244.1.241 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.241 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.126, IP 10.244.1.126 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.126 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.132, IP 10.244.1.132 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.132 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.149, IP 10.244.1.149 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.149 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.156, IP 10.244.1.156 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.156 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.163, IP 10.244.1.163 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.163 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.207, IP 10.244.1.207 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.207 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.244, IP 10.244.1.244 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.244 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.131, IP 10.244.1.131 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.131 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.168, IP 10.244.1.168 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.168 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.96, IP 10.244.1.96 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.96 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.136, IP 10.244.1.136 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.136 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.70, IP 10.244.1.70 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.70 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.30, IP 10.244.1.30 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.30 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.104, IP 10.244.1.104 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.104 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.107, IP 10.244.1.107 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.107 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.193, IP 10.244.1.193 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.193 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.49, IP 10.244.1.49 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.49 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.28, IP 10.244.1.28 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.28 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.169, IP 10.244.1.169 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.169 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.234, IP 10.244.1.234 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.234 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.22, IP 10.244.1.22 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.22 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.34, IP 10.244.1.34 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.34 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.118, IP 10.244.1.118 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.118 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.16, IP 10.244.1.16 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.16 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.102, IP 10.244.1.102 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.102 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.210, IP 10.244.1.210 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.210 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.60, IP 10.244.1.60 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.60 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.123, IP 10.244.1.123 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.123 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.151, IP 10.244.1.151 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.151 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.155, IP 10.244.1.155 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.155 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.246, IP 10.244.1.246 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.246 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.63, IP 10.244.1.63 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.63 as PendingProgramming
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.183, IP 10.244.1.183 version to 0, programmed host nc version is -1
2024/10/02 22:19:01 [1] [Azure-Cns] Add IP 10.244.1.183 as PendingProgramming
2024/10/02 22:19:01 [1] [IP Usage] Allocated IPs: 256, Assigned IPs: 0, Available IPs: 0, PendingProgramming IPs: 256, PendingRelease IPs: 0
2024/10/02 22:19:01 [1] reconciled initial CNS state after 1 attempts
2024/10/02 22:19:01 [1] initialized and started IPAM pool monitor
2024/10/02 22:19:01 [1] Initialized controller-manager.
2024/10/02 22:19:01 [1] Starting controller-manager.
2024/10/02 22:19:01 [1] Starting IPAM Pool Monitor
2024/10/02 22:19:01 [1] [ipam-pool-monitor] Starting CNS IPAM Pool Monitor
2024/10/02 22:19:01 [1] Waiting for NodeNetworkConfig reconciler to start.
{"level":"info","ts":"2024-10-02T22:19:01Z","msg":"Starting EventSource","controller":"nodenetworkconfig","controllerGroup":"acn.azure.com","controllerKind":"NodeNetworkConfig","source":"kind source: *v1alpha.NodeNetworkConfig"}
{"level":"info","ts":"2024-10-02T22:19:01Z","msg":"Starting Controller","controller":"nodenetworkconfig","controllerGroup":"acn.azure.com","controllerKind":"NodeNetworkConfig"}
{"level":"info","ts":"2024-10-02T22:19:01Z","msg":"Starting workers","controller":"nodenetworkconfig","controllerGroup":"acn.azure.com","controllerKind":"NodeNetworkConfig","worker count":1}
2024/10/02 22:19:01 [1] [cns-rc] CRD Spec: {RequestedIPCount:0 IPsNotInUse:[]}
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.204, IP 10.244.1.204 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.204], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.204], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.252, IP 10.244.1.252 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.252], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.252], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.37, IP 10.244.1.37 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.37], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.37], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.174, IP 10.244.1.174 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.174], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.174], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.77, IP 10.244.1.77 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.77], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.77], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.150, IP 10.244.1.150 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.150], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.150], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.70, IP 10.244.1.70 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.70], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.70], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.72, IP 10.244.1.72 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.72], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.72], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.157, IP 10.244.1.157 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.157], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.157], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.218, IP 10.244.1.218 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.218], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.218], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.20, IP 10.244.1.20 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.20], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.20], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.38, IP 10.244.1.38 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.38], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.38], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.118, IP 10.244.1.118 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.118], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.118], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.191, IP 10.244.1.191 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.191], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.191], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.236, IP 10.244.1.236 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.236], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.236], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.239, IP 10.244.1.239 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.239], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.239], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.18, IP 10.244.1.18 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.18], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.18], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.84, IP 10.244.1.84 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.84], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.84], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.131, IP 10.244.1.131 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.131], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.131], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.67, IP 10.244.1.67 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.67], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.67], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.116, IP 10.244.1.116 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.116], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.116], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.195, IP 10.244.1.195 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.195], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.195], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.232, IP 10.244.1.232 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.232], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.232], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.41, IP 10.244.1.41 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.41], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.41], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.179, IP 10.244.1.179 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.179], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.179], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.181, IP 10.244.1.181 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.181], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.181], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.190, IP 10.244.1.190 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.190], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.190], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.39, IP 10.244.1.39 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.39], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.39], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.156, IP 10.244.1.156 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.156], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.156], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.145, IP 10.244.1.145 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.145], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.145], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.152, IP 10.244.1.152 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.152], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.152], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.58, IP 10.244.1.58 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.58], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.58], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.141, IP 10.244.1.141 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.141], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.141], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.55, IP 10.244.1.55 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.55], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.55], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.94, IP 10.244.1.94 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.94], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.94], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.121, IP 10.244.1.121 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.121], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.121], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.135, IP 10.244.1.135 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.135], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.135], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.177, IP 10.244.1.177 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.177], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.177], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.185, IP 10.244.1.185 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.185], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.185], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.192, IP 10.244.1.192 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.192], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.192], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.202, IP 10.244.1.202 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.202], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.202], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.54, IP 10.244.1.54 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.54], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.54], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.60, IP 10.244.1.60 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.60], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.60], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.68, IP 10.244.1.68 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.68], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.68], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.143, IP 10.244.1.143 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.143], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.143], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.171, IP 10.244.1.171 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.171], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.171], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.243, IP 10.244.1.243 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.243], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.243], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.5, IP 10.244.1.5 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.5], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.5], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.21, IP 10.244.1.21 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.21], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.21], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.101, IP 10.244.1.101 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.101], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.101], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.161, IP 10.244.1.161 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.161], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.161], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.183, IP 10.244.1.183 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.183], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.183], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.184, IP 10.244.1.184 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.184], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.184], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.49, IP 10.244.1.49 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.49], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.49], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.81, IP 10.244.1.81 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.81], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.81], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.140, IP 10.244.1.140 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.140], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.140], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.196, IP 10.244.1.196 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.196], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.196], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.233, IP 10.244.1.233 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.233], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.233], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.14, IP 10.244.1.14 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.14], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.14], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.40, IP 10.244.1.40 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.40], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.40], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.199, IP 10.244.1.199 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.199], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.199], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.205, IP 10.244.1.205 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.205], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.205], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.10, IP 10.244.1.10 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.10], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.10], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.132, IP 10.244.1.132 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.132], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.132], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.137, IP 10.244.1.137 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.137], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.137], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.186, IP 10.244.1.186 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.186], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.186], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.226, IP 10.244.1.226 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.226], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.226], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.126, IP 10.244.1.126 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.126], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.126], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.197, IP 10.244.1.197 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.197], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.197], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.194, IP 10.244.1.194 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.194], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.194], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.13, IP 10.244.1.13 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.13], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.13], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.136, IP 10.244.1.136 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.136], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.136], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.113, IP 10.244.1.113 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.113], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.113], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.193, IP 10.244.1.193 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.193], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.193], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.238, IP 10.244.1.238 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.238], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.238], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.7, IP 10.244.1.7 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.7], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.7], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.119, IP 10.244.1.119 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.119], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.119], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.164, IP 10.244.1.164 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.164], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.164], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.89, IP 10.244.1.89 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.89], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.89], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.139, IP 10.244.1.139 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.139], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.139], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.100, IP 10.244.1.100 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.100], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.100], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.109, IP 10.244.1.109 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.109], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.109], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.16, IP 10.244.1.16 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.16], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.16], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.69, IP 10.244.1.69 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.69], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.69], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.115, IP 10.244.1.115 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.115], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.115], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.241, IP 10.244.1.241 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.241], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.241], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.246, IP 10.244.1.246 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.246], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.246], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.93, IP 10.244.1.93 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.93], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.93], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.215, IP 10.244.1.215 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.215], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.215], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.104, IP 10.244.1.104 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.104], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.104], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.32, IP 10.244.1.32 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.32], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.32], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.96, IP 10.244.1.96 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.96], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.96], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.188, IP 10.244.1.188 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.188], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.188], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.225, IP 10.244.1.225 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.225], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.225], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.8, IP 10.244.1.8 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.8], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.8], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.63, IP 10.244.1.63 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.63], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.63], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.102, IP 10.244.1.102 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.102], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.102], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.103, IP 10.244.1.103 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.103], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.103], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.128, IP 10.244.1.128 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.128], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.128], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.206, IP 10.244.1.206 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.206], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.206], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.15, IP 10.244.1.15 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.15], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.15], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.83, IP 10.244.1.83 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.83], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.83], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.217, IP 10.244.1.217 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.217], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.217], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.222, IP 10.244.1.222 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.222], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.222], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.228, IP 10.244.1.228 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.228], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.228], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.87, IP 10.244.1.87 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.87], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.87], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.198, IP 10.244.1.198 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.198], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.198], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.134, IP 10.244.1.134 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.134], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.134], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.138, IP 10.244.1.138 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.138], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.138], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.201, IP 10.244.1.201 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.201], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.201], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.107, IP 10.244.1.107 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.107], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.107], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.165, IP 10.244.1.165 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.165], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.165], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.99, IP 10.244.1.99 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.99], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.99], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.229, IP 10.244.1.229 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.229], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.229], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.17, IP 10.244.1.17 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.17], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.17], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.31, IP 10.244.1.31 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.31], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.31], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.79, IP 10.244.1.79 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.79], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.79], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.120, IP 10.244.1.120 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.120], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.120], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.163, IP 10.244.1.163 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.163], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.163], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.6, IP 10.244.1.6 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.6], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.6], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.44, IP 10.244.1.44 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.44], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.44], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.61, IP 10.244.1.61 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.61], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.61], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.88, IP 10.244.1.88 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.88], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.88], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.176, IP 10.244.1.176 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.176], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.176], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.234, IP 10.244.1.234 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.234], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.234], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.248, IP 10.244.1.248 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.248], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.248], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.253, IP 10.244.1.253 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.253], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.253], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.23, IP 10.244.1.23 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.23], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.23], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.33, IP 10.244.1.33 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.33], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.33], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.114, IP 10.244.1.114 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.114], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.114], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.144, IP 10.244.1.144 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.144], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.144], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.166, IP 10.244.1.166 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.166], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.166], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.180, IP 10.244.1.180 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.180], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.180], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.240, IP 10.244.1.240 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.240], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.240], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.97, IP 10.244.1.97 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.97], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.97], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.149, IP 10.244.1.149 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.149], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.149], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.182, IP 10.244.1.182 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.182], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.182], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.213, IP 10.244.1.213 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.213], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.213], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.219, IP 10.244.1.219 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.219], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.219], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.26, IP 10.244.1.26 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.26], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.26], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.158, IP 10.244.1.158 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.158], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.158], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.123, IP 10.244.1.123 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.123], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.123], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.129, IP 10.244.1.129 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.129], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.129], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.172, IP 10.244.1.172 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.172], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.172], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.242, IP 10.244.1.242 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.242], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.242], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.2, IP 10.244.1.2 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.2], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.2], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.82, IP 10.244.1.82 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.82], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.82], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.209, IP 10.244.1.209 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.209], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.209], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.216, IP 10.244.1.216 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.216], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.216], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.148, IP 10.244.1.148 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.148], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.148], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.167, IP 10.244.1.167 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.167], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.167], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.111, IP 10.244.1.111 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.111], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.111], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.173, IP 10.244.1.173 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.173], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.173], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.231, IP 10.244.1.231 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.231], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.231], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.45, IP 10.244.1.45 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.45], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.45], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.52, IP 10.244.1.52 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.52], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.52], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.124, IP 10.244.1.124 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.124], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.124], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.255, IP 10.244.1.255 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.255], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.255], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.46, IP 10.244.1.46 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.46], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.46], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.175, IP 10.244.1.175 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.175], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.175], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.108, IP 10.244.1.108 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.108], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.108], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.220, IP 10.244.1.220 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.220], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.220], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.227, IP 10.244.1.227 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.227], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.227], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.74, IP 10.244.1.74 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.74], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.74], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.90, IP 10.244.1.90 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.90], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.90], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.59, IP 10.244.1.59 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.59], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.59], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.208, IP 10.244.1.208 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.208], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.208], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.245, IP 10.244.1.245 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.245], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.245], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.71, IP 10.244.1.71 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.71], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.71], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.92, IP 10.244.1.92 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.92], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.92], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.64, IP 10.244.1.64 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.64], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.64], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.214, IP 10.244.1.214 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.214], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.214], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.73, IP 10.244.1.73 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.73], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.73], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.47, IP 10.244.1.47 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.47], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.47], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.50, IP 10.244.1.50 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.50], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.50], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.56, IP 10.244.1.56 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.56], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.56], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.254, IP 10.244.1.254 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.254], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.254], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.43, IP 10.244.1.43 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.43], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.43], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.224, IP 10.244.1.224 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.224], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.224], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.230, IP 10.244.1.230 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.230], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.230], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.11, IP 10.244.1.11 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.11], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.11], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.28, IP 10.244.1.28 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.28], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.28], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.160, IP 10.244.1.160 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.160], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.160], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.207, IP 10.244.1.207 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.207], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.207], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.249, IP 10.244.1.249 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.249], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.249], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.24, IP 10.244.1.24 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.24], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.24], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.85, IP 10.244.1.85 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.85], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.85], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.154, IP 10.244.1.154 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.154], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.154], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.221, IP 10.244.1.221 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.221], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.221], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.0, IP 10.244.1.0 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.0], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.0], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.22, IP 10.244.1.22 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.22], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.22], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.105, IP 10.244.1.105 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.105], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.105], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.142, IP 10.244.1.142 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.142], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.142], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.200, IP 10.244.1.200 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.200], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.200], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.235, IP 10.244.1.235 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.235], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.235], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.48, IP 10.244.1.48 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.48], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.48], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.76, IP 10.244.1.76 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.76], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.76], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.78, IP 10.244.1.78 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.78], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.78], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.80, IP 10.244.1.80 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.80], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.80], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.130, IP 10.244.1.130 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.130], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.130], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.169, IP 10.244.1.169 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.169], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.169], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.203, IP 10.244.1.203 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.203], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.203], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.211, IP 10.244.1.211 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.211], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.211], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.53, IP 10.244.1.53 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.53], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.53], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.57, IP 10.244.1.57 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.57], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.57], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.86, IP 10.244.1.86 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.86], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.86], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.91, IP 10.244.1.91 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.91], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.91], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.212, IP 10.244.1.212 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.212], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.212], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.1, IP 10.244.1.1 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.1], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.1], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.75, IP 10.244.1.75 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.75], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.75], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.189, IP 10.244.1.189 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.189], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.189], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.210, IP 10.244.1.210 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.210], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.210], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.19, IP 10.244.1.19 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.19], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.19], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.151, IP 10.244.1.151 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.151], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.151], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.65, IP 10.244.1.65 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.65], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.65], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.98, IP 10.244.1.98 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.98], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.98], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.125, IP 10.244.1.125 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.125], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.125], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.223, IP 10.244.1.223 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.223], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.223], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.12, IP 10.244.1.12 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.12], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.12], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.35, IP 10.244.1.35 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.35], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.35], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.117, IP 10.244.1.117 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.117], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.117], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.146, IP 10.244.1.146 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.146], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.146], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.27, IP 10.244.1.27 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.27], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.27], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.36, IP 10.244.1.36 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.36], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.36], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.106, IP 10.244.1.106 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.106], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.106], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.110, IP 10.244.1.110 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.110], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.110], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.133, IP 10.244.1.133 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.133], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.133], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.159, IP 10.244.1.159 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.159], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.159], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.168, IP 10.244.1.168 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.168], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.168], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.42, IP 10.244.1.42 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.42], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.42], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.66, IP 10.244.1.66 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.66], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.66], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.3, IP 10.244.1.3 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.3], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.3], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.155, IP 10.244.1.155 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.155], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.155], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.25, IP 10.244.1.25 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.25], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.25], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.127, IP 10.244.1.127 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.127], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.127], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.247, IP 10.244.1.247 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.247], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.247], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.250, IP 10.244.1.250 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.250], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.250], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.251, IP 10.244.1.251 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.251], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.251], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.9, IP 10.244.1.9 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.9], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.9], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.112, IP 10.244.1.112 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.112], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.112], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.122, IP 10.244.1.122 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.122], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.122], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.147, IP 10.244.1.147 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.147], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.147], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.153, IP 10.244.1.153 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.153], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.153], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.178, IP 10.244.1.178 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.178], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.178], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.29, IP 10.244.1.29 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.29], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.29], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.51, IP 10.244.1.51 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.51], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.51], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.187, IP 10.244.1.187 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.187], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.187], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.62, IP 10.244.1.62 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.62], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.62], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.170, IP 10.244.1.170 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.170], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.170], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.34, IP 10.244.1.34 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.34], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.34], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.95, IP 10.244.1.95 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.95], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.95], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.162, IP 10.244.1.162 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.162], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.162], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.237, IP 10.244.1.237 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.237], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.237], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.244, IP 10.244.1.244 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.244], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.244], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.4, IP 10.244.1.4 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.4], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.4], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [Azure-Cns] Set ipId 10.244.1.30, IP 10.244.1.30 version to 0, programmed host nc version is -1, ipState: ID: [10.244.1.30], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.30], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:19:01 [1] [IP Usage] Allocated IPs: 256, Assigned IPs: 0, Available IPs: 0, PendingProgramming IPs: 256, PendingRelease IPs: 0
2024/10/02 22:19:01 [1] [cns-rc] CNS NNC Reconciler Started
2024/10/02 22:19:01 [1] NodeNetworkConfig reconciler has started.
2024/10/02 22:19:01 [1] Initialized SyncHostNCVersion loop.
2024/10/02 22:19:01 [1] [Azure CNS] Start HTTP Remote server
2024/10/02 22:19:01 [1] [Listener] Started listening on 127.0.0.1:10090.
2024/10/02 22:19:01 [1] [Azure CNS] Logging periodic NC snapshots. NC Count 1
2024/10/02 22:19:01 [1] Starting SyncHostNCVersion loop.
{"level":"info","ts":"2024-10-02T22:19:01.800Z","caller":"service/main.go:921","msg":"starting fsnotify watcher to process missed Pod deletes"}
{"level":"info","ts":"2024-10-02T22:19:01.800Z","caller":"fsnotify/fsnotify.go:124","msg":"listing directory","path":"/var/run/azure-vnet/deleteIDs"}
{"level":"info","ts":"2024-10-02T22:19:01.801Z","caller":"fsnotify/fsnotify.go:131","msg":"no missed deletes found"}
{"level":"info","ts":"2024-10-02T22:19:01.801Z","caller":"fsnotify/fsnotify.go:141","msg":"listening for events from fsnotify watcher"}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.115] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.115], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.115], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.115 with uuid 10.244.1.115 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.115 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.93] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.93], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.93], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.93 with uuid 10.244.1.93 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.93 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.215] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.215], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.215], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.215 with uuid 10.244.1.215 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.215 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.241] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.241], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.241], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.241 with uuid 10.244.1.241 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.241 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.246] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.246], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.246], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.246 with uuid 10.244.1.246 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.246 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.32] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.32], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.32], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.32 with uuid 10.244.1.32 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.32 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.96] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.96], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.96], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.96 with uuid 10.244.1.96 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.96 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.104] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.104], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.104], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.104 with uuid 10.244.1.104 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.104 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.8] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.8], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.8], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.8 with uuid 10.244.1.8 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.8 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.63] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.63], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.63], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.63 with uuid 10.244.1.63 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.63 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.188] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.188], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.188], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.188 with uuid 10.244.1.188 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.188 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.225] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.225], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.225], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.225 with uuid 10.244.1.225 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.225 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.15] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.15], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.15], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.15 with uuid 10.244.1.15 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.15 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.83] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.83], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.83], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.83 with uuid 10.244.1.83 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.83 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.102] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.102], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.102], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.102 with uuid 10.244.1.102 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.102 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.103] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.103], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.103], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.103 with uuid 10.244.1.103 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.103 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.128] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.128], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.128], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.128 with uuid 10.244.1.128 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.128 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.206] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.206], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.206], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.206 with uuid 10.244.1.206 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.206 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.87] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.87], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.87], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.87 with uuid 10.244.1.87 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.87 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.198] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.198], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.198], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.198 with uuid 10.244.1.198 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.198 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.217] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.217], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.217], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.217 with uuid 10.244.1.217 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.217 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.222] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.222], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.222], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.222 with uuid 10.244.1.222 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.222 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.228] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.228], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.228], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.228 with uuid 10.244.1.228 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.228 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.134] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.134], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.134], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.134 with uuid 10.244.1.134 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.134 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.138] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.138], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.138], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.138 with uuid 10.244.1.138 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.138 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.107] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.107], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.107], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.107 with uuid 10.244.1.107 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.107 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.165] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.165], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.165], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.165 with uuid 10.244.1.165 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.165 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.201] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.201], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.201], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.201 with uuid 10.244.1.201 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.201 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.17] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.17], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.17], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.17 with uuid 10.244.1.17 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.17 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.31] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.31], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.31], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.31 with uuid 10.244.1.31 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.31 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.99] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.99], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.99], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.99 with uuid 10.244.1.99 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.99 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.229] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.229], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.229], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.229 with uuid 10.244.1.229 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.229 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.6] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.6], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.6], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.6 with uuid 10.244.1.6 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.6 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.44] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.44], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.44], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.44 with uuid 10.244.1.44 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.44 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.79] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.79], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.79], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.79 with uuid 10.244.1.79 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.79 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.120] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.120], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.120], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.120 with uuid 10.244.1.120 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.120 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.163] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.163], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.163], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.163 with uuid 10.244.1.163 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.163 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.253] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.253], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.253], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.253 with uuid 10.244.1.253 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.253 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.23] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.23], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.23], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.23 with uuid 10.244.1.23 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.23 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.33] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.33], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.33], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.33 with uuid 10.244.1.33 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.33 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.61] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.61], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.61], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.61 with uuid 10.244.1.61 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.61 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.88] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.88], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.88], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.88 with uuid 10.244.1.88 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.88 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.176] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.176], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.176], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.176 with uuid 10.244.1.176 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.176 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.234] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.234], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.234], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.234 with uuid 10.244.1.234 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.234 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.248] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.248], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.248], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.248 with uuid 10.244.1.248 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.248 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.114] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.114], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.114], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.114 with uuid 10.244.1.114 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.114 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.144] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.144], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.144], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.144 with uuid 10.244.1.144 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.144 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.97] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.97], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.97], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.97 with uuid 10.244.1.97 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.97 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.149] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.149], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.149], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.149 with uuid 10.244.1.149 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.149 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.166] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.166], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.166], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.166 with uuid 10.244.1.166 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.166 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.180] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.180], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.180], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.180 with uuid 10.244.1.180 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.180 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.240] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.240], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.240], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.240 with uuid 10.244.1.240 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.240 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.26] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.26], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.26], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.26 with uuid 10.244.1.26 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.26 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.158] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.158], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.158], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.158 with uuid 10.244.1.158 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.158 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.182] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.182], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.182], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.182 with uuid 10.244.1.182 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.182 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.213] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.213], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.213], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.213 with uuid 10.244.1.213 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.213 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.219] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.219], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.219], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.219 with uuid 10.244.1.219 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.219 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.2] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.2], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.2], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.2 with uuid 10.244.1.2 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.2 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.82] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.82], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.82], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.82 with uuid 10.244.1.82 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.82 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.123] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.123], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.123], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.123 with uuid 10.244.1.123 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.123 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.129] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.129], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.129], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.129 with uuid 10.244.1.129 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.129 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.172] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.172], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.172], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.172 with uuid 10.244.1.172 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.172 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.242] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.242], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.242], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.242 with uuid 10.244.1.242 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.242 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.148] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.148], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.148], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.148 with uuid 10.244.1.148 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.148 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.167] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.167], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.167], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.167 with uuid 10.244.1.167 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.167 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.209] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.209], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.209], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.209 with uuid 10.244.1.209 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.209 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.216] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.216], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.216], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.216 with uuid 10.244.1.216 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.216 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.45] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.45], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.45], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.45 with uuid 10.244.1.45 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.45 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.52] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.52], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.52], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.52 with uuid 10.244.1.52 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.52 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.111] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.111], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.111], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.111 with uuid 10.244.1.111 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.111 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.173] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.173], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.173], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.173 with uuid 10.244.1.173 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.173 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.231] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.231], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.231], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.231 with uuid 10.244.1.231 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.231 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.124] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.124], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.124], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.124 with uuid 10.244.1.124 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.124 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.46] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.46], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.46], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.46 with uuid 10.244.1.46 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.46 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.175] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.175], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.175], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.175 with uuid 10.244.1.175 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.175 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.255] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.255], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.255], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.255 with uuid 10.244.1.255 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.255 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.74] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.74], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.74], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.74 with uuid 10.244.1.74 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.74 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.90] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.90], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.90], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.90 with uuid 10.244.1.90 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.90 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.108] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.108], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.108], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.108 with uuid 10.244.1.108 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.108 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.220] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.220], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.220], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.220 with uuid 10.244.1.220 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.220 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.227] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.227], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.227], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.227 with uuid 10.244.1.227 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.227 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.59] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.59], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.59], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.59 with uuid 10.244.1.59 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.59 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.71] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.71], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.71], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.71 with uuid 10.244.1.71 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.71 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.92] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.92], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.92], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.92 with uuid 10.244.1.92 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.92 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.208] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.208], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.208], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.208 with uuid 10.244.1.208 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.208 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.245] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.245], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.245], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.245 with uuid 10.244.1.245 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.245 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.64] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.64], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.64], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.64 with uuid 10.244.1.64 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.64 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.214] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.214], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.214], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.214 with uuid 10.244.1.214 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.214 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.47] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.47], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.47], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.47 with uuid 10.244.1.47 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.47 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.50] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.50], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.50], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.50 with uuid 10.244.1.50 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.50 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.73] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.73], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.73], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.73 with uuid 10.244.1.73 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.73 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.56] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.56], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.56], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.56 with uuid 10.244.1.56 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.56 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.254] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.254], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.254], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.254 with uuid 10.244.1.254 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.254 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.11] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.11], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.11], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.11 with uuid 10.244.1.11 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.11 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.28] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.28], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.28], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.28 with uuid 10.244.1.28 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.28 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.43] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.43], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.43], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.43 with uuid 10.244.1.43 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.43 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.224] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.224], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.224], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.224 with uuid 10.244.1.224 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.224 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.230] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.230], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.230], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.230 with uuid 10.244.1.230 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.230 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.24] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.24], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.24], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.24 with uuid 10.244.1.24 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.24 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.85] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.85], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.85], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.85 with uuid 10.244.1.85 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.85 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.160] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.160], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.160], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.160 with uuid 10.244.1.160 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.160 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.207] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.207], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.207], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.207 with uuid 10.244.1.207 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.207 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.249] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.249], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.249], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.249 with uuid 10.244.1.249 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.249 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.0] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.0], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.0], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.0 with uuid 10.244.1.0 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.0 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.22] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.22], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.22], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.22 with uuid 10.244.1.22 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.22 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.154] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.154], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.154], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.154 with uuid 10.244.1.154 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.154 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.221] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.221], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.221], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.221 with uuid 10.244.1.221 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.221 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.48] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.48], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.48], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.48 with uuid 10.244.1.48 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.48 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.76] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.76], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.76], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.76 with uuid 10.244.1.76 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.76 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.105] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.105], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.105], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.105 with uuid 10.244.1.105 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.105 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.142] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.142], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.142], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.142 with uuid 10.244.1.142 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.142 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.200] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.200], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.200], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.200 with uuid 10.244.1.200 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.200 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.235] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.235], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.235], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.235 with uuid 10.244.1.235 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.235 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.211] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.211], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.211], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.211 with uuid 10.244.1.211 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.211 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.53] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.53], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.53], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.53 with uuid 10.244.1.53 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.53 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.57] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.57], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.57], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.57 with uuid 10.244.1.57 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.57 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.78] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.78], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.78], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.78 with uuid 10.244.1.78 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.78 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.80] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.80], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.80], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.80 with uuid 10.244.1.80 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.80 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.130] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.130], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.130], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.130 with uuid 10.244.1.130 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.130 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.169] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.169], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.169], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.169 with uuid 10.244.1.169 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.169 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.203] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.203], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.203], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.203 with uuid 10.244.1.203 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.203 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.1] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.1], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.1], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.1 with uuid 10.244.1.1 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.1 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.75] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.75], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.75], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.75 with uuid 10.244.1.75 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.75 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.86] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.86], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.86], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.86 with uuid 10.244.1.86 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.86 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.91] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.91], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.91], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.91 with uuid 10.244.1.91 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.91 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.212] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.212], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.212], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.212 with uuid 10.244.1.212 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.212 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.19] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.19], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.19], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.19 with uuid 10.244.1.19 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.19 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.151] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.151], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.151], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.151 with uuid 10.244.1.151 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.151 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.189] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.189], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.189], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.189 with uuid 10.244.1.189 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.189 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.210] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.210], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.210], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.210 with uuid 10.244.1.210 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.210 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.12] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.12], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.12], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.12 with uuid 10.244.1.12 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.12 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.35] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.35], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.35], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.35 with uuid 10.244.1.35 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.35 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.65] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.65], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.65], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.65 with uuid 10.244.1.65 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.65 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.98] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.98], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.98], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.98 with uuid 10.244.1.98 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.98 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.125] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.125], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.125], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.125 with uuid 10.244.1.125 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.125 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.223] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.223], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.223], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.223 with uuid 10.244.1.223 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.223 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.27] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.27], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.27], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.27 with uuid 10.244.1.27 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.27 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.36] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.36], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.36], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.36 with uuid 10.244.1.36 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.36 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.117] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.117], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.117], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.117 with uuid 10.244.1.117 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.117 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.146] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.146], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.146], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.146 with uuid 10.244.1.146 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.146 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.42] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.42], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.42], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.42 with uuid 10.244.1.42 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.42 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.66] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.66], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.66], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.66 with uuid 10.244.1.66 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.66 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.106] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.106], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.106], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.106 with uuid 10.244.1.106 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.106 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.110] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.110], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.110], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.110 with uuid 10.244.1.110 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.110 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.133] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.133], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.133], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.133 with uuid 10.244.1.133 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.133 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.159] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.159], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.159], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.159 with uuid 10.244.1.159 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.159 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.168] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.168], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.168], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.168 with uuid 10.244.1.168 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.168 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.3] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.3], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.3], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.3 with uuid 10.244.1.3 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.3 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.155] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.155], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.155], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.155 with uuid 10.244.1.155 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.155 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.25] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.25], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.25], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.25 with uuid 10.244.1.25 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.25 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.9] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.9], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.9], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.9 with uuid 10.244.1.9 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.9 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.112] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.112], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.112], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.112 with uuid 10.244.1.112 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.112 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.127] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.127], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.127], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.127 with uuid 10.244.1.127 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.127 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.247] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.247], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.247], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.247 with uuid 10.244.1.247 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.247 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.250] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.250], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.250], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.250 with uuid 10.244.1.250 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.250 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.251] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.251], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.251], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.251 with uuid 10.244.1.251 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.251 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.29] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.29], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.29], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.29 with uuid 10.244.1.29 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.29 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.51] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.51], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.51], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.51 with uuid 10.244.1.51 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.51 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.122] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.122], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.122], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.122 with uuid 10.244.1.122 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.122 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.147] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.147], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.147], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.147 with uuid 10.244.1.147 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.147 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.153] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.153], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.153], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.153 with uuid 10.244.1.153 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.153 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.178] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.178], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.178], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.178 with uuid 10.244.1.178 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.178 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.62] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.62], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.62], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.62 with uuid 10.244.1.62 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.62 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.170] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.170], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.170], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.170 with uuid 10.244.1.170 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.170 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.187] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.187], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.187], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.187 with uuid 10.244.1.187 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.187 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.4] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.4], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.4], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.4 with uuid 10.244.1.4 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.4 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.30] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.30], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.30], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.30 with uuid 10.244.1.30 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.30 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.34] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.34], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.34], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.34 with uuid 10.244.1.34 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.34 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.95] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.95], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.95], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.95 with uuid 10.244.1.95 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.95 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.162] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.162], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.162], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.162 with uuid 10.244.1.162 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.162 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.237] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.237], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.237], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.237 with uuid 10.244.1.237 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.237 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.244] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.244], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.244], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.244 with uuid 10.244.1.244 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.244 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.37] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.37], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.37], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.37 with uuid 10.244.1.37 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.37 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.174] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.174], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.174], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.174 with uuid 10.244.1.174 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.174 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.204] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.204], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.204], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:02 [1] Change ip 10.244.1.204 with uuid 10.244.1.204 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.204 NCVersion:0}
2024/10/02 22:19:02 [1] [updateIPConfigState] Changing IpId [10.244.1.252] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.252], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.252], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.252 with uuid 10.244.1.252 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.252 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.70] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.70], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.70], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.70 with uuid 10.244.1.70 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.70 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.72] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.72], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.72], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.72 with uuid 10.244.1.72 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.72 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.77] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.77], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.77], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.77 with uuid 10.244.1.77 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.77 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.150] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.150], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.150], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.150 with uuid 10.244.1.150 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.150 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.20] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.20], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.20], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.20 with uuid 10.244.1.20 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.20 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.38] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.38], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.38], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.38 with uuid 10.244.1.38 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.38 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.157] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.157], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.157], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.157 with uuid 10.244.1.157 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.157 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.218] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.218], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.218], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.218 with uuid 10.244.1.218 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.218 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.18] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.18], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.18], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.18 with uuid 10.244.1.18 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.18 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.84] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.84], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.84], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.84 with uuid 10.244.1.84 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.84 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.118] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.118], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.118], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.118 with uuid 10.244.1.118 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.118 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.191] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.191], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.191], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.191 with uuid 10.244.1.191 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.191 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.236] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.236], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.236], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.236 with uuid 10.244.1.236 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.236 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.239] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.239], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.239], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.239 with uuid 10.244.1.239 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.239 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.67] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.67], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.67], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.67 with uuid 10.244.1.67 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.67 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.116] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.116], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.116], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.116 with uuid 10.244.1.116 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.116 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.131] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.131], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.131], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.131 with uuid 10.244.1.131 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.131 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.41] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.41], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.41], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.41 with uuid 10.244.1.41 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.41 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.179] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.179], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.179], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.179 with uuid 10.244.1.179 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.179 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.195] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.195], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.195], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.195 with uuid 10.244.1.195 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.195 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.232] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.232], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.232], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.232 with uuid 10.244.1.232 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.232 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.39] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.39], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.39], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.39 with uuid 10.244.1.39 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.39 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.156] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.156], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.156], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.156 with uuid 10.244.1.156 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.156 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.181] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.181], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.181], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.181 with uuid 10.244.1.181 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.181 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.190] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.190], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.190], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.190 with uuid 10.244.1.190 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.190 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.145] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.145], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.145], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.145 with uuid 10.244.1.145 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.145 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.152] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.152], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.152], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.152 with uuid 10.244.1.152 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.152 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.58] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.58], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.58], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.58 with uuid 10.244.1.58 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.58 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.141] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.141], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.141], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.141 with uuid 10.244.1.141 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.141 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.55] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.55], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.55], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.55 with uuid 10.244.1.55 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.55 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.94] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.94], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.94], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.94 with uuid 10.244.1.94 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.94 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.202] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.202], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.202], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.202 with uuid 10.244.1.202 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.202 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.54] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.54], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.54], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.54 with uuid 10.244.1.54 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.54 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.60] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.60], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.60], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.60 with uuid 10.244.1.60 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.60 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.121] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.121], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.121], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.121 with uuid 10.244.1.121 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.121 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.135] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.135], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.135], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.135 with uuid 10.244.1.135 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.135 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.177] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.177], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.177], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.177 with uuid 10.244.1.177 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.177 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.185] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.185], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.185], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.185 with uuid 10.244.1.185 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.185 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.192] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.192], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.192], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.192 with uuid 10.244.1.192 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.192 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.5] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.5], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.5], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.5 with uuid 10.244.1.5 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.5 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.21] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.21], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.21], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.21 with uuid 10.244.1.21 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.21 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.68] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.68], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.68], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.68 with uuid 10.244.1.68 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.68 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.143] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.143], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.143], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.143 with uuid 10.244.1.143 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.143 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.171] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.171], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.171], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.171 with uuid 10.244.1.171 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.171 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.243] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.243], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.243], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.243 with uuid 10.244.1.243 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.243 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.49] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.49], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.49], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.49 with uuid 10.244.1.49 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.49 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.81] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.81], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.81], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.81 with uuid 10.244.1.81 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.81 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.101] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.101], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.101], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.101 with uuid 10.244.1.101 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.101 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.161] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.161], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.161], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.161 with uuid 10.244.1.161 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.161 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.183] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.183], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.183], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.183 with uuid 10.244.1.183 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.183 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.184] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.184], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.184], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.184 with uuid 10.244.1.184 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.184 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.14] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.14], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.14], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.14 with uuid 10.244.1.14 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.14 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.40] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.40], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.40], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.40 with uuid 10.244.1.40 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.40 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.140] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.140], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.140], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.140 with uuid 10.244.1.140 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.140 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.196] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.196], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.196], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.196 with uuid 10.244.1.196 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.196 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.233] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.233], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.233], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.233 with uuid 10.244.1.233 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.233 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.10] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.10], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.10], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.10 with uuid 10.244.1.10 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.10 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.132] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.132], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.132], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.132 with uuid 10.244.1.132 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.132 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.199] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.199], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.199], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.199 with uuid 10.244.1.199 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.199 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.205] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.205], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.205], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.205 with uuid 10.244.1.205 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.205 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.137] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.137], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.137], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.137 with uuid 10.244.1.137 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.137 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.186] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.186], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.186], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.186 with uuid 10.244.1.186 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.186 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.126] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.126], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.126], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.126 with uuid 10.244.1.126 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.126 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.197] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.197], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.197], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.197 with uuid 10.244.1.197 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.197 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.226] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.226], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.226], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.226 with uuid 10.244.1.226 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.226 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.13] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.13], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.13], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.13 with uuid 10.244.1.13 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.13 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.136] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.136], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.136], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.136 with uuid 10.244.1.136 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.136 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.194] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.194], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.194], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.194 with uuid 10.244.1.194 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.194 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.113] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.113], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.113], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.113 with uuid 10.244.1.113 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.113 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.7] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.7], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.7], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.7 with uuid 10.244.1.7 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.7 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.119] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.119], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.119], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.119 with uuid 10.244.1.119 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.119 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.193] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.193], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.193], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.193 with uuid 10.244.1.193 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.193 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.238] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.238], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.238], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.238 with uuid 10.244.1.238 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.238 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.89] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.89], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.89], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.89 with uuid 10.244.1.89 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.89 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.139] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.139], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.139], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.139 with uuid 10.244.1.139 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.139 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.164] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.164], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.164], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.164 with uuid 10.244.1.164 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.164 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.16] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.16], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.16], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.16 with uuid 10.244.1.16 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.16 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.69] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.69], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.69], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.69 with uuid 10.244.1.69 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.69 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.100] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.100], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.100], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:01Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.100 with uuid 10.244.1.100 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.100 NCVersion:0}
2024/10/02 22:19:03 [1] [updateIPConfigState] Changing IpId [10.244.1.109] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.1.109], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.109], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:19:00Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:03 [1] Change ip 10.244.1.109 with uuid 10.244.1.109 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.1.109 NCVersion:0}
2024/10/02 22:19:03 [1] Updating NC 21e9b822-3f81-4efb-859b-29f22a26b883 host version from -1 to 0
2024/10/02 22:19:03 [1] Updated NC 21e9b822-3f81-4efb-859b-29f22a26b883 host version to 0
2024/10/02 22:19:05 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:73ebee2f-eth0 InfraContainerID:73ebee2fe9e4c1e685d5997afee46ab90dd40688dfa83b7f704e797379fbb540 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 115 105 45 110 111 100 101 45 100 114 105 118 101 114 45 57 56 107 100 103 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 97 108 105 99 111 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:19:05 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [73ebee2f-eth0]
2024/10/02 22:19:05 [1] [updateIPConfigState] Changing IpId [10.244.1.2] state to [Assigned], podInfo [InfraContainerID: [73ebee2fe9e4c1e685d5997afee46ab90dd40688dfa83b7f704e797379fbb540], InterfaceID: [73ebee2f-eth0], Key: [73ebee2f-eth0], Name: [csi-node-driver-98kdg], Namespace: [calico-system]]. Current config [ID: [10.244.1.2], NCID: [21e9b822-3f81-4efb-859b-29f22a26b883], IPAddress: [10.244.1.2], State: [Available], LastStateTransition: [2024-10-02T22:19:02Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:19:05 [1] IP config 73ebee2f-eth0 initialized
2024/10/02 22:19:05 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [73ebee2fe9e4c1e685d5997afee46ab90dd40688dfa83b7f704e797379fbb540], InterfaceID: [73ebee2f-eth0], Key: [73ebee2f-eth0], Name: [csi-node-driver-98kdg], Namespace: [calico-system]
2024/10/02 22:19:05 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:73ebee2f-eth0 InfraContainerID:73ebee2fe9e4c1e685d5997afee46ab90dd40688dfa83b7f704e797379fbb540 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 115 105 45 110 111 100 101 45 100 114 105 118 101 114 45 57 56 107 100 103 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 97 108 105 99 111 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.1.2 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.1.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.5 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
==== END logs for container cns-container of pod kube-system/azure-cns-c455t ====
==== START logs for container cni-installer of pod kube-system/azure-cns-xrz8n ====
ts=1727907523.5243325 level=info msg="wrote file" sources=azure-vnet,azure-vnet-telemetry outputs=/opt/cni/bin/azure-vnet,/opt/cni/bin/azure-vnet-telemetry cmd=deploy src=azure-vnet dest=/opt/cni/bin/azure-vnet
ts=1727907523.6578143 level=info msg="wrote file" sources=azure-vnet,azure-vnet-telemetry outputs=/opt/cni/bin/azure-vnet,/opt/cni/bin/azure-vnet-telemetry cmd=deploy src=azure-vnet-telemetry dest=/opt/cni/bin/azure-vnet-telemetry
ts=1727907523.6578567 level=info msg="successfully wrote files" sources=azure-vnet,azure-vnet-telemetry outputs=/opt/cni/bin/azure-vnet,/opt/cni/bin/azure-vnet-telemetry cmd=deploy
==== END logs for container cni-installer of pod kube-system/azure-cns-xrz8n ====
==== START logs for container cns-container of pod kube-system/azure-cns-xrz8n ====
2024/10/02 22:18:49 [1] [Configuration] Using config path: /etc/azure-cns/cns_config.json
2024/10/02 22:18:49 [1] GetAzureCloud querying url: http://169.254.169.254/metadata/instance/compute/azEnvironment?api-version=2018-10-01&format=text
2024/10/02 22:18:49 [1] [Utils] Initializing HTTP client with connection timeout: 7, response header timeout: 7
2024/10/02 22:18:49 [1] AI Telemetry Handle created
2024/10/02 22:18:49 [1] [Azure CNS] Using config: &{AZRSettings:{PopulateHomeAzCacheRetryIntervalSecs:60} AsyncPodDeletePath:/var/run/azure-vnet/deleteIDs CNIConflistFilepath:/etc/cni/net.d/15-azure-swift-overlay.conflist CNIConflistScenario:v4overlay ChannelMode:CRD EnableAsyncPodDelete:true EnableCNIConflistGeneration:true EnableIPAMv2:false EnablePprof:false EnableStateMigration:false EnableSubnetScarcity:false EnableSwiftV2:false InitializeFromCNI:true KeyVaultSettings:{URL: CertificateName: RefreshIntervalInHrs:12} MSISettings:{ResourceID:} ManageEndpointState:false ManagedSettings:{PrivateEndpoint: InfrastructureNetworkID: NodeID: NodeSyncIntervalInSeconds:30} MellanoxMonitorIntervalSecs:0 MetricsBindAddress::10092 ProgramSNATIPTables:false SWIFTV2Mode: SyncHostNCTimeoutMs:500 SyncHostNCVersionIntervalMs:1000 TLSCertificatePath: TLSEndpoint: TLSPort: TLSSubjectName: TelemetrySettings:{DisableAll:false DisableTrace:false DisableMetric:false DisableEvent:false TelemetryBatchSizeBytes:16384 TelemetryBatchIntervalInSecs:15 HeartBeatIntervalInMins:30 DisableMetadataRefreshThread:false RefreshIntervalInSecs:15 DebugMode:false SnapshotIntervalInMins:60 AppInsightsInstrumentationKey:} UseHTTPS:false UseMTLS:false WatchPods:false WireserverIP:168.63.129.16}
2024/10/02 22:18:49 [1] [Telemetry] Request metadata from wireserver
2024/10/02 22:18:49 [1] Running on Linux version 5.15.0-1071-azure (buildd@lcy02-amd64-063) (gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0, GNU ld (GNU Binutils for Ubuntu) 2.38) #80-Ubuntu SMP Tue Aug 6 19:27:32 UTC 2024
2024/10/02 22:18:49 [1] [Azure CNS] GetPrimaryInterfaceInfoFromHost
2024/10/02 22:18:49 [1] Acquiring process lock
2024/10/02 22:18:49 [1] Acquired process lock with timeout value of 10s
2024/10/02 22:18:49 [1] Released process lock
2024/10/02 22:18:49 [1] [Azure CNS] Response received from NMAgent for get interface details: <Interfaces><Interface MacAddress="7C1E5259C66F" IsPrimary="true"><IPSubnet Prefix="10.224.0.0/16"><IPAddress Address="10.224.0.4" IsPrimary="true"/></IPSubnet></Interface></Interfaces>
⇨ http server started on [::]:10092
2024/10/02 22:18:49 [1] [Azure CNS] Initialize HTTPRemoteRestService
2024/10/02 22:18:49 [1] user specifies -c option
2024/10/02 22:18:49 [1] [Azure CNS] restoreState
2024/10/02 22:18:49 [1] [Azure CNS]  No state to restore.
2024/10/02 22:18:49 [1] [Azure CNS] Enter Restoring Network State
2024/10/02 22:18:49 [1] [Azure CNS] Store does not exist, nothing to restore for network state.
2024/10/02 22:18:49 [1] [Utils] Initializing HTTP client with connection timeout: 5, response header timeout: 120
2024/10/02 22:18:49 [1] SetContext details called with:  orchestrator nodeID 
2024/10/02 22:18:49 [1] [Azure CNS]  Listening.
2024/10/02 22:18:49 [1] Writing {} to CNI statefile /var/run/azure-vnet.json
2024/10/02 22:18:49 [1] Set GlobalPodInfoScheme 1 (InitializeFromCNI=true)
2024/10/02 22:18:49 [1] [Azure CNS] setOrchestratorType
2024/10/02 22:18:49 [1] SetContext details called with: KubernetesCRD orchestrator nodeID 
2024/10/02 22:18:49 [1] [azure-cns] Sent cns.Response {ReturnCode:Success Message:}.
2024/10/02 22:18:50 [1] Initializing from CNI
2024/10/02 22:18:50 [1] Reconciling initial CNS state
2024/10/02 22:18:50 [1] reconciling initial CNS state attempt: 1
2024/10/02 22:18:50 [1] Retrieved NNC: &{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:aks-agentpool-29385454-vmss000009 GenerateName: Namespace:kube-system SelfLink: UID:b88adfc9-ebb0-4c07-b510-ee903a0128df ResourceVersion:428725 Generation:1 CreationTimestamp:2024-10-02 22:18:36 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[kubernetes.azure.com/podnetwork-delegationguid: kubernetes.azure.com/podnetwork-subnet: kubernetes.azure.com/podnetwork-type:overlay managed:true owner:aks-agentpool-29385454-vmss000009] Annotations:map[] OwnerReferences:[{APIVersion:v1 Kind:Node Name:aks-agentpool-29385454-vmss000009 UID:20d30808-e32f-4192-81d6-b0f2752e0a99 Controller:0xc0006e46cf BlockOwnerDeletion:0xc0006e46ce}] Finalizers:[finalizers.acn.azure.com/dnc-operations] ManagedFields:[{Manager:dnc-rc Operation:Update APIVersion:acn.azure.com/v1alpha Time:2024-10-02 22:18:36 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{".":{},"v:\"finalizers.acn.azure.com/dnc-operations\"":{}},"f:labels":{".":{},"f:kubernetes.azure.com/podnetwork-delegationguid":{},"f:kubernetes.azure.com/podnetwork-subnet":{},"f:kubernetes.azure.com/podnetwork-type":{},"f:managed":{},"f:owner":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"20d30808-e32f-4192-81d6-b0f2752e0a99\"}":{}}},"f:spec":{".":{},"f:requestedIPCount":{}}} Subresource:} {Manager:dnc-rc Operation:Update APIVersion:acn.azure.com/v1alpha Time:2024-10-02 22:18:37 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:status":{".":{},"f:assignedIPCount":{},"f:networkContainers":{}}} Subresource:status}]} Spec:{RequestedIPCount:0 IPsNotInUse:[]} Status:{AssignedIPCount:256 Scaler:{BatchSize:0 ReleaseThresholdPercent:0 RequestThresholdPercent:0 MaxIPCount:0} Status: NetworkContainers:[{ID:4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d AssignmentMode:static Type:overlay PrimaryIP:10.244.0.0/24 SubnetName:routingdomain_dfe2f0f8-7278-5fa8-b703-280fe18cfed6_overlaysubnet IPAssignments:[] DefaultGateway: SubnetAddressSpace:10.244.0.0/16 Version:0 NodeIP:10.224.0.4 SubscriptionID: ResourceGroupID: VNETID: SubnetID: Status:}]}}
2024/10/02 22:18:50 [1] Reconciling CNS IPAM state with nc requests: [[CreateNetworkContainerRequest{Version: 0, NetworkContainerType: Docker, NetworkContainerid: 4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d, PrimaryInterfaceIdentifier: , LocalIPConfiguration: {IPSubnet:{IPAddress: PrefixLength:0} DNSServers:[] GatewayIPAddress:}, IPConfiguration: {IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:}, SecondaryIPConfigs: map[10.244.0.0:{IPAddress:10.244.0.0 NCVersion:0} 10.244.0.1:{IPAddress:10.244.0.1 NCVersion:0} 10.244.0.10:{IPAddress:10.244.0.10 NCVersion:0} 10.244.0.100:{IPAddress:10.244.0.100 NCVersion:0} 10.244.0.101:{IPAddress:10.244.0.101 NCVersion:0} 10.244.0.102:{IPAddress:10.244.0.102 NCVersion:0} 10.244.0.103:{IPAddress:10.244.0.103 NCVersion:0} 10.244.0.104:{IPAddress:10.244.0.104 NCVersion:0} 10.244.0.105:{IPAddress:10.244.0.105 NCVersion:0} 10.244.0.106:{IPAddress:10.244.0.106 NCVersion:0} 10.244.0.107:{IPAddress:10.244.0.107 NCVersion:0} 10.244.0.108:{IPAddress:10.244.0.108 NCVersion:0} 10.244.0.109:{IPAddress:10.244.0.109 NCVersion:0} 10.244.0.11:{IPAddress:10.244.0.11 NCVersion:0} 10.244.0.110:{IPAddress:10.244.0.110 NCVersion:0} 10.244.0.111:{IPAddress:10.244.0.111 NCVersion:0} 10.244.0.112:{IPAddress:10.244.0.112 NCVersion:0} 10.244.0.113:{IPAddress:10.244.0.113 NCVersion:0} 10.244.0.114:{IPAddress:10.244.0.114 NCVersion:0} 10.244.0.115:{IPAddress:10.244.0.115 NCVersion:0} 10.244.0.116:{IPAddress:10.244.0.116 NCVersion:0} 10.244.0.117:{IPAddress:10.244.0.117 NCVersion:0} 10.244.0.118:{IPAddress:10.244.0.118 NCVersion:0} 10.244.0.119:{IPAddress:10.244.0.119 NCVersion:0} 10.244.0.12:{IPAddress:10.244.0.12 NCVersion:0} 10.244.0.120:{IPAddress:10.244.0.120 NCVersion:0} 10.244.0.121:{IPAddress:10.244.0.121 NCVersion:0} 10.244.0.122:{IPAddress:10.244.0.122 NCVersion:0} 10.244.0.123:{IPAddress:10.244.0.123 NCVersion:0} 10.244.0.124:{IPAddress:10.244.0.124 NCVersion:0} 10.244.0.125:{IPAddress:10.244.0.125 NCVersion:0} 10.244.0.126:{IPAddress:10.244.0.126 NCVersion:0} 10.244.0.127:{IPAddress:10.244.0.127 NCVersion:0} 10.244.0.128:{IPAddress:10.244.0.128 NCVersion:0} 10.244.0.129:{IPAddress:10.244.0.129 NCVersion:0} 10.244.0.13:{IPAddress:10.244.0.13 NCVersion:0} 10.244.0.130:{IPAddress:10.244.0.130 NCVersion:0} 10.244.0.131:{IPAddress:10.244.0.131 NCVersion:0} 10.244.0.132:{IPAddress:10.244.0.132 NCVersion:0} 10.244.0.133:{IPAddress:10.244.0.133 NCVersion:0} 10.244.0.134:{IPAddress:10.244.0.134 NCVersion:0} 10.244.0.135:{IPAddress:10.244.0.135 NCVersion:0} 10.244.0.136:{IPAddress:10.244.0.136 NCVersion:0} 10.244.0.137:{IPAddress:10.244.0.137 NCVersion:0} 10.244.0.138:{IPAddress:10.244.0.138 NCVersion:0} 10.244.0.139:{IPAddress:10.244.0.139 NCVersion:0} 10.244.0.14:{IPAddress:10.244.0.14 NCVersion:0} 10.244.0.140:{IPAddress:10.244.0.140 NCVersion:0} 10.244.0.141:{IPAddress:10.244.0.141 NCVersion:0} 10.244.0.142:{IPAddress:10.244.0.142 NCVersion:0} 10.244.0.143:{IPAddress:10.244.0.143 NCVersion:0} 10.244.0.144:{IPAddress:10.244.0.144 NCVersion:0} 10.244.0.145:{IPAddress:10.244.0.145 NCVersion:0} 10.244.0.146:{IPAddress:10.244.0.146 NCVersion:0} 10.244.0.147:{IPAddress:10.244.0.147 NCVersion:0} 10.244.0.148:{IPAddress:10.244.0.148 NCVersion:0} 10.244.0.149:{IPAddress:10.244.0.149 NCVersion:0} 10.244.0.15:{IPAddress:10.244.0.15 NCVersion:0} 10.244.0.150:{IPAddress:10.244.0.150 NCVersion:0} 10.244.0.151:{IPAddress:10.244.0.151 NCVersion:0} 10.244.0.152:{IPAddress:10.244.0.152 NCVersion:0} 10.244.0.153:{IPAddress:10.244.0.153 NCVersion:0} 10.244.0.154:{IPAddress:10.244.0.154 NCVersion:0} 10.244.0.155:{IPAddress:10.244.0.155 NCVersion:0} 10.244.0.156:{IPAddress:10.244.0.156 NCVersion:0} 10.244.0.157:{IPAddress:10.244.0.157 NCVersion:0} 10.244.0.158:{IPAddress:10.244.0.158 NCVersion:0} 10.244.0.159:{IPAddress:10.244.0.159 NCVersion:0} 10.244.0.16:{IPAddress:10.244.0.16 NCVersion:0} 10.244.0.160:{IPAddress:10.244.0.160 NCVersion:0} 10.244.0.161:{IPAddress:10.244.0.161 NCVersion:0} 10.244.0.162:{IPAddress:10.244.0.162 NCVersion:0} 10.244.0.163:{IPAddress:10.244.0.163 NCVersion:0} 10.244.0.164:{IPAddress:10.244.0.164 NCVersion:0} 10.244.0.165:{IPAddress:10.244.0.165 NCVersion:0} 10.244.0.166:{IPAddress:10.244.0.166 NCVersion:0} 10.244.0.167:{IPAddress:10.244.0.167 NCVersion:0} 10.244.0.168:{IPAddress:10.244.0.168 NCVersion:0} 10.244.0.169:{IPAddress:10.244.0.169 NCVersion:0} 10.244.0.17:{IPAddress:10.244.0.17 NCVersion:0} 10.244.0.170:{IPAddress:10.244.0.170 NCVersion:0} 10.244.0.171:{IPAddress:10.244.0.171 NCVersion:0} 10.244.0.172:{IPAddress:10.244.0.172 NCVersion:0} 10.244.0.173:{IPAddress:10.244.0.173 NCVersion:0} 10.244.0.174:{IPAddress:10.244.0.174 NCVersion:0} 10.244.0.175:{IPAddress:10.244.0.175 NCVersion:0} 10.244.0.176:{IPAddress:10.244.0.176 NCVersion:0} 10.244.0.177:{IPAddress:10.244.0.177 NCVersion:0} 10.244.0.178:{IPAddress:10.244.0.178 NCVersion:0} 10.244.0.179:{IPAddress:10.244.0.179 NCVersion:0} 10.244.0.18:{IPAddress:10.244.0.18 NCVersion:0} 10.244.0.180:{IPAddress:10.244.0.180 NCVersion:0} 10.244.0.181:{IPAddress:10.244.0.181 NCVersion:0} 10.244.0.182:{IPAddress:10.244.0.182 NCVersion:0} 10.244.0.183:{IPAddress:10.244.0.183 NCVersion:0} 10.244.0.184:{IPAddress:10.244.0.184 NCVersion:0} 10.244.0.185:{IPAddress:10.244.0.185 NCVersion:0} 10.244.0.186:{IPAddress:10.244.0.186 NCVersion:0} 10.244.0.187:{IPAddress:10.244.0.187 NCVersion:0} 10.244.0.188:{IPAddress:10.244.0.188 NCVersion:0} 10.244.0.189:{IPAddress:10.244.0.189 NCVersion:0} 10.244.0.19:{IPAddress:10.244.0.19 NCVersion:0} 10.244.0.190:{IPAddress:10.244.0.190 NCVersion:0} 10.244.0.191:{IPAddress:10.244.0.191 NCVersion:0} 10.244.0.192:{IPAddress:10.244.0.192 NCVersion:0} 10.244.0.193:{IPAddress:10.244.0.193 NCVersion:0} 10.244.0.194:{IPAddress:10.244.0.194 NCVersion:0} 10.244.0.195:{IPAddress:10.244.0.195 NCVersion:0} 10.244.0.196:{IPAddress:10.244.0.196 NCVersion:0} 10.244.0.197:{IPAddress:10.244.0.197 NCVersion:0} 10.244.0.198:{IPAddress:10.244.0.198 NCVersion:0} 10.244.0.199:{IPAddress:10.244.0.199 NCVersion:0} 10.244.0.2:{IPAddress:10.244.0.2 NCVersion:0} 10.244.0.20:{IPAddress:10.244.0.20 NCVersion:0} 10.244.0.200:{IPAddress:10.244.0.200 NCVersion:0} 10.244.0.201:{IPAddress:10.244.0.201 NCVersion:0} 10.244.0.202:{IPAddress:10.244.0.202 NCVersion:0} 10.244.0.203:{IPAddress:10.244.0.203 NCVersion:0} 10.244.0.204:{IPAddress:10.244.0.204 NCVersion:0} 10.244.0.205:{IPAddress:10.244.0.205 NCVersion:0} 10.244.0.206:{IPAddress:10.244.0.206 NCVersion:0} 10.244.0.207:{IPAddress:10.244.0.207 NCVersion:0} 10.244.0.208:{IPAddress:10.244.0.208 NCVersion:0} 10.244.0.209:{IPAddress:10.244.0.209 NCVersion:0} 10.244.0.21:{IPAddress:10.244.0.21 NCVersion:0} 10.244.0.210:{IPAddress:10.244.0.210 NCVersion:0} 10.244.0.211:{IPAddress:10.244.0.211 NCVersion:0} 10.244.0.212:{IPAddress:10.244.0.212 NCVersion:0} 10.244.0.213:{IPAddress:10.244.0.213 NCVersion:0} 10.244.0.214:{IPAddress:10.244.0.214 NCVersion:0} 10.244.0.215:{IPAddress:10.244.0.215 NCVersion:0} 10.244.0.216:{IPAddress:10.244.0.216 NCVersion:0} 10.244.0.217:{IPAddress:10.244.0.217 NCVersion:0} 10.244.0.218:{IPAddress:10.244.0.218 NCVersion:0} 10.244.0.219:{IPAddress:10.244.0.219 NCVersion:0} 10.244.0.22:{IPAddress:10.244.0.22 NCVersion:0} 10.244.0.220:{IPAddress:10.244.0.220 NCVersion:0} 10.244.0.221:{IPAddress:10.244.0.221 NCVersion:0} 10.244.0.222:{IPAddress:10.244.0.222 NCVersion:0} 10.244.0.223:{IPAddress:10.244.0.223 NCVersion:0} 10.244.0.224:{IPAddress:10.244.0.224 NCVersion:0} 10.244.0.225:{IPAddress:10.244.0.225 NCVersion:0} 10.244.0.226:{IPAddress:10.244.0.226 NCVersion:0} 10.244.0.227:{IPAddress:10.244.0.227 NCVersion:0} 10.244.0.228:{IPAddress:10.244.0.228 NCVersion:0} 10.244.0.229:{IPAddress:10.244.0.229 NCVersion:0} 10.244.0.23:{IPAddress:10.244.0.23 NCVersion:0} 10.244.0.230:{IPAddress:10.244.0.230 NCVersion:0} 10.244.0.231:{IPAddress:10.244.0.231 NCVersion:0} 10.244.0.232:{IPAddress:10.244.0.232 NCVersion:0} 10.244.0.233:{IPAddress:10.244.0.233 NCVersion:0} 10.244.0.234:{IPAddress:10.244.0.234 NCVersion:0} 10.244.0.235:{IPAddress:10.244.0.235 NCVersion:0} 10.244.0.236:{IPAddress:10.244.0.236 NCVersion:0} 10.244.0.237:{IPAddress:10.244.0.237 NCVersion:0} 10.244.0.238:{IPAddress:10.244.0.238 NCVersion:0} 10.244.0.239:{IPAddress:10.244.0.239 NCVersion:0} 10.244.0.24:{IPAddress:10.244.0.24 NCVersion:0} 10.244.0.240:{IPAddress:10.244.0.240 NCVersion:0} 10.244.0.241:{IPAddress:10.244.0.241 NCVersion:0} 10.244.0.242:{IPAddress:10.244.0.242 NCVersion:0} 10.244.0.243:{IPAddress:10.244.0.243 NCVersion:0} 10.244.0.244:{IPAddress:10.244.0.244 NCVersion:0} 10.244.0.245:{IPAddress:10.244.0.245 NCVersion:0} 10.244.0.246:{IPAddress:10.244.0.246 NCVersion:0} 10.244.0.247:{IPAddress:10.244.0.247 NCVersion:0} 10.244.0.248:{IPAddress:10.244.0.248 NCVersion:0} 10.244.0.249:{IPAddress:10.244.0.249 NCVersion:0} 10.244.0.25:{IPAddress:10.244.0.25 NCVersion:0} 10.244.0.250:{IPAddress:10.244.0.250 NCVersion:0} 10.244.0.251:{IPAddress:10.244.0.251 NCVersion:0} 10.244.0.252:{IPAddress:10.244.0.252 NCVersion:0} 10.244.0.253:{IPAddress:10.244.0.253 NCVersion:0} 10.244.0.254:{IPAddress:10.244.0.254 NCVersion:0} 10.244.0.255:{IPAddress:10.244.0.255 NCVersion:0} 10.244.0.26:{IPAddress:10.244.0.26 NCVersion:0} 10.244.0.27:{IPAddress:10.244.0.27 NCVersion:0} 10.244.0.28:{IPAddress:10.244.0.28 NCVersion:0} 10.244.0.29:{IPAddress:10.244.0.29 NCVersion:0} 10.244.0.3:{IPAddress:10.244.0.3 NCVersion:0} 10.244.0.30:{IPAddress:10.244.0.30 NCVersion:0} 10.244.0.31:{IPAddress:10.244.0.31 NCVersion:0} 10.244.0.32:{IPAddress:10.244.0.32 NCVersion:0} 10.244.0.33:{IPAddress:10.244.0.33 NCVersion:0} 10.244.0.34:{IPAddress:10.244.0.34 NCVersion:0} 10.244.0.35:{IPAddress:10.244.0.35 NCVersion:0} 10.244.0.36:{IPAddress:10.244.0.36 NCVersion:0} 10.244.0.37:{IPAddress:10.244.0.37 NCVersion:0} 10.244.0.38:{IPAddress:10.244.0.38 NCVersion:0} 10.244.0.39:{IPAddress:10.244.0.39 NCVersion:0} 10.244.0.4:{IPAddress:10.244.0.4 NCVersion:0} 10.244.0.40:{IPAddress:10.244.0.40 NCVersion:0} 10.244.0.41:{IPAddress:10.244.0.41 NCVersion:0} 10.244.0.42:{IPAddress:10.244.0.42 NCVersion:0} 10.244.0.43:{IPAddress:10.244.0.43 NCVersion:0} 10.244.0.44:{IPAddress:10.244.0.44 NCVersion:0} 10.244.0.45:{IPAddress:10.244.0.45 NCVersion:0} 10.244.0.46:{IPAddress:10.244.0.46 NCVersion:0} 10.244.0.47:{IPAddress:10.244.0.47 NCVersion:0} 10.244.0.48:{IPAddress:10.244.0.48 NCVersion:0} 10.244.0.49:{IPAddress:10.244.0.49 NCVersion:0} 10.244.0.5:{IPAddress:10.244.0.5 NCVersion:0} 10.244.0.50:{IPAddress:10.244.0.50 NCVersion:0} 10.244.0.51:{IPAddress:10.244.0.51 NCVersion:0} 10.244.0.52:{IPAddress:10.244.0.52 NCVersion:0} 10.244.0.53:{IPAddress:10.244.0.53 NCVersion:0} 10.244.0.54:{IPAddress:10.244.0.54 NCVersion:0} 10.244.0.55:{IPAddress:10.244.0.55 NCVersion:0} 10.244.0.56:{IPAddress:10.244.0.56 NCVersion:0} 10.244.0.57:{IPAddress:10.244.0.57 NCVersion:0} 10.244.0.58:{IPAddress:10.244.0.58 NCVersion:0} 10.244.0.59:{IPAddress:10.244.0.59 NCVersion:0} 10.244.0.6:{IPAddress:10.244.0.6 NCVersion:0} 10.244.0.60:{IPAddress:10.244.0.60 NCVersion:0} 10.244.0.61:{IPAddress:10.244.0.61 NCVersion:0} 10.244.0.62:{IPAddress:10.244.0.62 NCVersion:0} 10.244.0.63:{IPAddress:10.244.0.63 NCVersion:0} 10.244.0.64:{IPAddress:10.244.0.64 NCVersion:0} 10.244.0.65:{IPAddress:10.244.0.65 NCVersion:0} 10.244.0.66:{IPAddress:10.244.0.66 NCVersion:0} 10.244.0.67:{IPAddress:10.244.0.67 NCVersion:0} 10.244.0.68:{IPAddress:10.244.0.68 NCVersion:0} 10.244.0.69:{IPAddress:10.244.0.69 NCVersion:0} 10.244.0.7:{IPAddress:10.244.0.7 NCVersion:0} 10.244.0.70:{IPAddress:10.244.0.70 NCVersion:0} 10.244.0.71:{IPAddress:10.244.0.71 NCVersion:0} 10.244.0.72:{IPAddress:10.244.0.72 NCVersion:0} 10.244.0.73:{IPAddress:10.244.0.73 NCVersion:0} 10.244.0.74:{IPAddress:10.244.0.74 NCVersion:0} 10.244.0.75:{IPAddress:10.244.0.75 NCVersion:0} 10.244.0.76:{IPAddress:10.244.0.76 NCVersion:0} 10.244.0.77:{IPAddress:10.244.0.77 NCVersion:0} 10.244.0.78:{IPAddress:10.244.0.78 NCVersion:0} 10.244.0.79:{IPAddress:10.244.0.79 NCVersion:0} 10.244.0.8:{IPAddress:10.244.0.8 NCVersion:0} 10.244.0.80:{IPAddress:10.244.0.80 NCVersion:0} 10.244.0.81:{IPAddress:10.244.0.81 NCVersion:0} 10.244.0.82:{IPAddress:10.244.0.82 NCVersion:0} 10.244.0.83:{IPAddress:10.244.0.83 NCVersion:0} 10.244.0.84:{IPAddress:10.244.0.84 NCVersion:0} 10.244.0.85:{IPAddress:10.244.0.85 NCVersion:0} 10.244.0.86:{IPAddress:10.244.0.86 NCVersion:0} 10.244.0.87:{IPAddress:10.244.0.87 NCVersion:0} 10.244.0.88:{IPAddress:10.244.0.88 NCVersion:0} 10.244.0.89:{IPAddress:10.244.0.89 NCVersion:0} 10.244.0.9:{IPAddress:10.244.0.9 NCVersion:0} 10.244.0.90:{IPAddress:10.244.0.90 NCVersion:0} 10.244.0.91:{IPAddress:10.244.0.91 NCVersion:0} 10.244.0.92:{IPAddress:10.244.0.92 NCVersion:0} 10.244.0.93:{IPAddress:10.244.0.93 NCVersion:0} 10.244.0.94:{IPAddress:10.244.0.94 NCVersion:0} 10.244.0.95:{IPAddress:10.244.0.95 NCVersion:0} 10.244.0.96:{IPAddress:10.244.0.96 NCVersion:0} 10.244.0.97:{IPAddress:10.244.0.97 NCVersion:0} 10.244.0.98:{IPAddress:10.244.0.98 NCVersion:0} 10.244.0.99:{IPAddress:10.244.0.99 NCVersion:0}], MultitenancyInfo: {EncapType: ID:0}, AllowHostToNCCommunication: false, AllowNCToHostCommunication: false, NCStatus: , NetworkInterfaceInfo: {NICType: MACAddress:}}]], PodInfo [map[]], NNC: [&{TypeMeta:{Kind: APIVersion:} ObjectMeta:{Name:aks-agentpool-29385454-vmss000009 GenerateName: Namespace:kube-system SelfLink: UID:b88adfc9-ebb0-4c07-b510-ee903a0128df ResourceVersion:428725 Generation:1 CreationTimestamp:2024-10-02 22:18:36 +0000 UTC DeletionTimestamp:<nil> DeletionGracePeriodSeconds:<nil> Labels:map[kubernetes.azure.com/podnetwork-delegationguid: kubernetes.azure.com/podnetwork-subnet: kubernetes.azure.com/podnetwork-type:overlay managed:true owner:aks-agentpool-29385454-vmss000009] Annotations:map[] OwnerReferences:[{APIVersion:v1 Kind:Node Name:aks-agentpool-29385454-vmss000009 UID:20d30808-e32f-4192-81d6-b0f2752e0a99 Controller:0xc0006e46cf BlockOwnerDeletion:0xc0006e46ce}] Finalizers:[finalizers.acn.azure.com/dnc-operations] ManagedFields:[{Manager:dnc-rc Operation:Update APIVersion:acn.azure.com/v1alpha Time:2024-10-02 22:18:36 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:metadata":{"f:finalizers":{".":{},"v:\"finalizers.acn.azure.com/dnc-operations\"":{}},"f:labels":{".":{},"f:kubernetes.azure.com/podnetwork-delegationguid":{},"f:kubernetes.azure.com/podnetwork-subnet":{},"f:kubernetes.azure.com/podnetwork-type":{},"f:managed":{},"f:owner":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"20d30808-e32f-4192-81d6-b0f2752e0a99\"}":{}}},"f:spec":{".":{},"f:requestedIPCount":{}}} Subresource:} {Manager:dnc-rc Operation:Update APIVersion:acn.azure.com/v1alpha Time:2024-10-02 22:18:37 +0000 UTC FieldsType:FieldsV1 FieldsV1:{"f:status":{".":{},"f:assignedIPCount":{},"f:networkContainers":{}}} Subresource:status}]} Spec:{RequestedIPCount:0 IPsNotInUse:[]} Status:{AssignedIPCount:256 Scaler:{BatchSize:0 ReleaseThresholdPercent:0 RequestThresholdPercent:0 MaxIPCount:0} Status: NetworkContainers:[{ID:4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d AssignmentMode:static Type:overlay PrimaryIP:10.244.0.0/24 SubnetName:routingdomain_dfe2f0f8-7278-5fa8-b703-280fe18cfed6_overlaysubnet IPAssignments:[] DefaultGateway: SubnetAddressSpace:10.244.0.0/16 Version:0 NodeIP:10.224.0.4 SubscriptionID: ResourceGroupID: VNETID: SubnetID: Status:}]}}]
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.124, IP 10.244.0.124 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.124 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.4, IP 10.244.0.4 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.4 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.23, IP 10.244.0.23 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.23 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.111, IP 10.244.0.111 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.111 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.213, IP 10.244.0.213 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.213 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.253, IP 10.244.0.253 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.253 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.158, IP 10.244.0.158 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.158 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.231, IP 10.244.0.231 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.231 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.245, IP 10.244.0.245 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.245 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.246, IP 10.244.0.246 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.246 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.54, IP 10.244.0.54 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.54 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.90, IP 10.244.0.90 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.90 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.112, IP 10.244.0.112 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.112 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.155, IP 10.244.0.155 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.155 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.242, IP 10.244.0.242 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.242 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.40, IP 10.244.0.40 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.40 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.91, IP 10.244.0.91 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.91 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.182, IP 10.244.0.182 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.182 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.243, IP 10.244.0.243 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.243 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.95, IP 10.244.0.95 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.95 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.137, IP 10.244.0.137 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.137 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.9, IP 10.244.0.9 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.9 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.222, IP 10.244.0.222 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.222 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.50, IP 10.244.0.50 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.50 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.77, IP 10.244.0.77 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.77 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.254, IP 10.244.0.254 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.254 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.12, IP 10.244.0.12 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.12 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.18, IP 10.244.0.18 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.18 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.175, IP 10.244.0.175 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.175 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.226, IP 10.244.0.226 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.226 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.236, IP 10.244.0.236 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.236 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.20, IP 10.244.0.20 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.20 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.36, IP 10.244.0.36 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.36 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.180, IP 10.244.0.180 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.180 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.144, IP 10.244.0.144 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.144 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.221, IP 10.244.0.221 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.221 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.250, IP 10.244.0.250 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.250 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.2, IP 10.244.0.2 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.2 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.53, IP 10.244.0.53 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.53 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.118, IP 10.244.0.118 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.118 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.128, IP 10.244.0.128 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.128 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.191, IP 10.244.0.191 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.191 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.87, IP 10.244.0.87 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.87 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.99, IP 10.244.0.99 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.99 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.145, IP 10.244.0.145 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.145 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.172, IP 10.244.0.172 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.172 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.174, IP 10.244.0.174 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.174 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.48, IP 10.244.0.48 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.48 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.83, IP 10.244.0.83 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.83 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.153, IP 10.244.0.153 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.153 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.159, IP 10.244.0.159 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.159 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.230, IP 10.244.0.230 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.230 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.58, IP 10.244.0.58 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.58 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.59, IP 10.244.0.59 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.59 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.148, IP 10.244.0.148 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.148 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.3, IP 10.244.0.3 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.3 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.127, IP 10.244.0.127 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.127 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.74, IP 10.244.0.74 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.74 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.192, IP 10.244.0.192 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.192 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.152, IP 10.244.0.152 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.152 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.241, IP 10.244.0.241 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.241 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.252, IP 10.244.0.252 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.252 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.46, IP 10.244.0.46 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.46 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.86, IP 10.244.0.86 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.86 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.119, IP 10.244.0.119 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.119 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.203, IP 10.244.0.203 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.203 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.7, IP 10.244.0.7 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.7 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.32, IP 10.244.0.32 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.32 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.85, IP 10.244.0.85 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.85 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.104, IP 10.244.0.104 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.104 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.200, IP 10.244.0.200 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.200 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.43, IP 10.244.0.43 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.43 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.163, IP 10.244.0.163 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.163 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.235, IP 10.244.0.235 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.235 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.84, IP 10.244.0.84 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.84 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.88, IP 10.244.0.88 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.88 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.80, IP 10.244.0.80 version to 0, programmed host nc version is -1
2024/10/02 22:18:50 [1] [Azure-Cns] Add IP 10.244.0.80 as PendingProgramming
2024/10/02 22:18:50 [1] [Azure-Cns] Set ipId 10.244.0.141, IP 10.244.0.141 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.141 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.6, IP 10.244.0.6 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.6 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.64, IP 10.244.0.64 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.64 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.136, IP 10.244.0.136 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.136 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.206, IP 10.244.0.206 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.206 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.15, IP 10.244.0.15 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.15 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.19, IP 10.244.0.19 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.19 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.103, IP 10.244.0.103 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.103 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.131, IP 10.244.0.131 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.131 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.186, IP 10.244.0.186 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.186 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.209, IP 10.244.0.209 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.209 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.42, IP 10.244.0.42 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.42 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.47, IP 10.244.0.47 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.47 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.61, IP 10.244.0.61 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.61 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.75, IP 10.244.0.75 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.75 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.107, IP 10.244.0.107 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.107 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.113, IP 10.244.0.113 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.113 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.129, IP 10.244.0.129 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.129 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.208, IP 10.244.0.208 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.208 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.16, IP 10.244.0.16 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.16 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.52, IP 10.244.0.52 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.52 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.109, IP 10.244.0.109 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.109 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.179, IP 10.244.0.179 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.179 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.223, IP 10.244.0.223 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.223 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.11, IP 10.244.0.11 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.11 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.44, IP 10.244.0.44 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.44 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.247, IP 10.244.0.247 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.247 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.224, IP 10.244.0.224 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.224 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.239, IP 10.244.0.239 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.239 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.98, IP 10.244.0.98 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.98 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.160, IP 10.244.0.160 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.160 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.232, IP 10.244.0.232 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.232 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.56, IP 10.244.0.56 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.56 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.97, IP 10.244.0.97 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.97 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.133, IP 10.244.0.133 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.133 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.237, IP 10.244.0.237 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.237 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.34, IP 10.244.0.34 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.34 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.135, IP 10.244.0.135 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.135 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.70, IP 10.244.0.70 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.70 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.126, IP 10.244.0.126 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.126 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.202, IP 10.244.0.202 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.202 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.151, IP 10.244.0.151 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.151 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.171, IP 10.244.0.171 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.171 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.194, IP 10.244.0.194 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.194 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.195, IP 10.244.0.195 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.195 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.218, IP 10.244.0.218 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.218 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.249, IP 10.244.0.249 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.249 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.22, IP 10.244.0.22 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.22 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.143, IP 10.244.0.143 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.143 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.205, IP 10.244.0.205 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.205 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.37, IP 10.244.0.37 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.37 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.187, IP 10.244.0.187 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.187 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.76, IP 10.244.0.76 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.76 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.105, IP 10.244.0.105 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.105 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.108, IP 10.244.0.108 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.108 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.123, IP 10.244.0.123 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.123 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.147, IP 10.244.0.147 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.147 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.170, IP 10.244.0.170 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.170 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.10, IP 10.244.0.10 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.10 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.71, IP 10.244.0.71 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.71 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.102, IP 10.244.0.102 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.102 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.132, IP 10.244.0.132 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.132 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.190, IP 10.244.0.190 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.190 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.238, IP 10.244.0.238 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.238 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.72, IP 10.244.0.72 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.72 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.96, IP 10.244.0.96 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.96 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.117, IP 10.244.0.117 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.117 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.210, IP 10.244.0.210 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.210 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.156, IP 10.244.0.156 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.156 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.173, IP 10.244.0.173 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.173 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.204, IP 10.244.0.204 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.204 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.214, IP 10.244.0.214 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.214 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.116, IP 10.244.0.116 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.116 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.149, IP 10.244.0.149 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.149 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.188, IP 10.244.0.188 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.188 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.198, IP 10.244.0.198 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.198 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.57, IP 10.244.0.57 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.57 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.60, IP 10.244.0.60 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.60 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.13, IP 10.244.0.13 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.13 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.197, IP 10.244.0.197 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.197 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.24, IP 10.244.0.24 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.24 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.33, IP 10.244.0.33 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.33 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.45, IP 10.244.0.45 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.45 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.101, IP 10.244.0.101 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.101 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.110, IP 10.244.0.110 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.110 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.146, IP 10.244.0.146 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.146 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.154, IP 10.244.0.154 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.154 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.184, IP 10.244.0.184 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.184 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.193, IP 10.244.0.193 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.193 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.1, IP 10.244.0.1 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.1 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.66, IP 10.244.0.66 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.66 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.240, IP 10.244.0.240 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.240 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.211, IP 10.244.0.211 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.211 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.233, IP 10.244.0.233 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.233 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.212, IP 10.244.0.212 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.212 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.30, IP 10.244.0.30 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.30 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.51, IP 10.244.0.51 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.51 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.69, IP 10.244.0.69 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.69 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.78, IP 10.244.0.78 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.78 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.39, IP 10.244.0.39 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.39 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.55, IP 10.244.0.55 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.55 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.73, IP 10.244.0.73 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.73 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.196, IP 10.244.0.196 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.196 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.14, IP 10.244.0.14 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.14 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.68, IP 10.244.0.68 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.68 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.92, IP 10.244.0.92 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.92 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.106, IP 10.244.0.106 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.106 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.115, IP 10.244.0.115 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.115 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.162, IP 10.244.0.162 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.162 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.215, IP 10.244.0.215 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.215 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.234, IP 10.244.0.234 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.234 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.29, IP 10.244.0.29 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.29 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.89, IP 10.244.0.89 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.89 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.82, IP 10.244.0.82 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.82 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.167, IP 10.244.0.167 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.167 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.251, IP 10.244.0.251 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.251 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.17, IP 10.244.0.17 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.17 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.63, IP 10.244.0.63 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.63 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.62, IP 10.244.0.62 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.62 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.120, IP 10.244.0.120 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.120 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.130, IP 10.244.0.130 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.130 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.140, IP 10.244.0.140 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.140 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.176, IP 10.244.0.176 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.176 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.255, IP 10.244.0.255 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.255 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.25, IP 10.244.0.25 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.25 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.31, IP 10.244.0.31 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.31 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.216, IP 10.244.0.216 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.216 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.21, IP 10.244.0.21 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.21 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.177, IP 10.244.0.177 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.177 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.168, IP 10.244.0.168 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.168 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.169, IP 10.244.0.169 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.169 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.67, IP 10.244.0.67 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.67 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.150, IP 10.244.0.150 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.150 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.65, IP 10.244.0.65 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.65 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.142, IP 10.244.0.142 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.142 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.8, IP 10.244.0.8 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.8 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.26, IP 10.244.0.26 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.26 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.114, IP 10.244.0.114 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.114 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.122, IP 10.244.0.122 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.122 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.138, IP 10.244.0.138 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.138 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.185, IP 10.244.0.185 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.185 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.199, IP 10.244.0.199 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.199 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.38, IP 10.244.0.38 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.38 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.93, IP 10.244.0.93 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.93 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.244, IP 10.244.0.244 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.244 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.201, IP 10.244.0.201 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.201 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.217, IP 10.244.0.217 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.217 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.100, IP 10.244.0.100 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.100 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.227, IP 10.244.0.227 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.227 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.228, IP 10.244.0.228 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.228 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.28, IP 10.244.0.28 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.28 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.79, IP 10.244.0.79 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.79 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.121, IP 10.244.0.121 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.121 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.125, IP 10.244.0.125 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.125 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.139, IP 10.244.0.139 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.139 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.248, IP 10.244.0.248 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.248 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.5, IP 10.244.0.5 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.5 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.41, IP 10.244.0.41 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.41 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.94, IP 10.244.0.94 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.94 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.157, IP 10.244.0.157 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.157 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.161, IP 10.244.0.161 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.161 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.166, IP 10.244.0.166 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.166 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.178, IP 10.244.0.178 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.178 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.189, IP 10.244.0.189 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.189 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.0, IP 10.244.0.0 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.0 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.27, IP 10.244.0.27 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.27 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.225, IP 10.244.0.225 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.225 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.229, IP 10.244.0.229 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.229 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.207, IP 10.244.0.207 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.207 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.220, IP 10.244.0.220 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.220 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.81, IP 10.244.0.81 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.81 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.219, IP 10.244.0.219 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.219 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.49, IP 10.244.0.49 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.49 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.183, IP 10.244.0.183 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.183 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.165, IP 10.244.0.165 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.165 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.181, IP 10.244.0.181 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.181 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.35, IP 10.244.0.35 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.35 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.134, IP 10.244.0.134 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.134 as PendingProgramming
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.164, IP 10.244.0.164 version to 0, programmed host nc version is -1
2024/10/02 22:18:51 [1] [Azure-Cns] Add IP 10.244.0.164 as PendingProgramming
2024/10/02 22:18:51 [1] [IP Usage] Allocated IPs: 256, Assigned IPs: 0, Available IPs: 0, PendingProgramming IPs: 256, PendingRelease IPs: 0
2024/10/02 22:18:51 [1] reconciled initial CNS state after 1 attempts
2024/10/02 22:18:51 [1] initialized and started IPAM pool monitor
2024/10/02 22:18:51 [1] Initialized controller-manager.
2024/10/02 22:18:51 [1] Starting controller-manager.
2024/10/02 22:18:51 [1] Starting IPAM Pool Monitor
2024/10/02 22:18:51 [1] Waiting for NodeNetworkConfig reconciler to start.
2024/10/02 22:18:51 [1] [ipam-pool-monitor] Starting CNS IPAM Pool Monitor
{"level":"info","ts":"2024-10-02T22:18:51Z","msg":"Starting EventSource","controller":"nodenetworkconfig","controllerGroup":"acn.azure.com","controllerKind":"NodeNetworkConfig","source":"kind source: *v1alpha.NodeNetworkConfig"}
{"level":"info","ts":"2024-10-02T22:18:51Z","msg":"Starting Controller","controller":"nodenetworkconfig","controllerGroup":"acn.azure.com","controllerKind":"NodeNetworkConfig"}
{"level":"info","ts":"2024-10-02T22:18:51Z","msg":"Starting workers","controller":"nodenetworkconfig","controllerGroup":"acn.azure.com","controllerKind":"NodeNetworkConfig","worker count":1}
2024/10/02 22:18:51 [1] [cns-rc] CRD Spec: {RequestedIPCount:0 IPsNotInUse:[]}
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.210, IP 10.244.0.210 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.210], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.210], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.25, IP 10.244.0.25 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.25], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.25], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.32, IP 10.244.0.32 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.32], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.32], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.77, IP 10.244.0.77 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.77], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.77], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.152, IP 10.244.0.152 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.152], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.152], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.163, IP 10.244.0.163 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.163], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.163], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.179, IP 10.244.0.179 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.179], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.179], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.90, IP 10.244.0.90 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.90], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.90], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.97, IP 10.244.0.97 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.97], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.97], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.126, IP 10.244.0.126 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.126], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.126], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.136, IP 10.244.0.136 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.136], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.136], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.21, IP 10.244.0.21 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.21], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.21], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.65, IP 10.244.0.65 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.65], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.65], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.79, IP 10.244.0.79 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.79], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.79], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.134, IP 10.244.0.134 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.134], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.134], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.168, IP 10.244.0.168 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.168], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.168], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.175, IP 10.244.0.175 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.175], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.175], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.12, IP 10.244.0.12 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.12], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.12], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.137, IP 10.244.0.137 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.137], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.137], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.159, IP 10.244.0.159 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.159], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.159], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.173, IP 10.244.0.173 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.173], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.173], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.192, IP 10.244.0.192 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.192], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.192], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.16, IP 10.244.0.16 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.16], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.16], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.43, IP 10.244.0.43 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.43], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.43], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.127, IP 10.244.0.127 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.127], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.127], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.187, IP 10.244.0.187 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.187], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.187], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.218, IP 10.244.0.218 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.218], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.218], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.233, IP 10.244.0.233 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.233], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.233], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.235, IP 10.244.0.235 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.235], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.235], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.33, IP 10.244.0.33 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.33], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.33], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.47, IP 10.244.0.47 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.47], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.47], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.82, IP 10.244.0.82 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.82], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.82], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.106, IP 10.244.0.106 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.106], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.106], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.188, IP 10.244.0.188 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.188], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.188], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.91, IP 10.244.0.91 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.91], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.91], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.246, IP 10.244.0.246 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.246], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.246], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.205, IP 10.244.0.205 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.205], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.205], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.50, IP 10.244.0.50 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.50], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.50], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.109, IP 10.244.0.109 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.109], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.109], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.115, IP 10.244.0.115 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.115], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.115], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.143, IP 10.244.0.143 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.143], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.143], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.145, IP 10.244.0.145 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.145], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.145], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.151, IP 10.244.0.151 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.151], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.151], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.165, IP 10.244.0.165 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.165], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.165], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.221, IP 10.244.0.221 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.221], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.221], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.242, IP 10.244.0.242 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.242], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.242], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.88, IP 10.244.0.88 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.88], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.88], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.123, IP 10.244.0.123 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.123], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.123], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.128, IP 10.244.0.128 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.128], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.128], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.202, IP 10.244.0.202 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.202], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.202], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.239, IP 10.244.0.239 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.239], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.239], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.17, IP 10.244.0.17 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.17], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.17], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.61, IP 10.244.0.61 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.61], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.61], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.172, IP 10.244.0.172 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.172], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.172], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.100, IP 10.244.0.100 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.100], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.100], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.101, IP 10.244.0.101 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.101], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.101], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.161, IP 10.244.0.161 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.161], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.161], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.208, IP 10.244.0.208 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.208], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.208], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.110, IP 10.244.0.110 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.110], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.110], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.225, IP 10.244.0.225 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.225], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.225], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.7, IP 10.244.0.7 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.7], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.7], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.42, IP 10.244.0.42 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.42], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.42], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.71, IP 10.244.0.71 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.71], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.71], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.51, IP 10.244.0.51 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.51], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.51], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.59, IP 10.244.0.59 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.59], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.59], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.203, IP 10.244.0.203 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.203], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.203], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.29, IP 10.244.0.29 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.29], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.29], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.34, IP 10.244.0.34 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.34], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.34], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.117, IP 10.244.0.117 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.117], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.117], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.181, IP 10.244.0.181 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.181], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.181], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.215, IP 10.244.0.215 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.215], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.215], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.20, IP 10.244.0.20 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.20], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.20], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.41, IP 10.244.0.41 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.41], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.41], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.92, IP 10.244.0.92 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.92], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.92], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.125, IP 10.244.0.125 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.125], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.125], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.157, IP 10.244.0.157 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.157], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.157], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.194, IP 10.244.0.194 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.194], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.194], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.200, IP 10.244.0.200 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.200], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.200], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.234, IP 10.244.0.234 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.234], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.234], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.14, IP 10.244.0.14 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.14], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.14], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.64, IP 10.244.0.64 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.64], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.64], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.72, IP 10.244.0.72 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.72], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.72], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.206, IP 10.244.0.206 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.206], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.206], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.227, IP 10.244.0.227 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.227], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.227], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.80, IP 10.244.0.80 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.80], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.80], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.147, IP 10.244.0.147 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.147], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.147], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.196, IP 10.244.0.196 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.196], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.196], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.222, IP 10.244.0.222 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.222], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.222], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.237, IP 10.244.0.237 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.237], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.237], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.249, IP 10.244.0.249 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.249], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.249], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.243, IP 10.244.0.243 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.243], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.243], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.4, IP 10.244.0.4 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.4], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.4], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.30, IP 10.244.0.30 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.30], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.30], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.40, IP 10.244.0.40 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.40], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.40], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.58, IP 10.244.0.58 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.58], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.58], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.118, IP 10.244.0.118 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.118], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.118], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.154, IP 10.244.0.154 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.154], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.154], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.183, IP 10.244.0.183 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.183], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.183], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.220, IP 10.244.0.220 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.220], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.220], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.224, IP 10.244.0.224 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.224], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.224], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.248, IP 10.244.0.248 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.248], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.248], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.13, IP 10.244.0.13 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.13], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.13], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.15, IP 10.244.0.15 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.15], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.15], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.60, IP 10.244.0.60 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.60], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.60], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.131, IP 10.244.0.131 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.131], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.131], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.189, IP 10.244.0.189 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.189], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.189], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.111, IP 10.244.0.111 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.111], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.111], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.113, IP 10.244.0.113 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.113], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.113], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.166, IP 10.244.0.166 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.166], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.166], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.195, IP 10.244.0.195 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.195], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.195], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.244, IP 10.244.0.244 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.244], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.244], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.37, IP 10.244.0.37 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.37], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.37], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.69, IP 10.244.0.69 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.69], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.69], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.120, IP 10.244.0.120 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.120], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.120], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.171, IP 10.244.0.171 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.171], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.171], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.212, IP 10.244.0.212 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.212], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.212], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.217, IP 10.244.0.217 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.217], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.217], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.46, IP 10.244.0.46 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.46], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.46], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.63, IP 10.244.0.63 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.63], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.63], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.70, IP 10.244.0.70 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.70], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.70], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.144, IP 10.244.0.144 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.144], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.144], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.213, IP 10.244.0.213 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.213], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.213], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.241, IP 10.244.0.241 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.241], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.241], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.85, IP 10.244.0.85 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.85], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.85], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.186, IP 10.244.0.186 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.186], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.186], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.207, IP 10.244.0.207 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.207], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.207], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.36, IP 10.244.0.36 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.36], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.36], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.112, IP 10.244.0.112 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.112], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.112], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.114, IP 10.244.0.114 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.114], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.114], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.121, IP 10.244.0.121 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.121], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.121], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.214, IP 10.244.0.214 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.214], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.214], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.254, IP 10.244.0.254 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.254], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.254], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.190, IP 10.244.0.190 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.190], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.190], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.240, IP 10.244.0.240 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.240], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.240], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.62, IP 10.244.0.62 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.62], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.62], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.199, IP 10.244.0.199 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.199], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.199], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.3, IP 10.244.0.3 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.3], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.3], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.52, IP 10.244.0.52 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.52], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.52], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.142, IP 10.244.0.142 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.142], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.142], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.209, IP 10.244.0.209 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.209], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.209], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.255, IP 10.244.0.255 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.255], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.255], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.99, IP 10.244.0.99 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.99], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.99], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.135, IP 10.244.0.135 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.135], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.135], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.146, IP 10.244.0.146 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.146], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.146], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.102, IP 10.244.0.102 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.102], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.102], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.232, IP 10.244.0.232 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.232], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.232], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.140, IP 10.244.0.140 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.140], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.140], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.170, IP 10.244.0.170 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.170], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.170], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.201, IP 10.244.0.201 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.201], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.201], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.53, IP 10.244.0.53 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.53], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.53], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.94, IP 10.244.0.94 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.94], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.94], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.122, IP 10.244.0.122 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.122], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.122], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.198, IP 10.244.0.198 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.198], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.198], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.49, IP 10.244.0.49 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.49], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.49], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.78, IP 10.244.0.78 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.78], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.78], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.39, IP 10.244.0.39 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.39], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.39], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.54, IP 10.244.0.54 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.54], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.54], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.98, IP 10.244.0.98 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.98], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.98], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.129, IP 10.244.0.129 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.129], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.129], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.174, IP 10.244.0.174 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.174], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.174], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.253, IP 10.244.0.253 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.253], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.253], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.27, IP 10.244.0.27 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.27], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.27], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.57, IP 10.244.0.57 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.57], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.57], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.93, IP 10.244.0.93 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.93], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.93], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.107, IP 10.244.0.107 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.107], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.107], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.149, IP 10.244.0.149 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.149], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.149], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.184, IP 10.244.0.184 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.184], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.184], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.38, IP 10.244.0.38 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.38], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.38], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.148, IP 10.244.0.148 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.148], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.148], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.182, IP 10.244.0.182 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.182], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.182], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.0, IP 10.244.0.0 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.0], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.0], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.139, IP 10.244.0.139 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.139], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.139], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.178, IP 10.244.0.178 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.178], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.178], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.81, IP 10.244.0.81 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.81], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.81], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.245, IP 10.244.0.245 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.245], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.245], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.67, IP 10.244.0.67 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.67], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.67], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.76, IP 10.244.0.76 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.76], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.76], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.185, IP 10.244.0.185 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.185], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.185], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.2, IP 10.244.0.2 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.2], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.2], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.8, IP 10.244.0.8 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.8], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.8], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.87, IP 10.244.0.87 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.87], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.87], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.160, IP 10.244.0.160 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.160], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.160], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.226, IP 10.244.0.226 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.226], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.226], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.231, IP 10.244.0.231 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.231], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.231], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.252, IP 10.244.0.252 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.252], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.252], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.1, IP 10.244.0.1 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.1], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.1], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.11, IP 10.244.0.11 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.11], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.11], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.19, IP 10.244.0.19 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.19], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.19], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.48, IP 10.244.0.48 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.48], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.48], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.180, IP 10.244.0.180 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.180], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.180], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.31, IP 10.244.0.31 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.31], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.31], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.251, IP 10.244.0.251 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.251], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.251], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.250, IP 10.244.0.250 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.250], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.250], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.86, IP 10.244.0.86 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.86], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.86], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.104, IP 10.244.0.104 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.104], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.104], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.130, IP 10.244.0.130 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.130], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.130], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.150, IP 10.244.0.150 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.150], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.150], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.153, IP 10.244.0.153 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.153], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.153], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.155, IP 10.244.0.155 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.155], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.155], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.177, IP 10.244.0.177 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.177], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.177], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Listener] Started listening on 127.0.0.1:10090.
{"level":"info","ts":"2024-10-02T22:18:51.833Z","caller":"service/main.go:921","msg":"starting fsnotify watcher to process missed Pod deletes"}
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.45, IP 10.244.0.45 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.45], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.45], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.68, IP 10.244.0.68 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.68], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.68], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.75, IP 10.244.0.75 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.75], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.75], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.132, IP 10.244.0.132 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.132], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.132], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.167, IP 10.244.0.167 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.167], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.167], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.18, IP 10.244.0.18 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.18], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.18], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.211, IP 10.244.0.211 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.211], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.211], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.216, IP 10.244.0.216 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.216], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.216], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.230, IP 10.244.0.230 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.230], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.230], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.247, IP 10.244.0.247 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.247], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.247], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.28, IP 10.244.0.28 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.28], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.28], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.74, IP 10.244.0.74 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.74], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.74], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.9, IP 10.244.0.9 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.9], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.9], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.55, IP 10.244.0.55 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.55], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.55], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.105, IP 10.244.0.105 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.105], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.105], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.204, IP 10.244.0.204 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.204], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.204], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.228, IP 10.244.0.228 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.228], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.228], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.23, IP 10.244.0.23 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.23], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.23], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.124, IP 10.244.0.124 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.124], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.124], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.133, IP 10.244.0.133 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.133], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.133], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.35, IP 10.244.0.35 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.35], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.35], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.96, IP 10.244.0.96 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.96], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.96], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.26, IP 10.244.0.26 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.26], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.26], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
{"level":"info","ts":"2024-10-02T22:18:51.833Z","caller":"fsnotify/fsnotify.go:124","msg":"listing directory","path":"/var/run/azure-vnet/deleteIDs"}
{"level":"info","ts":"2024-10-02T22:18:51.833Z","caller":"fsnotify/fsnotify.go:131","msg":"no missed deletes found"}
{"level":"info","ts":"2024-10-02T22:18:51.833Z","caller":"fsnotify/fsnotify.go:141","msg":"listening for events from fsnotify watcher"}
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.84, IP 10.244.0.84 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.84], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.84], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.119, IP 10.244.0.119 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.119], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.119], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.44, IP 10.244.0.44 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.44], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.44], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.164, IP 10.244.0.164 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.164], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.164], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.5, IP 10.244.0.5 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.5], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.5], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.10, IP 10.244.0.10 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.10], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.10], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.66, IP 10.244.0.66 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.66], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.66], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.73, IP 10.244.0.73 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.73], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.73], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.141, IP 10.244.0.141 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.141], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.141], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.191, IP 10.244.0.191 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.191], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.191], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.6, IP 10.244.0.6 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.6], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.6], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.24, IP 10.244.0.24 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.24], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.24], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.103, IP 10.244.0.103 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.103], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.103], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.138, IP 10.244.0.138 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.138], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.138], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.158, IP 10.244.0.158 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.158], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.158], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.219, IP 10.244.0.219 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.219], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.219], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.22, IP 10.244.0.22 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.22], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.22], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.83, IP 10.244.0.83 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.83], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.83], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.95, IP 10.244.0.95 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.95], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.95], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.193, IP 10.244.0.193 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.193], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.193], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.223, IP 10.244.0.223 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.223], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.223], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.89, IP 10.244.0.89 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.89], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.89], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.156, IP 10.244.0.156 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.156], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.156], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.162, IP 10.244.0.162 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.162], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.162], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.169, IP 10.244.0.169 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.169], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.169], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.197, IP 10.244.0.197 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.197], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.197], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.229, IP 10.244.0.229 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.229], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.229], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.238, IP 10.244.0.238 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.238], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.238], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.56, IP 10.244.0.56 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.56], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.56], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.108, IP 10.244.0.108 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.108], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.108], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.116, IP 10.244.0.116 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.116], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.116], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.176, IP 10.244.0.176 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.176], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.176], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [Azure-Cns] Set ipId 10.244.0.236, IP 10.244.0.236 version to 0, programmed host nc version is -1, ipState: ID: [10.244.0.236], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.236], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]
2024/10/02 22:18:51 [1] [IP Usage] Allocated IPs: 256, Assigned IPs: 0, Available IPs: 0, PendingProgramming IPs: 256, PendingRelease IPs: 0
2024/10/02 22:18:51 [1] [cns-rc] CNS NNC Reconciler Started
2024/10/02 22:18:51 [1] NodeNetworkConfig reconciler has started.
2024/10/02 22:18:51 [1] Initialized SyncHostNCVersion loop.
2024/10/02 22:18:51 [1] [Azure CNS] Start HTTP Remote server
2024/10/02 22:18:51 [1] [Azure CNS] Logging periodic NC snapshots. NC Count 1
2024/10/02 22:18:51 [1] Starting SyncHostNCVersion loop.
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.196] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.196], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.196], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.196 with uuid 10.244.0.196 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.196 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.222] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.222], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.222], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.222 with uuid 10.244.0.222 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.222 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.237] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.237], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.237], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.237 with uuid 10.244.0.237 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.237 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.249] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.249], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.249], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.249 with uuid 10.244.0.249 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.249 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.147] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.147], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.147], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.147 with uuid 10.244.0.147 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.147 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.30] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.30], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.30], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.30 with uuid 10.244.0.30 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.30 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.40] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.40], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.40], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.40 with uuid 10.244.0.40 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.40 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.58] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.58], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.58], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.58 with uuid 10.244.0.58 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.58 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.118] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.118], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.118], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.118 with uuid 10.244.0.118 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.118 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.154] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.154], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.154], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.154 with uuid 10.244.0.154 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.154 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.183] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.183], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.183], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.183 with uuid 10.244.0.183 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.183 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.243] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.243], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.243], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.243 with uuid 10.244.0.243 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.243 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.4] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.4], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.4], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.4 with uuid 10.244.0.4 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.4 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.224] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.224], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.224], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.224 with uuid 10.244.0.224 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.224 NCVersion:0}
2024/10/02 22:18:52 [1] [updateIPConfigState] Changing IpId [10.244.0.248] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.248], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.248], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:52 [1] Change ip 10.244.0.248 with uuid 10.244.0.248 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.248 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.220] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.220], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.220], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.220 with uuid 10.244.0.220 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.220 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.15] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.15], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.15], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.15 with uuid 10.244.0.15 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.15 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.60] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.60], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.60], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.60 with uuid 10.244.0.60 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.60 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.131] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.131], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.131], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.131 with uuid 10.244.0.131 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.131 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.189] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.189], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.189], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.189 with uuid 10.244.0.189 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.189 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.13] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.13], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.13], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.13 with uuid 10.244.0.13 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.13 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.113] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.113], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.113], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.113 with uuid 10.244.0.113 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.113 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.166] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.166], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.166], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.166 with uuid 10.244.0.166 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.166 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.195] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.195], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.195], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.195 with uuid 10.244.0.195 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.195 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.244] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.244], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.244], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.244 with uuid 10.244.0.244 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.244 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.111] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.111], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.111], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.111 with uuid 10.244.0.111 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.111 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.69] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.69], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.69], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.69 with uuid 10.244.0.69 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.69 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.120] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.120], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.120], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.120 with uuid 10.244.0.120 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.120 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.171] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.171], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.171], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.171 with uuid 10.244.0.171 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.171 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.212] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.212], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.212], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.212 with uuid 10.244.0.212 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.212 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.217] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.217], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.217], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.217 with uuid 10.244.0.217 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.217 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.37] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.37], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.37], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.37 with uuid 10.244.0.37 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.37 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.63] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.63], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.63], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.63 with uuid 10.244.0.63 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.63 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.70] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.70], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.70], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.70 with uuid 10.244.0.70 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.70 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.144] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.144], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.144], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.144 with uuid 10.244.0.144 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.144 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.213] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.213], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.213], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.213 with uuid 10.244.0.213 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.213 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.241] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.241], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.241], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.241 with uuid 10.244.0.241 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.241 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.46] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.46], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.46], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.46 with uuid 10.244.0.46 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.46 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.186] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.186], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.186], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.186 with uuid 10.244.0.186 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.186 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.207] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.207], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.207], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.207 with uuid 10.244.0.207 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.207 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.85] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.85], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.85], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.85 with uuid 10.244.0.85 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.85 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.112] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.112], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.112], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.112 with uuid 10.244.0.112 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.112 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.114] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.114], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.114], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.114 with uuid 10.244.0.114 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.114 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.121] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.121], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.121], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.121 with uuid 10.244.0.121 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.121 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.214] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.214], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.214], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.214 with uuid 10.244.0.214 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.214 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.36] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.36], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.36], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.36 with uuid 10.244.0.36 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.36 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.254] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.254], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.254], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.254 with uuid 10.244.0.254 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.254 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.240] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.240], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.240], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.240 with uuid 10.244.0.240 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.240 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.190] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.190], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.190], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.190 with uuid 10.244.0.190 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.190 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.199] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.199], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.199], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.199 with uuid 10.244.0.199 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.199 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.62] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.62], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.62], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.62 with uuid 10.244.0.62 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.62 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.52] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.52], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.52], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.52 with uuid 10.244.0.52 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.52 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.142] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.142], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.142], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.142 with uuid 10.244.0.142 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.142 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.209] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.209], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.209], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.209 with uuid 10.244.0.209 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.209 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.255] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.255], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.255], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.255 with uuid 10.244.0.255 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.255 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.3] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.3], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.3], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.3 with uuid 10.244.0.3 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.3 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.135] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.135], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.135], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.135 with uuid 10.244.0.135 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.135 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.146] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.146], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.146], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.146 with uuid 10.244.0.146 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.146 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.99] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.99], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.99], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.99 with uuid 10.244.0.99 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.99 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.232] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.232], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.232], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.232 with uuid 10.244.0.232 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.232 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.102] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.102], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.102], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.102 with uuid 10.244.0.102 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.102 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.170] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.170], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.170], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.170 with uuid 10.244.0.170 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.170 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.201] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.201], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.201], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.201 with uuid 10.244.0.201 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.201 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.140] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.140], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.140], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.140 with uuid 10.244.0.140 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.140 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.94] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.94], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.94], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.94 with uuid 10.244.0.94 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.94 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.122] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.122], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.122], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.122 with uuid 10.244.0.122 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.122 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.198] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.198], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.198], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.198 with uuid 10.244.0.198 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.198 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.53] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.53], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.53], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.53 with uuid 10.244.0.53 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.53 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.78] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.78], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.78], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.78 with uuid 10.244.0.78 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.78 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.49] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.49], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.49], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.49 with uuid 10.244.0.49 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.49 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.54] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.54], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.54], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.54 with uuid 10.244.0.54 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.54 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.98] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.98], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.98], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.98 with uuid 10.244.0.98 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.98 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.129] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.129], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.129], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.129 with uuid 10.244.0.129 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.129 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.174] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.174], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.174], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.174 with uuid 10.244.0.174 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.174 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.253] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.253], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.253], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.253 with uuid 10.244.0.253 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.253 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.39] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.39], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.39], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.39 with uuid 10.244.0.39 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.39 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.57] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.57], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.57], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.57 with uuid 10.244.0.57 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.57 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.93] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.93], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.93], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.93 with uuid 10.244.0.93 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.93 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.107] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.107], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.107], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.107 with uuid 10.244.0.107 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.107 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.149] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.149], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.149], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.149 with uuid 10.244.0.149 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.149 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.184] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.184], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.184], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.184 with uuid 10.244.0.184 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.184 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.27] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.27], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.27], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.27 with uuid 10.244.0.27 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.27 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.148] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.148], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.148], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.148 with uuid 10.244.0.148 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.148 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.182] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.182], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.182], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.182 with uuid 10.244.0.182 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.182 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.38] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.38], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.38], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.38 with uuid 10.244.0.38 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.38 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.139] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.139], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.139], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.139 with uuid 10.244.0.139 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.139 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.178] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.178], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.178], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.178 with uuid 10.244.0.178 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.178 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.0] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.0], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.0], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.0 with uuid 10.244.0.0 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.0 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.245] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.245], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.245], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.245 with uuid 10.244.0.245 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.245 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.81] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.81], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.81], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.81 with uuid 10.244.0.81 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.81 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.76] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.76], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.76], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.76 with uuid 10.244.0.76 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.76 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.185] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.185], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.185], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.185 with uuid 10.244.0.185 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.185 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.67] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.67], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.67], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.67 with uuid 10.244.0.67 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.67 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.8] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.8], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.8], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.8 with uuid 10.244.0.8 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.8 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.87] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.87], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.87], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.87 with uuid 10.244.0.87 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.87 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.160] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.160], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.160], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.160 with uuid 10.244.0.160 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.160 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.226] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.226], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.226], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.226 with uuid 10.244.0.226 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.226 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.231] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.231], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.231], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.231 with uuid 10.244.0.231 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.231 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.252] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.252], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.252], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.252 with uuid 10.244.0.252 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.252 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.2] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.2], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.2], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.2 with uuid 10.244.0.2 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.2 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.11] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.11], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.11], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.11 with uuid 10.244.0.11 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.11 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.19] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.19], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.19], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.19 with uuid 10.244.0.19 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.19 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.48] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.48], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.48], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.48 with uuid 10.244.0.48 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.48 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.180] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.180], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.180], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.180 with uuid 10.244.0.180 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.180 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.1] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.1], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.1], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.1 with uuid 10.244.0.1 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.1 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.251] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.251], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.251], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.251 with uuid 10.244.0.251 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.251 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.31] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.31], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.31], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.31 with uuid 10.244.0.31 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.31 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.104] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.104], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.104], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.104 with uuid 10.244.0.104 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.104 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.130] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.130], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.130], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.130 with uuid 10.244.0.130 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.130 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.150] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.150], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.150], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.150 with uuid 10.244.0.150 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.150 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.153] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.153], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.153], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.153 with uuid 10.244.0.153 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.153 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.155] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.155], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.155], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.155 with uuid 10.244.0.155 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.155 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.177] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.177], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.177], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.177 with uuid 10.244.0.177 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.177 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.250] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.250], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.250], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.250 with uuid 10.244.0.250 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.250 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.86] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.86], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.86], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.86 with uuid 10.244.0.86 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.86 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.68] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.68], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.68], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.68 with uuid 10.244.0.68 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.68 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.75] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.75], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.75], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.75 with uuid 10.244.0.75 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.75 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.132] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.132], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.132], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.132 with uuid 10.244.0.132 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.132 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.167] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.167], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.167], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.167 with uuid 10.244.0.167 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.167 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.45] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.45], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.45], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.45 with uuid 10.244.0.45 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.45 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.211] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.211], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.211], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.211 with uuid 10.244.0.211 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.211 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.216] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.216], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.216], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.216 with uuid 10.244.0.216 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.216 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.230] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.230], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.230], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.230 with uuid 10.244.0.230 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.230 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.247] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.247], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.247], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.247 with uuid 10.244.0.247 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.247 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.18] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.18], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.18], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.18 with uuid 10.244.0.18 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.18 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.74] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.74], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.74], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.74 with uuid 10.244.0.74 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.74 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.28] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.28], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.28], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.28 with uuid 10.244.0.28 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.28 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.55] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.55], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.55], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.55 with uuid 10.244.0.55 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.55 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.105] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.105], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.105], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.105 with uuid 10.244.0.105 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.105 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.204] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.204], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.204], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.204 with uuid 10.244.0.204 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.204 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.228] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.228], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.228], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.228 with uuid 10.244.0.228 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.228 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.9] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.9], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.9], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.9 with uuid 10.244.0.9 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.9 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.124] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.124], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.124], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.124 with uuid 10.244.0.124 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.124 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.133] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.133], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.133], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.133 with uuid 10.244.0.133 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.133 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.23] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.23], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.23], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.23 with uuid 10.244.0.23 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.23 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.96] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.96], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.96], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.96 with uuid 10.244.0.96 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.96 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.35] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.35], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.35], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.35 with uuid 10.244.0.35 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.35 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.84] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.84], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.84], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.84 with uuid 10.244.0.84 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.84 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.119] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.119], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.119], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.119 with uuid 10.244.0.119 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.119 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.26] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.26], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.26], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.26 with uuid 10.244.0.26 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.26 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.164] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.164], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.164], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.164 with uuid 10.244.0.164 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.164 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.44] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.44], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.44], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.44 with uuid 10.244.0.44 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.44 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.10] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.10], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.10], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.10 with uuid 10.244.0.10 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.10 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.66] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.66], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.66], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.66 with uuid 10.244.0.66 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.66 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.73] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.73], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.73], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.73 with uuid 10.244.0.73 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.73 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.141] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.141], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.141], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.141 with uuid 10.244.0.141 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.141 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.191] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.191], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.191], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.191 with uuid 10.244.0.191 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.191 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.5] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.5], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.5], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.5 with uuid 10.244.0.5 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.5 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.24] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.24], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.24], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.24 with uuid 10.244.0.24 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.24 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.103] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.103], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.103], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.103 with uuid 10.244.0.103 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.103 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.138] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.138], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.138], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.138 with uuid 10.244.0.138 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.138 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.158] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.158], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.158], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.158 with uuid 10.244.0.158 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.158 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.219] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.219], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.219], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.219 with uuid 10.244.0.219 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.219 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.6] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.6], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.6], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.6 with uuid 10.244.0.6 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.6 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.83] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.83], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.83], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.83 with uuid 10.244.0.83 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.83 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.22] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.22], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.22], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.22 with uuid 10.244.0.22 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.22 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.193] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.193], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.193], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.193 with uuid 10.244.0.193 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.193 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.223] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.223], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.223], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.223 with uuid 10.244.0.223 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.223 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.95] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.95], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.95], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.95 with uuid 10.244.0.95 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.95 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.156] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.156], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.156], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.156 with uuid 10.244.0.156 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.156 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.162] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.162], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.162], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.162 with uuid 10.244.0.162 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.162 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.169] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.169], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.169], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.169 with uuid 10.244.0.169 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.169 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.197] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.197], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.197], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.197 with uuid 10.244.0.197 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.197 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.229] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.229], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.229], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.229 with uuid 10.244.0.229 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.229 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.238] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.238], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.238], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.238 with uuid 10.244.0.238 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.238 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.89] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.89], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.89], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.89 with uuid 10.244.0.89 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.89 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.56] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.56], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.56], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.56 with uuid 10.244.0.56 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.56 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.116] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.116], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.116], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.116 with uuid 10.244.0.116 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.116 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.176] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.176], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.176], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.176 with uuid 10.244.0.176 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.176 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.236] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.236], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.236], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.236 with uuid 10.244.0.236 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.236 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.108] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.108], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.108], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.108 with uuid 10.244.0.108 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.108 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.210] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.210], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.210], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.210 with uuid 10.244.0.210 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.210 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.32] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.32], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.32], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.32 with uuid 10.244.0.32 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.32 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.25] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.25], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.25], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.25 with uuid 10.244.0.25 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.25 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.152] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.152], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.152], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.152 with uuid 10.244.0.152 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.152 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.163] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.163], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.163], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.163 with uuid 10.244.0.163 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.163 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.179] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.179], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.179], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.179 with uuid 10.244.0.179 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.179 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.77] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.77], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.77], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.77 with uuid 10.244.0.77 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.77 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.97] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.97], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.97], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.97 with uuid 10.244.0.97 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.97 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.126] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.126], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.126], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.126 with uuid 10.244.0.126 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.126 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.136] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.136], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.136], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.136 with uuid 10.244.0.136 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.136 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.90] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.90], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.90], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.90 with uuid 10.244.0.90 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.90 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.65] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.65], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.65], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.65 with uuid 10.244.0.65 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.65 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.79] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.79], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.79], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.79 with uuid 10.244.0.79 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.79 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.21] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.21], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.21], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.21 with uuid 10.244.0.21 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.21 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.168] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.168], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.168], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.168 with uuid 10.244.0.168 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.168 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.175] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.175], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.175], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.175 with uuid 10.244.0.175 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.175 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.134] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.134], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.134], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.134 with uuid 10.244.0.134 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.134 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.137] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.137], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.137], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.137 with uuid 10.244.0.137 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.137 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.159] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.159], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.159], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.159 with uuid 10.244.0.159 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.159 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.173] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.173], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.173], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.173 with uuid 10.244.0.173 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.173 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.192] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.192], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.192], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.192 with uuid 10.244.0.192 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.192 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.12] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.12], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.12], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.12 with uuid 10.244.0.12 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.12 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.43] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.43], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.43], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.43 with uuid 10.244.0.43 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.43 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.127] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.127], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.127], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.127 with uuid 10.244.0.127 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.127 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.187] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.187], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.187], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.187 with uuid 10.244.0.187 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.187 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.218] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.218], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.218], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.218 with uuid 10.244.0.218 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.218 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.233] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.233], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.233], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.233 with uuid 10.244.0.233 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.233 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.235] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.235], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.235], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.235 with uuid 10.244.0.235 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.235 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.16] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.16], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.16], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.16 with uuid 10.244.0.16 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.16 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.47] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.47], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.47], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.47 with uuid 10.244.0.47 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.47 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.82] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.82], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.82], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.82 with uuid 10.244.0.82 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.82 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.106] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.106], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.106], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.106 with uuid 10.244.0.106 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.106 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.188] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.188], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.188], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.188 with uuid 10.244.0.188 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.188 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.33] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.33], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.33], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.33 with uuid 10.244.0.33 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.33 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.246] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.246], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.246], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.246 with uuid 10.244.0.246 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.246 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.91] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.91], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.91], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.91 with uuid 10.244.0.91 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.91 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.109] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.109], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.109], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.109 with uuid 10.244.0.109 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.109 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.115] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.115], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.115], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.115 with uuid 10.244.0.115 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.115 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.143] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.143], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.143], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.143 with uuid 10.244.0.143 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.143 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.145] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.145], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.145], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.145 with uuid 10.244.0.145 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.145 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.151] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.151], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.151], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.151 with uuid 10.244.0.151 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.151 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.165] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.165], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.165], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.165 with uuid 10.244.0.165 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.165 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.205] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.205], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.205], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.205 with uuid 10.244.0.205 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.205 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.50] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.50], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.50], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.50 with uuid 10.244.0.50 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.50 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.242] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.242], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.242], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.242 with uuid 10.244.0.242 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.242 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.221] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.221], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.221], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.221 with uuid 10.244.0.221 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.221 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.123] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.123], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.123], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.123 with uuid 10.244.0.123 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.123 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.128] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.128], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.128], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.128 with uuid 10.244.0.128 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.128 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.202] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.202], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.202], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.202 with uuid 10.244.0.202 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.202 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.239] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.239], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.239], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.239 with uuid 10.244.0.239 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.239 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.88] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.88], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.88], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.88 with uuid 10.244.0.88 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.88 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.61] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.61], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.61], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.61 with uuid 10.244.0.61 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.61 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.172] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.172], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.172], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.172 with uuid 10.244.0.172 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.172 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.17] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.17], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.17], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.17 with uuid 10.244.0.17 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.17 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.101] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.101], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.101], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.101 with uuid 10.244.0.101 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.101 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.161] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.161], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.161], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.161 with uuid 10.244.0.161 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.161 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.208] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.208], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.208], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.208 with uuid 10.244.0.208 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.208 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.100] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.100], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.100], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.100 with uuid 10.244.0.100 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.100 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.225] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.225], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.225], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.225 with uuid 10.244.0.225 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.225 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.110] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.110], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.110], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.110 with uuid 10.244.0.110 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.110 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.42] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.42], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.42], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.42 with uuid 10.244.0.42 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.42 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.71] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.71], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.71], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.71 with uuid 10.244.0.71 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.71 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.7] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.7], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.7], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.7 with uuid 10.244.0.7 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.7 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.59] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.59], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.59], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.59 with uuid 10.244.0.59 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.59 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.203] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.203], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.203], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.203 with uuid 10.244.0.203 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.203 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.51] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.51], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.51], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.51 with uuid 10.244.0.51 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.51 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.34] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.34], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.34], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.34 with uuid 10.244.0.34 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.34 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.117] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.117], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.117], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.117 with uuid 10.244.0.117 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.117 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.181] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.181], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.181], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.181 with uuid 10.244.0.181 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.181 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.29] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.29], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.29], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.29 with uuid 10.244.0.29 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.29 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.41] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.41], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.41], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.41 with uuid 10.244.0.41 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.41 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.92] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.92], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.92], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.92 with uuid 10.244.0.92 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.92 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.125] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.125], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.125], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.125 with uuid 10.244.0.125 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.125 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.157] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.157], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.157], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.157 with uuid 10.244.0.157 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.157 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.194] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.194], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.194], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.194 with uuid 10.244.0.194 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.194 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.200] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.200], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.200], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.200 with uuid 10.244.0.200 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.200 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.215] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.215], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.215], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.215 with uuid 10.244.0.215 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.215 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.20] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.20], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.20], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.20 with uuid 10.244.0.20 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.20 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.234] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.234], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.234], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.234 with uuid 10.244.0.234 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.234 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.64] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.64], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.64], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.64 with uuid 10.244.0.64 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.64 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.72] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.72], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.72], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.72 with uuid 10.244.0.72 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.72 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.206] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.206], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.206], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.206 with uuid 10.244.0.206 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.206 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.227] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.227], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.227], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.227 with uuid 10.244.0.227 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.227 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.14] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.14], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.14], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:51Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.14 with uuid 10.244.0.14 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.14 NCVersion:0}
2024/10/02 22:18:53 [1] [updateIPConfigState] Changing IpId [10.244.0.80] state to [Available], podInfo [<nil>]. Current config [ID: [10.244.0.80], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.80], State: [PendingProgramming], LastStateTransition: [2024-10-02T22:18:50Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:53 [1] Change ip 10.244.0.80 with uuid 10.244.0.80 from pending programming to Available, current secondary ip configs is {IPAddress:10.244.0.80 NCVersion:0}
2024/10/02 22:18:53 [1] Updating NC 4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d host version from -1 to 0
2024/10/02 22:18:53 [1] Updated NC 4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d host version to 0
2024/10/02 22:18:54 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:001d34d4-eth0 InfraContainerID:001d34d41fa46122a2be0e25c5ed9a0d3f9816d3391cf9011896f063d12e81ae OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 111 114 101 100 110 115 45 97 117 116 111 115 99 97 108 101 114 45 54 56 57 100 98 52 54 52 57 99 45 103 112 113 98 108 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:54 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [001d34d4-eth0]
2024/10/02 22:18:54 [1] [updateIPConfigState] Changing IpId [10.244.0.223] state to [Assigned], podInfo [InfraContainerID: [001d34d41fa46122a2be0e25c5ed9a0d3f9816d3391cf9011896f063d12e81ae], InterfaceID: [001d34d4-eth0], Key: [001d34d4-eth0], Name: [coredns-autoscaler-689db4649c-gpqbl], Namespace: [kube-system]]. Current config [ID: [10.244.0.223], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.223], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:54 [1] IP config 001d34d4-eth0 initialized
2024/10/02 22:18:54 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [001d34d41fa46122a2be0e25c5ed9a0d3f9816d3391cf9011896f063d12e81ae], InterfaceID: [001d34d4-eth0], Key: [001d34d4-eth0], Name: [coredns-autoscaler-689db4649c-gpqbl], Namespace: [kube-system]
2024/10/02 22:18:54 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:001d34d4-eth0 InfraContainerID:001d34d41fa46122a2be0e25c5ed9a0d3f9816d3391cf9011896f063d12e81ae OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 111 114 101 100 110 115 45 97 117 116 111 115 99 97 108 101 114 45 54 56 57 100 98 52 54 52 57 99 45 103 112 113 98 108 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.223 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:54 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:48381eb2-eth0 InfraContainerID:48381eb27fbd92b4cdeceaf7e5092dbe051fc73bb8cbeb99b491017ebcd1c996 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 111 114 101 100 110 115 45 53 57 55 98 98 57 100 52 100 98 45 104 116 102 52 109 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:54 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [48381eb2-eth0]
2024/10/02 22:18:54 [1] [updateIPConfigState] Changing IpId [10.244.0.19] state to [Assigned], podInfo [InfraContainerID: [48381eb27fbd92b4cdeceaf7e5092dbe051fc73bb8cbeb99b491017ebcd1c996], InterfaceID: [48381eb2-eth0], Key: [48381eb2-eth0], Name: [coredns-597bb9d4db-htf4m], Namespace: [kube-system]]. Current config [ID: [10.244.0.19], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.19], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:54 [1] IP config 48381eb2-eth0 initialized
2024/10/02 22:18:54 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [48381eb27fbd92b4cdeceaf7e5092dbe051fc73bb8cbeb99b491017ebcd1c996], InterfaceID: [48381eb2-eth0], Key: [48381eb2-eth0], Name: [coredns-597bb9d4db-htf4m], Namespace: [kube-system]
2024/10/02 22:18:54 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:48381eb2-eth0 InfraContainerID:48381eb27fbd92b4cdeceaf7e5092dbe051fc73bb8cbeb99b491017ebcd1c996 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 111 114 101 100 110 115 45 53 57 55 98 98 57 100 52 100 98 45 104 116 102 52 109 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.19 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:54 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:838cf9d6-eth0 InfraContainerID:838cf9d6b258a226defef25dad79d5e9f73bd0a3a4937c7f6b9c4951cf9996e6 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 97 108 105 99 111 45 107 117 98 101 45 99 111 110 116 114 111 108 108 101 114 115 45 55 52 57 57 55 99 100 99 52 55 45 100 109 109 100 104 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 97 108 105 99 111 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:54 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [838cf9d6-eth0]
2024/10/02 22:18:54 [1] [updateIPConfigState] Changing IpId [10.244.0.18] state to [Assigned], podInfo [InfraContainerID: [838cf9d6b258a226defef25dad79d5e9f73bd0a3a4937c7f6b9c4951cf9996e6], InterfaceID: [838cf9d6-eth0], Key: [838cf9d6-eth0], Name: [calico-kube-controllers-74997cdc47-dmmdh], Namespace: [calico-system]]. Current config [ID: [10.244.0.18], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.18], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:54 [1] IP config 838cf9d6-eth0 initialized
2024/10/02 22:18:54 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [838cf9d6b258a226defef25dad79d5e9f73bd0a3a4937c7f6b9c4951cf9996e6], InterfaceID: [838cf9d6-eth0], Key: [838cf9d6-eth0], Name: [calico-kube-controllers-74997cdc47-dmmdh], Namespace: [calico-system]
2024/10/02 22:18:54 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:838cf9d6-eth0 InfraContainerID:838cf9d6b258a226defef25dad79d5e9f73bd0a3a4937c7f6b9c4951cf9996e6 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 97 108 105 99 111 45 107 117 98 101 45 99 111 110 116 114 111 108 108 101 114 115 45 55 52 57 57 55 99 100 99 52 55 45 100 109 109 100 104 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 97 108 105 99 111 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.18 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:54 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:bb156d37-eth0 InfraContainerID:bb156d372b7460391ee46ac0f53f183df7a4eed498e0679d352c48d42741e787 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 97 108 105 99 111 45 97 112 105 115 101 114 118 101 114 45 55 56 52 99 56 102 54 56 55 53 45 119 56 103 112 57 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 97 108 105 99 111 45 97 112 105 115 101 114 118 101 114 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:54 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [bb156d37-eth0]
2024/10/02 22:18:54 [1] [updateIPConfigState] Changing IpId [10.244.0.205] state to [Assigned], podInfo [InfraContainerID: [bb156d372b7460391ee46ac0f53f183df7a4eed498e0679d352c48d42741e787], InterfaceID: [bb156d37-eth0], Key: [bb156d37-eth0], Name: [calico-apiserver-784c8f6875-w8gp9], Namespace: [calico-apiserver]]. Current config [ID: [10.244.0.205], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.205], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:54 [1] IP config bb156d37-eth0 initialized
2024/10/02 22:18:54 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [bb156d372b7460391ee46ac0f53f183df7a4eed498e0679d352c48d42741e787], InterfaceID: [bb156d37-eth0], Key: [bb156d37-eth0], Name: [calico-apiserver-784c8f6875-w8gp9], Namespace: [calico-apiserver]
2024/10/02 22:18:54 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:bb156d37-eth0 InfraContainerID:bb156d372b7460391ee46ac0f53f183df7a4eed498e0679d352c48d42741e787 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 97 108 105 99 111 45 97 112 105 115 101 114 118 101 114 45 55 56 52 99 56 102 54 56 55 53 45 119 56 103 112 57 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 97 108 105 99 111 45 97 112 105 115 101 114 118 101 114 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.205 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:54 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:091de1b6-eth0 InfraContainerID:091de1b6e9cffc645bb45907377d6445b98c98476fe626bcc7a5b93db0a09dae OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 111 114 101 100 110 115 45 53 57 55 98 98 57 100 52 100 98 45 113 56 119 54 57 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:54 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [091de1b6-eth0]
2024/10/02 22:18:54 [1] [updateIPConfigState] Changing IpId [10.244.0.76] state to [Assigned], podInfo [InfraContainerID: [091de1b6e9cffc645bb45907377d6445b98c98476fe626bcc7a5b93db0a09dae], InterfaceID: [091de1b6-eth0], Key: [091de1b6-eth0], Name: [coredns-597bb9d4db-q8w69], Namespace: [kube-system]]. Current config [ID: [10.244.0.76], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.76], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:54 [1] IP config 091de1b6-eth0 initialized
2024/10/02 22:18:54 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [091de1b6e9cffc645bb45907377d6445b98c98476fe626bcc7a5b93db0a09dae], InterfaceID: [091de1b6-eth0], Key: [091de1b6-eth0], Name: [coredns-597bb9d4db-q8w69], Namespace: [kube-system]
2024/10/02 22:18:54 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:091de1b6-eth0 InfraContainerID:091de1b6e9cffc645bb45907377d6445b98c98476fe626bcc7a5b93db0a09dae OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 111 114 101 100 110 115 45 53 57 55 98 98 57 100 52 100 98 45 113 56 119 54 57 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.76 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:54 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:ae6053b6-eth0 InfraContainerID:ae6053b6ae79b0e98ce28bea7c887b7b351abc203728b0796f15ba0400b978a4 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 97 108 105 99 111 45 97 112 105 115 101 114 118 101 114 45 55 56 52 99 56 102 54 56 55 53 45 54 120 55 100 104 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 97 108 105 99 111 45 97 112 105 115 101 114 118 101 114 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:54 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [ae6053b6-eth0]
2024/10/02 22:18:54 [1] [updateIPConfigState] Changing IpId [10.244.0.181] state to [Assigned], podInfo [InfraContainerID: [ae6053b6ae79b0e98ce28bea7c887b7b351abc203728b0796f15ba0400b978a4], InterfaceID: [ae6053b6-eth0], Key: [ae6053b6-eth0], Name: [calico-apiserver-784c8f6875-6x7dh], Namespace: [calico-apiserver]]. Current config [ID: [10.244.0.181], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.181], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:54 [1] IP config ae6053b6-eth0 initialized
2024/10/02 22:18:54 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [ae6053b6ae79b0e98ce28bea7c887b7b351abc203728b0796f15ba0400b978a4], InterfaceID: [ae6053b6-eth0], Key: [ae6053b6-eth0], Name: [calico-apiserver-784c8f6875-6x7dh], Namespace: [calico-apiserver]
2024/10/02 22:18:54 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:ae6053b6-eth0 InfraContainerID:ae6053b6ae79b0e98ce28bea7c887b7b351abc203728b0796f15ba0400b978a4 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 97 108 105 99 111 45 97 112 105 115 101 114 118 101 114 45 55 56 52 99 56 102 54 56 55 53 45 54 120 55 100 104 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 97 108 105 99 111 45 97 112 105 115 101 114 118 101 114 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.181 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:f64d49f3-eth0 InfraContainerID:f64d49f3326b7d8aa977215c10adbe055c3b01cdf9d7e9776cbc6512cea2294d OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 107 111 110 110 101 99 116 105 118 105 116 121 45 97 103 101 110 116 45 53 99 55 55 54 54 52 53 54 102 45 109 102 116 98 102 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:55 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [f64d49f3-eth0]
2024/10/02 22:18:55 [1] [updateIPConfigState] Changing IpId [10.244.0.206] state to [Assigned], podInfo [InfraContainerID: [f64d49f3326b7d8aa977215c10adbe055c3b01cdf9d7e9776cbc6512cea2294d], InterfaceID: [f64d49f3-eth0], Key: [f64d49f3-eth0], Name: [konnectivity-agent-5c7766456f-mftbf], Namespace: [kube-system]]. Current config [ID: [10.244.0.206], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.206], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:55 [1] IP config f64d49f3-eth0 initialized
2024/10/02 22:18:55 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [f64d49f3326b7d8aa977215c10adbe055c3b01cdf9d7e9776cbc6512cea2294d], InterfaceID: [f64d49f3-eth0], Key: [f64d49f3-eth0], Name: [konnectivity-agent-5c7766456f-mftbf], Namespace: [kube-system]
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:f64d49f3-eth0 InfraContainerID:f64d49f3326b7d8aa977215c10adbe055c3b01cdf9d7e9776cbc6512cea2294d OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 107 111 110 110 101 99 116 105 118 105 116 121 45 97 103 101 110 116 45 53 99 55 55 54 54 52 53 54 102 45 109 102 116 98 102 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.206 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:75583fe4-eth0 InfraContainerID:75583fe4f33645938852ed80ebb1e836e18b97dedab32db31eb1a38dc0cfb96e OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 109 101 116 114 105 99 115 45 115 101 114 118 101 114 45 102 52 54 102 53 54 100 55 98 45 53 102 99 53 106 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:55 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [75583fe4-eth0]
2024/10/02 22:18:55 [1] [updateIPConfigState] Changing IpId [10.244.0.49] state to [Assigned], podInfo [InfraContainerID: [75583fe4f33645938852ed80ebb1e836e18b97dedab32db31eb1a38dc0cfb96e], InterfaceID: [75583fe4-eth0], Key: [75583fe4-eth0], Name: [metrics-server-f46f56d7b-5fc5j], Namespace: [kube-system]]. Current config [ID: [10.244.0.49], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.49], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:55 [1] IP config 75583fe4-eth0 initialized
2024/10/02 22:18:55 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [75583fe4f33645938852ed80ebb1e836e18b97dedab32db31eb1a38dc0cfb96e], InterfaceID: [75583fe4-eth0], Key: [75583fe4-eth0], Name: [metrics-server-f46f56d7b-5fc5j], Namespace: [kube-system]
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:75583fe4-eth0 InfraContainerID:75583fe4f33645938852ed80ebb1e836e18b97dedab32db31eb1a38dc0cfb96e OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 109 101 116 114 105 99 115 45 115 101 114 118 101 114 45 102 52 54 102 53 54 100 55 98 45 53 102 99 53 106 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.49 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:ec22d2f8-eth0 InfraContainerID:ec22d2f80b6c78be36c38dd717d7255e713c7e321956256f6c6b37b0b4002825 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 109 101 116 114 105 99 115 45 115 101 114 118 101 114 45 102 52 54 102 53 54 100 55 98 45 116 114 116 113 112 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:55 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [ec22d2f8-eth0]
2024/10/02 22:18:55 [1] [updateIPConfigState] Changing IpId [10.244.0.20] state to [Assigned], podInfo [InfraContainerID: [ec22d2f80b6c78be36c38dd717d7255e713c7e321956256f6c6b37b0b4002825], InterfaceID: [ec22d2f8-eth0], Key: [ec22d2f8-eth0], Name: [metrics-server-f46f56d7b-trtqp], Namespace: [kube-system]]. Current config [ID: [10.244.0.20], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.20], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:55 [1] IP config ec22d2f8-eth0 initialized
2024/10/02 22:18:55 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [ec22d2f80b6c78be36c38dd717d7255e713c7e321956256f6c6b37b0b4002825], InterfaceID: [ec22d2f8-eth0], Key: [ec22d2f8-eth0], Name: [metrics-server-f46f56d7b-trtqp], Namespace: [kube-system]
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:ec22d2f8-eth0 InfraContainerID:ec22d2f80b6c78be36c38dd717d7255e713c7e321956256f6c6b37b0b4002825 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 109 101 116 114 105 99 115 45 115 101 114 118 101 114 45 102 52 54 102 53 54 100 55 98 45 116 114 116 113 112 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.20 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:753ca539-eth0 InfraContainerID:753ca539d7f73c117b753574061870e80e1ede63fddecbd6c7b99b15aa3ae259 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 101 114 116 45 109 97 110 97 103 101 114 45 57 56 99 54 52 99 53 98 100 45 122 102 119 118 109 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 101 114 116 45 109 97 110 97 103 101 114 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:55 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [753ca539-eth0]
2024/10/02 22:18:55 [1] [updateIPConfigState] Changing IpId [10.244.0.155] state to [Assigned], podInfo [InfraContainerID: [753ca539d7f73c117b753574061870e80e1ede63fddecbd6c7b99b15aa3ae259], InterfaceID: [753ca539-eth0], Key: [753ca539-eth0], Name: [cert-manager-98c64c5bd-zfwvm], Namespace: [cert-manager]]. Current config [ID: [10.244.0.155], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.155], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:55 [1] IP config 753ca539-eth0 initialized
2024/10/02 22:18:55 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [753ca539d7f73c117b753574061870e80e1ede63fddecbd6c7b99b15aa3ae259], InterfaceID: [753ca539-eth0], Key: [753ca539-eth0], Name: [cert-manager-98c64c5bd-zfwvm], Namespace: [cert-manager]
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:753ca539-eth0 InfraContainerID:753ca539d7f73c117b753574061870e80e1ede63fddecbd6c7b99b15aa3ae259 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 101 114 116 45 109 97 110 97 103 101 114 45 57 56 99 54 52 99 53 98 100 45 122 102 119 118 109 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 101 114 116 45 109 97 110 97 103 101 114 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.155 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:d2fbd550-eth0 InfraContainerID:d2fbd5505f8236c10769f701506f4a557e46f16bd3b58dd8b3351d4ae1e5d420 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 97 107 115 45 104 101 108 108 111 119 111 114 108 100 45 111 110 101 45 55 99 56 52 100 102 55 57 56 45 118 107 115 55 53 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 100 101 102 97 117 108 116 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:55 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [d2fbd550-eth0]
2024/10/02 22:18:55 [1] [updateIPConfigState] Changing IpId [10.244.0.245] state to [Assigned], podInfo [InfraContainerID: [d2fbd5505f8236c10769f701506f4a557e46f16bd3b58dd8b3351d4ae1e5d420], InterfaceID: [d2fbd550-eth0], Key: [d2fbd550-eth0], Name: [aks-helloworld-one-7c84df798-vks75], Namespace: [default]]. Current config [ID: [10.244.0.245], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.245], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:55 [1] IP config d2fbd550-eth0 initialized
2024/10/02 22:18:55 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [d2fbd5505f8236c10769f701506f4a557e46f16bd3b58dd8b3351d4ae1e5d420], InterfaceID: [d2fbd550-eth0], Key: [d2fbd550-eth0], Name: [aks-helloworld-one-7c84df798-vks75], Namespace: [default]
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:d2fbd550-eth0 InfraContainerID:d2fbd5505f8236c10769f701506f4a557e46f16bd3b58dd8b3351d4ae1e5d420 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 97 107 115 45 104 101 108 108 111 119 111 114 108 100 45 111 110 101 45 55 99 56 52 100 102 55 57 56 45 118 107 115 55 53 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 100 101 102 97 117 108 116 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.245 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:9e55b1d3-eth0 InfraContainerID:9e55b1d322a70e27b84f7ec3bb613e4268cb0f9d119edff5f0e0279a003d1460 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 107 111 110 110 101 99 116 105 118 105 116 121 45 97 103 101 110 116 45 53 99 55 55 54 54 52 53 54 102 45 110 99 115 109 116 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:55 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [9e55b1d3-eth0]
2024/10/02 22:18:55 [1] [updateIPConfigState] Changing IpId [10.244.0.222] state to [Assigned], podInfo [InfraContainerID: [9e55b1d322a70e27b84f7ec3bb613e4268cb0f9d119edff5f0e0279a003d1460], InterfaceID: [9e55b1d3-eth0], Key: [9e55b1d3-eth0], Name: [konnectivity-agent-5c7766456f-ncsmt], Namespace: [kube-system]]. Current config [ID: [10.244.0.222], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.222], State: [Available], LastStateTransition: [2024-10-02T22:18:52Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:55 [1] IP config 9e55b1d3-eth0 initialized
2024/10/02 22:18:55 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [9e55b1d322a70e27b84f7ec3bb613e4268cb0f9d119edff5f0e0279a003d1460], InterfaceID: [9e55b1d3-eth0], Key: [9e55b1d3-eth0], Name: [konnectivity-agent-5c7766456f-ncsmt], Namespace: [kube-system]
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:9e55b1d3-eth0 InfraContainerID:9e55b1d322a70e27b84f7ec3bb613e4268cb0f9d119edff5f0e0279a003d1460 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 107 111 110 110 101 99 116 105 118 105 116 121 45 97 103 101 110 116 45 53 99 55 55 54 54 52 53 54 102 45 110 99 115 109 116 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 107 117 98 101 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.222 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:1cd989b9-eth0 InfraContainerID:1cd989b907ed366953cb90a2993bcc9ebb7b08289190d6439342c1adf9a602da OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 97 107 115 45 104 101 108 108 111 119 111 114 108 100 45 116 119 111 45 55 99 56 56 57 54 57 98 100 56 45 57 103 104 104 102 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 100 101 102 97 117 108 116 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:55 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [1cd989b9-eth0]
2024/10/02 22:18:55 [1] [updateIPConfigState] Changing IpId [10.244.0.230] state to [Assigned], podInfo [InfraContainerID: [1cd989b907ed366953cb90a2993bcc9ebb7b08289190d6439342c1adf9a602da], InterfaceID: [1cd989b9-eth0], Key: [1cd989b9-eth0], Name: [aks-helloworld-two-7c88969bd8-9ghhf], Namespace: [default]]. Current config [ID: [10.244.0.230], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.230], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:55 [1] IP config 1cd989b9-eth0 initialized
2024/10/02 22:18:55 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [1cd989b907ed366953cb90a2993bcc9ebb7b08289190d6439342c1adf9a602da], InterfaceID: [1cd989b9-eth0], Key: [1cd989b9-eth0], Name: [aks-helloworld-two-7c88969bd8-9ghhf], Namespace: [default]
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:1cd989b9-eth0 InfraContainerID:1cd989b907ed366953cb90a2993bcc9ebb7b08289190d6439342c1adf9a602da OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 97 107 115 45 104 101 108 108 111 119 111 114 108 100 45 116 119 111 45 55 99 56 56 57 54 57 98 100 56 45 57 103 104 104 102 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 100 101 102 97 117 108 116 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.230 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:b6820959-eth0 InfraContainerID:b6820959394b6ee149837ea87e848715c13a291b96dfc521025e7bf494b14bd7 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 101 114 116 45 109 97 110 97 103 101 114 45 99 97 105 110 106 101 99 116 111 114 45 53 102 54 55 98 102 54 54 55 102 45 103 108 122 119 110 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 101 114 116 45 109 97 110 97 103 101 114 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:55 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [b6820959-eth0]
2024/10/02 22:18:55 [1] [updateIPConfigState] Changing IpId [10.244.0.24] state to [Assigned], podInfo [InfraContainerID: [b6820959394b6ee149837ea87e848715c13a291b96dfc521025e7bf494b14bd7], InterfaceID: [b6820959-eth0], Key: [b6820959-eth0], Name: [cert-manager-cainjector-5f67bf667f-glzwn], Namespace: [cert-manager]]. Current config [ID: [10.244.0.24], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.24], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:55 [1] IP config b6820959-eth0 initialized
2024/10/02 22:18:55 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [b6820959394b6ee149837ea87e848715c13a291b96dfc521025e7bf494b14bd7], InterfaceID: [b6820959-eth0], Key: [b6820959-eth0], Name: [cert-manager-cainjector-5f67bf667f-glzwn], Namespace: [cert-manager]
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:b6820959-eth0 InfraContainerID:b6820959394b6ee149837ea87e848715c13a291b96dfc521025e7bf494b14bd7 OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 101 114 116 45 109 97 110 97 103 101 114 45 99 97 105 110 106 101 99 116 111 114 45 53 102 54 55 98 102 54 54 55 102 45 103 108 122 119 110 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 101 114 116 45 109 97 110 97 103 101 114 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.24 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:e3a25c3b-eth0 InfraContainerID:e3a25c3b3ae0e1dd940f95a49e5c9297c7af92886b06f756066811b574943a5e OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 101 114 116 45 109 97 110 97 103 101 114 45 119 101 98 104 111 111 107 45 55 52 57 100 52 57 55 99 57 55 45 53 57 115 122 57 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 101 114 116 45 109 97 110 97 103 101 114 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:55 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [e3a25c3b-eth0]
2024/10/02 22:18:55 [1] [updateIPConfigState] Changing IpId [10.244.0.0] state to [Assigned], podInfo [InfraContainerID: [e3a25c3b3ae0e1dd940f95a49e5c9297c7af92886b06f756066811b574943a5e], InterfaceID: [e3a25c3b-eth0], Key: [e3a25c3b-eth0], Name: [cert-manager-webhook-749d497c97-59sz9], Namespace: [cert-manager]]. Current config [ID: [10.244.0.0], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.0], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:55 [1] IP config e3a25c3b-eth0 initialized
2024/10/02 22:18:55 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [e3a25c3b3ae0e1dd940f95a49e5c9297c7af92886b06f756066811b574943a5e], InterfaceID: [e3a25c3b-eth0], Key: [e3a25c3b-eth0], Name: [cert-manager-webhook-749d497c97-59sz9], Namespace: [cert-manager]
2024/10/02 22:18:55 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:e3a25c3b-eth0 InfraContainerID:e3a25c3b3ae0e1dd940f95a49e5c9297c7af92886b06f756066811b574943a5e OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 101 114 116 45 109 97 110 97 103 101 114 45 119 101 98 104 111 111 107 45 55 52 57 100 52 57 55 99 57 55 45 53 57 115 122 57 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 101 114 116 45 109 97 110 97 103 101 114 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.0 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:56 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:69ba6a9c-eth0 InfraContainerID:69ba6a9cddc449d1e2d4c072005717b5935eb921c5ae158e2cd7bf1abd144dcf OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 109 121 45 110 103 105 110 120 45 105 110 103 114 101 115 115 45 105 110 103 114 101 115 115 45 110 103 105 110 120 45 99 111 110 116 114 111 108 108 101 114 45 53 100 56 102 56 98 52 57 52 57 45 112 112 50 112 109 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 100 101 102 97 117 108 116 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:56 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [69ba6a9c-eth0]
2024/10/02 22:18:56 [1] [updateIPConfigState] Changing IpId [10.244.0.72] state to [Assigned], podInfo [InfraContainerID: [69ba6a9cddc449d1e2d4c072005717b5935eb921c5ae158e2cd7bf1abd144dcf], InterfaceID: [69ba6a9c-eth0], Key: [69ba6a9c-eth0], Name: [my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm], Namespace: [default]]. Current config [ID: [10.244.0.72], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.72], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:56 [1] IP config 69ba6a9c-eth0 initialized
2024/10/02 22:18:56 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [69ba6a9cddc449d1e2d4c072005717b5935eb921c5ae158e2cd7bf1abd144dcf], InterfaceID: [69ba6a9c-eth0], Key: [69ba6a9c-eth0], Name: [my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm], Namespace: [default]
2024/10/02 22:18:56 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:69ba6a9c-eth0 InfraContainerID:69ba6a9cddc449d1e2d4c072005717b5935eb921c5ae158e2cd7bf1abd144dcf OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 109 121 45 110 103 105 110 120 45 105 110 103 114 101 115 115 45 105 110 103 114 101 115 115 45 110 103 105 110 120 45 99 111 110 116 114 111 108 108 101 114 45 53 100 56 102 56 98 52 57 52 57 45 112 112 50 112 109 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 100 101 102 97 117 108 116 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.72 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
2024/10/02 22:18:56 [1] [azure-cnsrequestIPConfigsHandler] Received cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:76f4d02d-eth0 InfraContainerID:76f4d02d647b02675c6a72c1f90fbc1dc5480aa914c273b6dbfc2b57ef65866c OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 115 105 45 110 111 100 101 45 100 114 105 118 101 114 45 50 109 98 118 103 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 97 108 105 99 111 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false}.
2024/10/02 22:18:56 [1] [GetExistingIPConfig] IPConfigExists [false] for pod [76f4d02d-eth0]
2024/10/02 22:18:56 [1] [updateIPConfigState] Changing IpId [10.244.0.234] state to [Assigned], podInfo [InfraContainerID: [76f4d02d647b02675c6a72c1f90fbc1dc5480aa914c273b6dbfc2b57ef65866c], InterfaceID: [76f4d02d-eth0], Key: [76f4d02d-eth0], Name: [csi-node-driver-2mbvg], Namespace: [calico-system]]. Current config [ID: [10.244.0.234], NCID: [4f1633bb-1ce0-4b84-bec8-c840a7d2ea6d], IPAddress: [10.244.0.234], State: [Available], LastStateTransition: [2024-10-02T22:18:53Z] PodInfo: [%!s(<nil>)]]
2024/10/02 22:18:56 [1] IP config 76f4d02d-eth0 initialized
2024/10/02 22:18:56 [1] [AssignDesiredIPConfigs] Successfully assigned IPs for pod InfraContainerID: [76f4d02d647b02675c6a72c1f90fbc1dc5480aa914c273b6dbfc2b57ef65866c], InterfaceID: [76f4d02d-eth0], Key: [76f4d02d-eth0], Name: [csi-node-driver-2mbvg], Namespace: [calico-system]
2024/10/02 22:18:56 [1] [azure-cnsrequestIPConfigsHandler] Sent cns.IPConfigsRequest {DesiredIPAddresses:[] PodInterfaceID:76f4d02d-eth0 InfraContainerID:76f4d02d647b02675c6a72c1f90fbc1dc5480aa914c273b6dbfc2b57ef65866c OrchestratorContext:[123 34 80 111 100 78 97 109 101 34 58 34 99 115 105 45 110 111 100 101 45 100 114 105 118 101 114 45 50 109 98 118 103 34 44 34 80 111 100 78 97 109 101 115 112 97 99 101 34 58 34 99 97 108 105 99 111 45 115 121 115 116 101 109 34 125] Ifname: SecondaryInterfacesExist:false} *cns.IPConfigsResponse &{PodIPInfo:[{PodIPConfig:{IPAddress:10.244.0.234 PrefixLength:16} NetworkContainerPrimaryIPConfig:{IPSubnet:{IPAddress:10.244.0.0 PrefixLength:16} DNSServers:[] GatewayIPAddress:} HostPrimaryIPInfo:{Gateway:10.224.0.1 PrimaryIP:10.224.0.4 Subnet:10.224.0.0/16} NICType:InfraNIC InterfaceName: MacAddress: SkipDefaultRoutes:false Routes:[]}] Response:{ReturnCode:Success Message:}}.
==== END logs for container cns-container of pod kube-system/azure-cns-xrz8n ====
==== START logs for container azure-ip-masq-agent of pod kube-system/azure-ip-masq-agent-dqfzl ====
I1002 22:18:52.742357       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:18:52.760517       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:19:52.926831       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:19:52.926953       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:20:52.987404       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:20:52.987527       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:21:53.070320       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:21:53.070448       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:22:53.115068       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:22:53.115188       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:23:53.171608       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:23:53.171734       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:24:53.251051       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:24:53.251173       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:25:53.331068       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:25:53.331181       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:26:53.385920       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:26:53.386058       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:27:53.407380       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:27:53.407518       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:28:53.434976       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:28:53.435106       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:29:53.510097       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:29:53.510220       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:30:53.536282       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:30:53.536437       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:31:53.612486       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:31:53.612670       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:32:53.688040       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:32:53.688166       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:33:53.755987       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:33:53.756106       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
==== END logs for container azure-ip-masq-agent of pod kube-system/azure-ip-masq-agent-dqfzl ====
==== START logs for container azure-ip-masq-agent of pod kube-system/azure-ip-masq-agent-g2j7r ====
I1002 22:18:41.491659       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:18:41.498830       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:19:41.638495       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:19:41.638715       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:20:41.698240       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:20:41.698431       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:21:41.754837       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:21:41.755032       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:22:41.773525       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:22:41.773690       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:23:41.850679       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:23:41.850832       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:24:41.923174       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:24:41.923376       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:25:42.010621       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:25:42.010774       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:26:42.053246       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:26:42.053392       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:27:42.133929       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:27:42.134100       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:28:42.163631       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:28:42.163806       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:29:42.254742       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:29:42.254916       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:30:42.324330       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:30:42.324498       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:31:42.360405       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:31:42.360583       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:32:42.431454       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:32:42.431634       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
I1002 22:33:42.513412       1 ip-masq-agent.go:211] syncing config file "ip-masq-agent-reconciled" at "/etc/config/"
I1002 22:33:42.513587       1 ip-masq-agent.go:199] using config: {"nonMasqueradeCIDRs":["10.244.0.0/16"],"masqLinkLocal":true,"masqLinkLocalIPv6":false}
==== END logs for container azure-ip-masq-agent of pod kube-system/azure-ip-masq-agent-g2j7r ====
==== START logs for container cloud-node-manager of pod kube-system/cloud-node-manager-mdtqw ====
W1002 22:19:00.488049       1 client_config.go:618] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.
I1002 22:19:01.120564       1 nodemanager.go:103] Version: v1.29.9
I1002 22:19:01.120595       1 nodemanager.go:104] NodeName: aks-agentpool-29385454-vmss000008
I1002 22:19:01.239344       1 nodemanager.go:147] Sending events to api server.
I1002 22:19:01.239567       1 nodemanager.go:148] Started cloud-node-manager
I1002 22:19:01.430097       1 nodemanager.go:368] Initializing node aks-agentpool-29385454-vmss000008 with cloud provider
I1002 22:19:01.629440       1 nodemanager.go:431] Successfully initialized node aks-agentpool-29385454-vmss000008 with cloud provider
==== END logs for container cloud-node-manager of pod kube-system/cloud-node-manager-mdtqw ====
==== START logs for container cloud-node-manager of pod kube-system/cloud-node-manager-tjt2c ====
W1002 22:18:44.829279       1 client_config.go:618] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.
I1002 22:18:45.044400       1 nodemanager.go:103] Version: v1.29.9
I1002 22:18:45.044433       1 nodemanager.go:104] NodeName: aks-agentpool-29385454-vmss000009
I1002 22:18:45.083646       1 nodemanager.go:147] Sending events to api server.
I1002 22:18:45.083994       1 nodemanager.go:148] Started cloud-node-manager
I1002 22:18:45.233792       1 nodemanager.go:368] Initializing node aks-agentpool-29385454-vmss000009 with cloud provider
I1002 22:18:45.336912       1 nodemanager.go:431] Successfully initialized node aks-agentpool-29385454-vmss000009 with cloud provider
==== END logs for container cloud-node-manager of pod kube-system/cloud-node-manager-tjt2c ====
==== START logs for container coredns of pod kube-system/coredns-597bb9d4db-htf4m ====
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
.:53
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[INFO] plugin/reload: Running configuration SHA512 = 92111fa1e1a60ab7b1ebec33c486122dc5b9c62c4d330934ea19674b92e1efa468cbdc35e334098e011c5ceac933895849fbf12a3956d5b362171679efb9a67c
CoreDNS-1.9.4
linux/amd64, go1.22.5, 87f1b4b7
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
==== END logs for container coredns of pod kube-system/coredns-597bb9d4db-htf4m ====
==== START logs for container coredns of pod kube-system/coredns-597bb9d4db-q8w69 ====
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
.:53
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[INFO] plugin/reload: Running configuration SHA512 = 92111fa1e1a60ab7b1ebec33c486122dc5b9c62c4d330934ea19674b92e1efa468cbdc35e334098e011c5ceac933895849fbf12a3956d5b362171679efb9a67c
CoreDNS-1.9.4
linux/amd64, go1.22.5, 87f1b4b7
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
[WARNING] No files matching import glob pattern: custom/*.override
[WARNING] No files matching import glob pattern: custom/*.server
==== END logs for container coredns of pod kube-system/coredns-597bb9d4db-q8w69 ====
==== START logs for container autoscaler of pod kube-system/coredns-autoscaler-689db4649c-gpqbl ====
I1002 22:18:55.532009       1 autoscaler.go:49] Scaling Namespace: kube-system, Target: deployment/coredns
I1002 22:18:55.790339       1 plugin.go:50] Set control mode to ladder
I1002 22:18:55.790386       1 ladder_controller.go:72] Detected ConfigMap version change (old:  new: 1004) - rebuilding lookup entries
I1002 22:18:55.790393       1 ladder_controller.go:73] Params from apiserver: 
{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}
==== END logs for container autoscaler of pod kube-system/coredns-autoscaler-689db4649c-gpqbl ====
==== START logs for container liveness-probe of pod kube-system/csi-azuredisk-node-789r7 ====
W1002 22:19:00.286906       1 connection.go:234] Still connecting to unix:///csi/csi.sock
I1002 22:19:02.921094       1 main.go:133] "Calling CSI driver to discover driver name"
I1002 22:19:02.923920       1 main.go:141] "CSI driver name" driver="disk.csi.azure.com"
I1002 22:19:02.923937       1 main.go:170] "ServeMux listening" address="0.0.0.0:29603"
==== END logs for container liveness-probe of pod kube-system/csi-azuredisk-node-789r7 ====
==== START logs for container node-driver-registrar of pod kube-system/csi-azuredisk-node-789r7 ====
I1002 22:18:53.272295       1 main.go:135] Version: v2.10.1-0-gd145202d
I1002 22:18:53.310449       1 main.go:136] Running node-driver-registrar in mode=
I1002 22:18:53.310456       1 main.go:157] Attempting to open a gRPC connection with: "/csi/csi.sock"
I1002 22:19:02.443821       1 main.go:164] Calling CSI driver to discover driver name
I1002 22:19:02.447130       1 main.go:173] CSI driver name: "disk.csi.azure.com"
I1002 22:19:02.447202       1 node_register.go:55] Starting Registration Server at: /registration/disk.csi.azure.com-reg.sock
I1002 22:19:02.447362       1 node_register.go:64] Registration Server started at: /registration/disk.csi.azure.com-reg.sock
I1002 22:19:02.447542       1 node_register.go:88] Skipping HTTP server because endpoint is set to: ""
I1002 22:19:03.025384       1 main.go:90] Received GetInfo call: &InfoRequest{}
I1002 22:19:03.075218       1 main.go:101] Received NotifyRegistrationStatus call: &RegistrationStatus{PluginRegistered:true,Error:,}
==== END logs for container node-driver-registrar of pod kube-system/csi-azuredisk-node-789r7 ====
==== START logs for container azuredisk of pod kube-system/csi-azuredisk-node-789r7 ====
I1002 22:19:00.421522       1 azuredisk.go:213] 
DRIVER INFORMATION:
-------------------
Build Date: "2024-08-28T14:18:12Z"
Compiler: gc
Driver Name: disk.csi.azure.com
Driver Version: v1.29.9
Git Commit: 475d0db339133401d7ef558b6adace6b6fa1359b
Go Version: go1.22.5
Platform: linux/amd64
Topology Key: topology.disk.csi.azure.com/zone

Streaming logs below:
I1002 22:19:00.517411       1 azuredisk.go:216] driver userAgent: disk.csi.azure.com/v1.29.9
I1002 22:19:01.096615       1 azure_disk_utils.go:177] reading cloud config from secret kube-system/azure-cloud-provider
I1002 22:19:01.267681       1 azure_disk_utils.go:187] InitializeCloudFromSecret: failed to get cloud config from secret kube-system/azure-cloud-provider: secrets "azure-cloud-provider" is forbidden: User "system:serviceaccount:kube-system:csi-azuredisk-node-sa" cannot get resource "secrets" in API group "" in the namespace "kube-system"
I1002 22:19:01.267695       1 azure_disk_utils.go:196] could not read cloud config from secret kube-system/azure-cloud-provider
I1002 22:19:01.267706       1 azure_disk_utils.go:199] AZURE_CREDENTIAL_FILE env var set as /etc/kubernetes/azure.json
I1002 22:19:01.267729       1 azure_disk_utils.go:214] read cloud config from file: /etc/kubernetes/azure.json successfully
I1002 22:19:01.304174       1 azure_auth.go:279] Using AzurePublicCloud environment
I1002 22:19:01.304243       1 azure.go:918] Azure cloudprovider using try backoff: retries=6, exponent=1.500000, duration=5, jitter=1.000000
I1002 22:19:01.419327       1 azure_auth.go:130] azure: using managed identity extension to retrieve access token
I1002 22:19:01.419344       1 azure_auth.go:136] azure: using User Assigned MSI ID to retrieve access token
I1002 22:19:01.419398       1 azure_auth.go:147] azure: User Assigned MSI ID is client ID
I1002 22:19:01.497806       1 azure_interfaceclient.go:74] Azure InterfacesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.497827       1 azure_interfaceclient.go:77] Azure InterfacesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.517904       1 azure_vmsizeclient.go:68] Azure VirtualMachineSizesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.517923       1 azure_vmsizeclient.go:71] Azure VirtualMachineSizesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.540106       1 azure_storageaccountclient.go:70] Azure StorageAccountClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.540128       1 azure_storageaccountclient.go:73] Azure StorageAccountClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.588548       1 azure_diskclient.go:68] Azure DisksClient using API version: 2022-07-02
I1002 22:19:01.588587       1 azure_vmclient.go:70] Azure VirtualMachine client (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.588596       1 azure_vmclient.go:73] Azure VirtualMachine client (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.588605       1 azure_vmssclient.go:70] Azure VirtualMachineScaleSetClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.588611       1 azure_vmssclient.go:73] Azure VirtualMachineScaleSetClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.588621       1 azure_vmssvmclient.go:75] Azure vmssVM client (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.588627       1 azure_vmssvmclient.go:78] Azure vmssVM client (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.588641       1 azure_routeclient.go:69] Azure RoutesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.588654       1 azure_routeclient.go:72] Azure RoutesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.612623       1 azure_subnetclient.go:70] Azure SubnetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.612643       1 azure_subnetclient.go:73] Azure SubnetsClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.612662       1 azure_routetableclient.go:69] Azure RouteTablesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.612668       1 azure_routetableclient.go:72] Azure RouteTablesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.612678       1 azure_loadbalancerclient.go:74] Azure LoadBalancersClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.612684       1 azure_loadbalancerclient.go:77] Azure LoadBalancersClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.612695       1 azure_securitygroupclient.go:70] Azure SecurityGroupsClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.612703       1 azure_securitygroupclient.go:73] Azure SecurityGroupsClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.632745       1 azure_publicipclient.go:74] Azure PublicIPAddressesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.632777       1 azure_publicipclient.go:77] Azure PublicIPAddressesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.654444       1 azure_blobclient.go:73] Azure BlobClient using API version: 2021-09-01
I1002 22:19:01.654471       1 azure_vmasclient.go:70] Azure AvailabilitySetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:01.654478       1 azure_vmasclient.go:73] Azure AvailabilitySetsClient  (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:01.677384       1 azure.go:1166] attach/detach disk operation rate limit QPS: 6.000000, Bucket: 10
I1002 22:19:01.677409       1 azure.go:717] attach/detach disk operation rate limit QPS: 6.000000, Bucket: 10
I1002 22:19:01.677464       1 skus.go:121] NewNodeInfo: Starting to populate node and disk sku information.
I1002 22:19:02.111739       1 mount_linux.go:282] Detected umount with safe 'not mounted' behavior
I1002 22:19:02.111823       1 driver.go:82] Enabling controller service capability: CREATE_DELETE_VOLUME
I1002 22:19:02.111837       1 driver.go:82] Enabling controller service capability: PUBLISH_UNPUBLISH_VOLUME
I1002 22:19:02.111841       1 driver.go:82] Enabling controller service capability: CREATE_DELETE_SNAPSHOT
I1002 22:19:02.111845       1 driver.go:82] Enabling controller service capability: CLONE_VOLUME
I1002 22:19:02.111848       1 driver.go:82] Enabling controller service capability: EXPAND_VOLUME
I1002 22:19:02.111851       1 driver.go:82] Enabling controller service capability: SINGLE_NODE_MULTI_WRITER
I1002 22:19:02.111856       1 driver.go:101] Enabling volume access mode: SINGLE_NODE_WRITER
I1002 22:19:02.111865       1 driver.go:101] Enabling volume access mode: SINGLE_NODE_READER_ONLY
I1002 22:19:02.111868       1 driver.go:101] Enabling volume access mode: SINGLE_NODE_SINGLE_WRITER
I1002 22:19:02.111871       1 driver.go:101] Enabling volume access mode: SINGLE_NODE_MULTI_WRITER
I1002 22:19:02.111879       1 driver.go:92] Enabling node service capability: STAGE_UNSTAGE_VOLUME
I1002 22:19:02.111887       1 driver.go:92] Enabling node service capability: EXPAND_VOLUME
I1002 22:19:02.111890       1 driver.go:92] Enabling node service capability: GET_VOLUME_STATS
I1002 22:19:02.111893       1 driver.go:92] Enabling node service capability: SINGLE_NODE_MULTI_WRITER
I1002 22:19:02.112097       1 server.go:124] Listening for connections on address: &net.UnixAddr{Name:"//csi/csi.sock", Net:"unix"}
I1002 22:19:02.444618       1 utils.go:77] GRPC call: /csi.v1.Identity/GetPluginInfo
I1002 22:19:02.444637       1 utils.go:78] GRPC request: {}
I1002 22:19:02.445623       1 utils.go:84] GRPC response: {"name":"disk.csi.azure.com","vendor_version":"v1.29.9"}
I1002 22:19:02.922618       1 utils.go:77] GRPC call: /csi.v1.Identity/GetPluginInfo
I1002 22:19:02.922643       1 utils.go:78] GRPC request: {}
I1002 22:19:02.922755       1 utils.go:84] GRPC response: {"name":"disk.csi.azure.com","vendor_version":"v1.29.9"}
I1002 22:19:03.026561       1 utils.go:77] GRPC call: /csi.v1.Node/NodeGetInfo
I1002 22:19:03.026576       1 utils.go:78] GRPC request: {}
I1002 22:19:03.026650       1 azure_zones.go:168] Availability zone is not enabled for the node, falling back to fault domain
I1002 22:19:03.026692       1 nodeserver.go:350] NodeGetInfo, nodeName: aks-agentpool-29385454-vmss000008, failureDomain: 0
I1002 22:19:03.026793       1 nodeserver.go:431] got a matching size in getMaxDataDiskCount, VM Size: STANDARD_D4DS_V5, MaxDataDiskCount: 8
I1002 22:19:03.026808       1 utils.go:84] GRPC response: {"accessible_topology":{"segments":{"topology.disk.csi.azure.com/zone":""}},"max_volumes_per_node":8,"node_id":"aks-agentpool-29385454-vmss000008"}
==== END logs for container azuredisk of pod kube-system/csi-azuredisk-node-789r7 ====
==== START logs for container liveness-probe of pod kube-system/csi-azuredisk-node-pkxll ====
I1002 22:18:48.117949       1 main.go:133] "Calling CSI driver to discover driver name"
I1002 22:18:48.131807       1 main.go:141] "CSI driver name" driver="disk.csi.azure.com"
I1002 22:18:48.131837       1 main.go:170] "ServeMux listening" address="0.0.0.0:29603"
==== END logs for container liveness-probe of pod kube-system/csi-azuredisk-node-pkxll ====
==== START logs for container node-driver-registrar of pod kube-system/csi-azuredisk-node-pkxll ====
I1002 22:18:43.055463       1 main.go:135] Version: v2.10.1-0-gd145202d
I1002 22:18:43.072216       1 main.go:136] Running node-driver-registrar in mode=
I1002 22:18:43.072224       1 main.go:157] Attempting to open a gRPC connection with: "/csi/csi.sock"
I1002 22:18:48.270555       1 main.go:164] Calling CSI driver to discover driver name
I1002 22:18:48.273939       1 main.go:173] CSI driver name: "disk.csi.azure.com"
I1002 22:18:48.273981       1 node_register.go:55] Starting Registration Server at: /registration/disk.csi.azure.com-reg.sock
I1002 22:18:48.274404       1 node_register.go:64] Registration Server started at: /registration/disk.csi.azure.com-reg.sock
I1002 22:18:48.274675       1 node_register.go:88] Skipping HTTP server because endpoint is set to: ""
I1002 22:18:48.600927       1 main.go:90] Received GetInfo call: &InfoRequest{}
I1002 22:18:48.662841       1 main.go:101] Received NotifyRegistrationStatus call: &RegistrationStatus{PluginRegistered:true,Error:,}
==== END logs for container node-driver-registrar of pod kube-system/csi-azuredisk-node-pkxll ====
==== START logs for container azuredisk of pod kube-system/csi-azuredisk-node-pkxll ====
I1002 22:18:46.838827       1 azuredisk.go:213] 
DRIVER INFORMATION:
-------------------
Build Date: "2024-08-28T14:18:12Z"
Compiler: gc
Driver Name: disk.csi.azure.com
Driver Version: v1.29.9
Git Commit: 475d0db339133401d7ef558b6adace6b6fa1359b
Go Version: go1.22.5
Platform: linux/amd64
Topology Key: topology.disk.csi.azure.com/zone

Streaming logs below:
I1002 22:18:46.873843       1 azuredisk.go:216] driver userAgent: disk.csi.azure.com/v1.29.9
I1002 22:18:47.101574       1 azure_disk_utils.go:177] reading cloud config from secret kube-system/azure-cloud-provider
I1002 22:18:47.215999       1 azure_disk_utils.go:187] InitializeCloudFromSecret: failed to get cloud config from secret kube-system/azure-cloud-provider: secrets "azure-cloud-provider" is forbidden: User "system:serviceaccount:kube-system:csi-azuredisk-node-sa" cannot get resource "secrets" in API group "" in the namespace "kube-system"
I1002 22:18:47.216024       1 azure_disk_utils.go:196] could not read cloud config from secret kube-system/azure-cloud-provider
I1002 22:18:47.216032       1 azure_disk_utils.go:199] AZURE_CREDENTIAL_FILE env var set as /etc/kubernetes/azure.json
I1002 22:18:47.216062       1 azure_disk_utils.go:214] read cloud config from file: /etc/kubernetes/azure.json successfully
I1002 22:18:47.247140       1 azure_auth.go:279] Using AzurePublicCloud environment
I1002 22:18:47.247253       1 azure.go:918] Azure cloudprovider using try backoff: retries=6, exponent=1.500000, duration=5, jitter=1.000000
I1002 22:18:47.288846       1 azure_auth.go:130] azure: using managed identity extension to retrieve access token
I1002 22:18:47.288884       1 azure_auth.go:136] azure: using User Assigned MSI ID to retrieve access token
I1002 22:18:47.288953       1 azure_auth.go:147] azure: User Assigned MSI ID is client ID
I1002 22:18:47.309714       1 azure_interfaceclient.go:74] Azure InterfacesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.309742       1 azure_interfaceclient.go:77] Azure InterfacesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.318608       1 azure_vmsizeclient.go:68] Azure VirtualMachineSizesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.318631       1 azure_vmsizeclient.go:71] Azure VirtualMachineSizesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.326994       1 azure_storageaccountclient.go:70] Azure StorageAccountClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.327025       1 azure_storageaccountclient.go:73] Azure StorageAccountClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.342175       1 azure_diskclient.go:68] Azure DisksClient using API version: 2022-07-02
I1002 22:18:47.342235       1 azure_vmclient.go:70] Azure VirtualMachine client (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.342246       1 azure_vmclient.go:73] Azure VirtualMachine client (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.342256       1 azure_vmssclient.go:70] Azure VirtualMachineScaleSetClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.342261       1 azure_vmssclient.go:73] Azure VirtualMachineScaleSetClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.342271       1 azure_vmssvmclient.go:75] Azure vmssVM client (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.342276       1 azure_vmssvmclient.go:78] Azure vmssVM client (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.342288       1 azure_routeclient.go:69] Azure RoutesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.342293       1 azure_routeclient.go:72] Azure RoutesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.349824       1 azure_subnetclient.go:70] Azure SubnetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.349859       1 azure_subnetclient.go:73] Azure SubnetsClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.349873       1 azure_routetableclient.go:69] Azure RouteTablesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.349877       1 azure_routetableclient.go:72] Azure RouteTablesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.349887       1 azure_loadbalancerclient.go:74] Azure LoadBalancersClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.349891       1 azure_loadbalancerclient.go:77] Azure LoadBalancersClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.349909       1 azure_securitygroupclient.go:70] Azure SecurityGroupsClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.349913       1 azure_securitygroupclient.go:73] Azure SecurityGroupsClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.357459       1 azure_publicipclient.go:74] Azure PublicIPAddressesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.357486       1 azure_publicipclient.go:77] Azure PublicIPAddressesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.364537       1 azure_blobclient.go:73] Azure BlobClient using API version: 2021-09-01
I1002 22:18:47.364589       1 azure_vmasclient.go:70] Azure AvailabilitySetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:47.364617       1 azure_vmasclient.go:73] Azure AvailabilitySetsClient  (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:47.373079       1 azure.go:1166] attach/detach disk operation rate limit QPS: 6.000000, Bucket: 10
I1002 22:18:47.373124       1 azure.go:717] attach/detach disk operation rate limit QPS: 6.000000, Bucket: 10
I1002 22:18:47.373219       1 skus.go:121] NewNodeInfo: Starting to populate node and disk sku information.
I1002 22:18:47.599232       1 mount_linux.go:282] Detected umount with safe 'not mounted' behavior
I1002 22:18:47.599341       1 driver.go:82] Enabling controller service capability: CREATE_DELETE_VOLUME
I1002 22:18:47.599348       1 driver.go:82] Enabling controller service capability: PUBLISH_UNPUBLISH_VOLUME
I1002 22:18:47.599351       1 driver.go:82] Enabling controller service capability: CREATE_DELETE_SNAPSHOT
I1002 22:18:47.599354       1 driver.go:82] Enabling controller service capability: CLONE_VOLUME
I1002 22:18:47.599357       1 driver.go:82] Enabling controller service capability: EXPAND_VOLUME
I1002 22:18:47.599360       1 driver.go:82] Enabling controller service capability: SINGLE_NODE_MULTI_WRITER
I1002 22:18:47.599364       1 driver.go:101] Enabling volume access mode: SINGLE_NODE_WRITER
I1002 22:18:47.599367       1 driver.go:101] Enabling volume access mode: SINGLE_NODE_READER_ONLY
I1002 22:18:47.599369       1 driver.go:101] Enabling volume access mode: SINGLE_NODE_SINGLE_WRITER
I1002 22:18:47.599372       1 driver.go:101] Enabling volume access mode: SINGLE_NODE_MULTI_WRITER
I1002 22:18:47.599378       1 driver.go:92] Enabling node service capability: STAGE_UNSTAGE_VOLUME
I1002 22:18:47.599382       1 driver.go:92] Enabling node service capability: EXPAND_VOLUME
I1002 22:18:47.599384       1 driver.go:92] Enabling node service capability: GET_VOLUME_STATS
I1002 22:18:47.599386       1 driver.go:92] Enabling node service capability: SINGLE_NODE_MULTI_WRITER
I1002 22:18:47.607437       1 server.go:124] Listening for connections on address: &net.UnixAddr{Name:"//csi/csi.sock", Net:"unix"}
I1002 22:18:48.127456       1 utils.go:77] GRPC call: /csi.v1.Identity/GetPluginInfo
I1002 22:18:48.127490       1 utils.go:78] GRPC request: {}
I1002 22:18:48.128569       1 utils.go:84] GRPC response: {"name":"disk.csi.azure.com","vendor_version":"v1.29.9"}
I1002 22:18:48.271807       1 utils.go:77] GRPC call: /csi.v1.Identity/GetPluginInfo
I1002 22:18:48.271828       1 utils.go:78] GRPC request: {}
I1002 22:18:48.271976       1 utils.go:84] GRPC response: {"name":"disk.csi.azure.com","vendor_version":"v1.29.9"}
I1002 22:18:48.602801       1 utils.go:77] GRPC call: /csi.v1.Node/NodeGetInfo
I1002 22:18:48.602819       1 utils.go:78] GRPC request: {}
I1002 22:18:48.609713       1 azure_zones.go:168] Availability zone is not enabled for the node, falling back to fault domain
I1002 22:18:48.609755       1 nodeserver.go:350] NodeGetInfo, nodeName: aks-agentpool-29385454-vmss000009, failureDomain: 0
I1002 22:18:48.609907       1 nodeserver.go:431] got a matching size in getMaxDataDiskCount, VM Size: STANDARD_D4DS_V5, MaxDataDiskCount: 8
I1002 22:18:48.609931       1 utils.go:84] GRPC response: {"accessible_topology":{"segments":{"topology.disk.csi.azure.com/zone":""}},"max_volumes_per_node":8,"node_id":"aks-agentpool-29385454-vmss000009"}
==== END logs for container azuredisk of pod kube-system/csi-azuredisk-node-pkxll ====
==== START logs for container liveness-probe of pod kube-system/csi-azurefile-node-hn75v ====
W1002 22:19:00.291314       1 connection.go:234] Still connecting to unix:///csi/csi.sock
I1002 22:19:05.172548       1 main.go:133] "Calling CSI driver to discover driver name"
I1002 22:19:05.175222       1 main.go:141] "CSI driver name" driver="file.csi.azure.com"
I1002 22:19:05.175236       1 main.go:170] "ServeMux listening" address="0.0.0.0:29613"
==== END logs for container liveness-probe of pod kube-system/csi-azurefile-node-hn75v ====
==== START logs for container node-driver-registrar of pod kube-system/csi-azurefile-node-hn75v ====
I1002 22:18:53.279463       1 main.go:135] Version: v2.10.1-0-gd145202d
I1002 22:18:53.311071       1 main.go:136] Running node-driver-registrar in mode=
I1002 22:18:53.311077       1 main.go:157] Attempting to open a gRPC connection with: "/csi/csi.sock"
W1002 22:19:03.311423       1 connection.go:234] Still connecting to unix:///csi/csi.sock
I1002 22:19:04.650276       1 main.go:164] Calling CSI driver to discover driver name
I1002 22:19:04.672935       1 main.go:173] CSI driver name: "file.csi.azure.com"
I1002 22:19:04.672972       1 node_register.go:55] Starting Registration Server at: /registration/file.csi.azure.com-reg.sock
I1002 22:19:04.673498       1 node_register.go:64] Registration Server started at: /registration/file.csi.azure.com-reg.sock
I1002 22:19:04.673805       1 node_register.go:88] Skipping HTTP server because endpoint is set to: ""
I1002 22:19:05.025935       1 main.go:90] Received GetInfo call: &InfoRequest{}
I1002 22:19:05.086228       1 main.go:101] Received NotifyRegistrationStatus call: &RegistrationStatus{PluginRegistered:true,Error:,}
==== END logs for container node-driver-registrar of pod kube-system/csi-azurefile-node-hn75v ====
==== START logs for container azurefile of pod kube-system/csi-azurefile-node-hn75v ====
I1002 22:19:01.917271       1 main.go:87] set up prometheus server on [::]:29615
I1002 22:19:02.021611       1 azurefile.go:365] 
DRIVER INFORMATION:
-------------------
Build Date: "2024-08-09T03:39:37Z"
Compiler: gc
Driver Name: file.csi.azure.com
Driver Version: v1.30.5
Git Commit: 3d66ab3374b46e7fd3fca44d33f25d81188818be
Go Version: go1.22.5
Platform: linux/amd64

Streaming logs below:
I1002 22:19:02.021640       1 azurefile.go:373] driver userAgent: file.csi.azure.com/v1.30.5
I1002 22:19:02.041658       1 azure.go:64] set QPS(25.000000) and QPS Burst(50) for driver kubeClient
I1002 22:19:02.679134       1 azure.go:79] reading cloud config from secret kube-system/azure-cloud-provider
I1002 22:19:02.856834       1 azure.go:89] InitializeCloudFromSecret: failed to get cloud config from secret kube-system/azure-cloud-provider: secrets "azure-cloud-provider" not found
I1002 22:19:02.856931       1 azure.go:97] could not read cloud config from secret kube-system/azure-cloud-provider
I1002 22:19:02.856955       1 azure.go:100] AZURE_CREDENTIAL_FILE env var set as /etc/kubernetes/azure.json
I1002 22:19:02.916340       1 azure_auth.go:316] Using AzurePublicCloud environment
I1002 22:19:02.916360       1 azure.go:942] Azure cloudprovider using try backoff: retries=6, exponent=1.500000, duration=5, jitter=1.000000
I1002 22:19:03.005334       1 azure_auth.go:109] "Setup ARM general resource token provider" logger="GetServicePrincipalToken" method="msi"
I1002 22:19:03.005357       1 azure_auth.go:115] "Parsing user assigned managed identity" logger="GetServicePrincipalToken"
I1002 22:19:03.005413       1 azure_auth.go:126] "Setup with user assigned managed identity" logger="GetServicePrincipalToken" id-type="client_id"
I1002 22:19:03.029062       1 azure_interfaceclient.go:74] Azure InterfacesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.029077       1 azure_interfaceclient.go:77] Azure InterfacesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.049290       1 azure_vmsizeclient.go:68] Azure VirtualMachineSizesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.049307       1 azure_vmsizeclient.go:71] Azure VirtualMachineSizesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.071665       1 azure_snapshotclient.go:70] Azure SnapshotClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.071731       1 azure_snapshotclient.go:73] Azure SnapshotClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.071748       1 azure_storageaccountclient.go:70] Azure StorageAccountClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.071753       1 azure_storageaccountclient.go:73] Azure StorageAccountClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.071763       1 azure_diskclient.go:68] Azure DisksClient using API version: 2022-07-02
I1002 22:19:03.071785       1 azure_diskclient.go:73] Azure DisksClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.071794       1 azure_diskclient.go:76] Azure DisksClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.071806       1 azure_vmclient.go:70] Azure VirtualMachine client (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.071822       1 azure_vmclient.go:73] Azure VirtualMachine client (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.071833       1 azure_vmssclient.go:70] Azure VirtualMachineScaleSetClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.071838       1 azure_vmssclient.go:73] Azure VirtualMachineScaleSetClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.071848       1 azure_vmssvmclient.go:75] Azure vmssVM client (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.071855       1 azure_vmssvmclient.go:78] Azure vmssVM client (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.071866       1 azure_routeclient.go:69] Azure RoutesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.072004       1 azure_routeclient.go:72] Azure RoutesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.072182       1 azure_subnetclient.go:70] Azure SubnetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.072193       1 azure_subnetclient.go:73] Azure SubnetsClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.072208       1 azure_routetableclient.go:69] Azure RouteTablesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.072233       1 azure_routetableclient.go:72] Azure RouteTablesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.072304       1 azure_loadbalancerclient.go:74] Azure LoadBalancersClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.072313       1 azure_loadbalancerclient.go:77] Azure LoadBalancersClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.072322       1 azure_securitygroupclient.go:70] Azure SecurityGroupsClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.072326       1 azure_securitygroupclient.go:73] Azure SecurityGroupsClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.092116       1 azure_publicipclient.go:74] Azure PublicIPAddressesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.092131       1 azure_publicipclient.go:77] Azure PublicIPAddressesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.115599       1 azure_blobclient.go:73] Azure BlobClient using API version: 2021-09-01
I1002 22:19:03.136390       1 azure_vmasclient.go:70] Azure AvailabilitySetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:19:03.136408       1 azure_vmasclient.go:73] Azure AvailabilitySetsClient  (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:19:03.589067       1 azure.go:746] attach/detach disk operation rate limit QPS: 6.000000, Bucket: 10
I1002 22:19:03.589105       1 azure.go:156] starting node server on node(aks-agentpool-29385454-vmss000008)
I1002 22:19:03.589114       1 azurefile.go:378] cloud: AzurePublicCloud, location: eastus, rg: MC_AnandhakumarG-Testing_wow-testing_eastus, VnetName: aks-vnet-15172029, VnetResourceGroup: , SubnetName: aks-subnet
I1002 22:19:04.531180       1 mount_linux.go:282] Detected umount with safe 'not mounted' behavior
I1002 22:19:04.531304       1 driver.go:93] Enabling controller service capability: CREATE_DELETE_VOLUME
I1002 22:19:04.531326       1 driver.go:93] Enabling controller service capability: CREATE_DELETE_SNAPSHOT
I1002 22:19:04.531331       1 driver.go:93] Enabling controller service capability: EXPAND_VOLUME
I1002 22:19:04.531335       1 driver.go:93] Enabling controller service capability: SINGLE_NODE_MULTI_WRITER
I1002 22:19:04.531339       1 driver.go:93] Enabling controller service capability: CLONE_VOLUME
I1002 22:19:04.531346       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_WRITER
I1002 22:19:04.531353       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_READER_ONLY
I1002 22:19:04.531357       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_SINGLE_WRITER
I1002 22:19:04.531361       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_MULTI_WRITER
I1002 22:19:04.531364       1 driver.go:112] Enabling volume access mode: MULTI_NODE_READER_ONLY
I1002 22:19:04.531367       1 driver.go:112] Enabling volume access mode: MULTI_NODE_SINGLE_WRITER
I1002 22:19:04.531375       1 driver.go:112] Enabling volume access mode: MULTI_NODE_MULTI_WRITER
I1002 22:19:04.531385       1 driver.go:103] Enabling node service capability: STAGE_UNSTAGE_VOLUME
I1002 22:19:04.531390       1 driver.go:103] Enabling node service capability: SINGLE_NODE_MULTI_WRITER
I1002 22:19:04.531398       1 driver.go:103] Enabling node service capability: VOLUME_MOUNT_GROUP
I1002 22:19:04.531402       1 driver.go:103] Enabling node service capability: GET_VOLUME_STATS
I1002 22:19:04.670852       1 utils.go:101] GRPC call: /csi.v1.Identity/GetPluginInfo
I1002 22:19:04.670872       1 utils.go:102] GRPC request: {}
I1002 22:19:04.671750       1 utils.go:108] GRPC response: {"name":"file.csi.azure.com","vendor_version":"v1.30.5"}
I1002 22:19:05.027048       1 utils.go:101] GRPC call: /csi.v1.Node/NodeGetInfo
I1002 22:19:05.027065       1 utils.go:102] GRPC request: {}
I1002 22:19:05.027137       1 utils.go:108] GRPC response: {"node_id":"aks-agentpool-29385454-vmss000008"}
I1002 22:19:05.173057       1 utils.go:101] GRPC call: /csi.v1.Identity/GetPluginInfo
I1002 22:19:05.173074       1 utils.go:102] GRPC request: {}
I1002 22:19:05.173128       1 utils.go:108] GRPC response: {"name":"file.csi.azure.com","vendor_version":"v1.30.5"}
==== END logs for container azurefile of pod kube-system/csi-azurefile-node-hn75v ====
==== START logs for container liveness-probe of pod kube-system/csi-azurefile-node-w9xkr ====
I1002 22:18:50.590337       1 main.go:133] "Calling CSI driver to discover driver name"
I1002 22:18:50.600207       1 main.go:141] "CSI driver name" driver="file.csi.azure.com"
I1002 22:18:50.600241       1 main.go:170] "ServeMux listening" address="0.0.0.0:29613"
==== END logs for container liveness-probe of pod kube-system/csi-azurefile-node-w9xkr ====
==== START logs for container node-driver-registrar of pod kube-system/csi-azurefile-node-w9xkr ====
I1002 22:18:45.510763       1 main.go:135] Version: v2.10.1-0-gd145202d
I1002 22:18:45.510861       1 main.go:136] Running node-driver-registrar in mode=
I1002 22:18:45.510866       1 main.go:157] Attempting to open a gRPC connection with: "/csi/csi.sock"
I1002 22:18:51.350479       1 main.go:164] Calling CSI driver to discover driver name
I1002 22:18:51.352947       1 main.go:173] CSI driver name: "file.csi.azure.com"
I1002 22:18:51.353000       1 node_register.go:55] Starting Registration Server at: /registration/file.csi.azure.com-reg.sock
I1002 22:18:51.353192       1 node_register.go:64] Registration Server started at: /registration/file.csi.azure.com-reg.sock
I1002 22:18:51.353277       1 node_register.go:88] Skipping HTTP server because endpoint is set to: ""
I1002 22:18:51.602330       1 main.go:90] Received GetInfo call: &InfoRequest{}
I1002 22:18:51.651074       1 main.go:101] Received NotifyRegistrationStatus call: &RegistrationStatus{PluginRegistered:true,Error:,}
==== END logs for container node-driver-registrar of pod kube-system/csi-azurefile-node-w9xkr ====
==== START logs for container azurefile of pod kube-system/csi-azurefile-node-w9xkr ====
I1002 22:18:49.389135       1 main.go:87] set up prometheus server on [::]:29615
I1002 22:18:49.458817       1 azurefile.go:365] 
DRIVER INFORMATION:
-------------------
Build Date: "2024-08-09T03:39:37Z"
Compiler: gc
Driver Name: file.csi.azure.com
Driver Version: v1.30.5
Git Commit: 3d66ab3374b46e7fd3fca44d33f25d81188818be
Go Version: go1.22.5
Platform: linux/amd64

Streaming logs below:
I1002 22:18:49.458855       1 azurefile.go:373] driver userAgent: file.csi.azure.com/v1.30.5
I1002 22:18:49.467172       1 azure.go:64] set QPS(25.000000) and QPS Burst(50) for driver kubeClient
I1002 22:18:49.705283       1 azure.go:79] reading cloud config from secret kube-system/azure-cloud-provider
I1002 22:18:49.792708       1 azure.go:89] InitializeCloudFromSecret: failed to get cloud config from secret kube-system/azure-cloud-provider: secrets "azure-cloud-provider" not found
I1002 22:18:49.792734       1 azure.go:97] could not read cloud config from secret kube-system/azure-cloud-provider
I1002 22:18:49.792742       1 azure.go:100] AZURE_CREDENTIAL_FILE env var set as /etc/kubernetes/azure.json
I1002 22:18:49.800586       1 azure_auth.go:316] Using AzurePublicCloud environment
I1002 22:18:49.800616       1 azure.go:942] Azure cloudprovider using try backoff: retries=6, exponent=1.500000, duration=5, jitter=1.000000
I1002 22:18:49.826663       1 azure_auth.go:109] "Setup ARM general resource token provider" logger="GetServicePrincipalToken" method="msi"
I1002 22:18:49.826698       1 azure_auth.go:115] "Parsing user assigned managed identity" logger="GetServicePrincipalToken"
I1002 22:18:49.826751       1 azure_auth.go:126] "Setup with user assigned managed identity" logger="GetServicePrincipalToken" id-type="client_id"
I1002 22:18:49.844646       1 azure_interfaceclient.go:74] Azure InterfacesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.844675       1 azure_interfaceclient.go:77] Azure InterfacesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.853257       1 azure_vmsizeclient.go:68] Azure VirtualMachineSizesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.853288       1 azure_vmsizeclient.go:71] Azure VirtualMachineSizesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.861723       1 azure_snapshotclient.go:70] Azure SnapshotClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.861747       1 azure_snapshotclient.go:73] Azure SnapshotClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.861760       1 azure_storageaccountclient.go:70] Azure StorageAccountClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.861764       1 azure_storageaccountclient.go:73] Azure StorageAccountClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.861777       1 azure_diskclient.go:68] Azure DisksClient using API version: 2022-07-02
I1002 22:18:49.861786       1 azure_diskclient.go:73] Azure DisksClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.861794       1 azure_diskclient.go:76] Azure DisksClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.869393       1 azure_vmclient.go:70] Azure VirtualMachine client (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.869480       1 azure_vmclient.go:73] Azure VirtualMachine client (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.869508       1 azure_vmssclient.go:70] Azure VirtualMachineScaleSetClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.869517       1 azure_vmssclient.go:73] Azure VirtualMachineScaleSetClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.869528       1 azure_vmssvmclient.go:75] Azure vmssVM client (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.869539       1 azure_vmssvmclient.go:78] Azure vmssVM client (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.869645       1 azure_routeclient.go:69] Azure RoutesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.869651       1 azure_routeclient.go:72] Azure RoutesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.870037       1 azure_subnetclient.go:70] Azure SubnetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.870056       1 azure_subnetclient.go:73] Azure SubnetsClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.870065       1 azure_routetableclient.go:69] Azure RouteTablesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.870069       1 azure_routetableclient.go:72] Azure RouteTablesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.870077       1 azure_loadbalancerclient.go:74] Azure LoadBalancersClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.870082       1 azure_loadbalancerclient.go:77] Azure LoadBalancersClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.870092       1 azure_securitygroupclient.go:70] Azure SecurityGroupsClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.870100       1 azure_securitygroupclient.go:73] Azure SecurityGroupsClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.877249       1 azure_publicipclient.go:74] Azure PublicIPAddressesClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.877280       1 azure_publicipclient.go:77] Azure PublicIPAddressesClient (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:49.892366       1 azure_blobclient.go:73] Azure BlobClient using API version: 2021-09-01
I1002 22:18:49.899825       1 azure_vmasclient.go:70] Azure AvailabilitySetsClient (read ops) using rate limit config: QPS=3, bucket=10
I1002 22:18:49.899861       1 azure_vmasclient.go:73] Azure AvailabilitySetsClient  (write ops) using rate limit config: QPS=1, bucket=10
I1002 22:18:50.075377       1 azure.go:746] attach/detach disk operation rate limit QPS: 6.000000, Bucket: 10
I1002 22:18:50.075425       1 azure.go:156] starting node server on node(aks-agentpool-29385454-vmss000009)
I1002 22:18:50.075437       1 azurefile.go:378] cloud: AzurePublicCloud, location: eastus, rg: MC_AnandhakumarG-Testing_wow-testing_eastus, VnetName: aks-vnet-15172029, VnetResourceGroup: , SubnetName: aks-subnet
I1002 22:18:50.470857       1 mount_linux.go:282] Detected umount with safe 'not mounted' behavior
I1002 22:18:50.471064       1 driver.go:93] Enabling controller service capability: CREATE_DELETE_VOLUME
I1002 22:18:50.471078       1 driver.go:93] Enabling controller service capability: CREATE_DELETE_SNAPSHOT
I1002 22:18:50.471083       1 driver.go:93] Enabling controller service capability: EXPAND_VOLUME
I1002 22:18:50.471087       1 driver.go:93] Enabling controller service capability: SINGLE_NODE_MULTI_WRITER
I1002 22:18:50.471091       1 driver.go:93] Enabling controller service capability: CLONE_VOLUME
I1002 22:18:50.471097       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_WRITER
I1002 22:18:50.471104       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_READER_ONLY
I1002 22:18:50.471108       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_SINGLE_WRITER
I1002 22:18:50.471111       1 driver.go:112] Enabling volume access mode: SINGLE_NODE_MULTI_WRITER
I1002 22:18:50.471113       1 driver.go:112] Enabling volume access mode: MULTI_NODE_READER_ONLY
I1002 22:18:50.471137       1 driver.go:112] Enabling volume access mode: MULTI_NODE_SINGLE_WRITER
I1002 22:18:50.471144       1 driver.go:112] Enabling volume access mode: MULTI_NODE_MULTI_WRITER
I1002 22:18:50.471154       1 driver.go:103] Enabling node service capability: STAGE_UNSTAGE_VOLUME
I1002 22:18:50.471162       1 driver.go:103] Enabling node service capability: SINGLE_NODE_MULTI_WRITER
I1002 22:18:50.471165       1 driver.go:103] Enabling node service capability: VOLUME_MOUNT_GROUP
I1002 22:18:50.471168       1 driver.go:103] Enabling node service capability: GET_VOLUME_STATS
I1002 22:18:50.591332       1 utils.go:101] GRPC call: /csi.v1.Identity/GetPluginInfo
I1002 22:18:50.591354       1 utils.go:102] GRPC request: {}
I1002 22:18:50.597281       1 utils.go:108] GRPC response: {"name":"file.csi.azure.com","vendor_version":"v1.30.5"}
I1002 22:18:51.351083       1 utils.go:101] GRPC call: /csi.v1.Identity/GetPluginInfo
I1002 22:18:51.351112       1 utils.go:102] GRPC request: {}
I1002 22:18:51.351260       1 utils.go:108] GRPC response: {"name":"file.csi.azure.com","vendor_version":"v1.30.5"}
I1002 22:18:51.603443       1 utils.go:101] GRPC call: /csi.v1.Node/NodeGetInfo
I1002 22:18:51.603466       1 utils.go:102] GRPC request: {}
I1002 22:18:51.603566       1 utils.go:108] GRPC response: {"node_id":"aks-agentpool-29385454-vmss000009"}
==== END logs for container azurefile of pod kube-system/csi-azurefile-node-w9xkr ====
==== START logs for container konnectivity-agent of pod kube-system/konnectivity-agent-5c7766456f-mftbf ====
I1002 22:18:56.603251       1 options.go:124] AgentCert set to "/certs/client.crt".
I1002 22:18:56.603340       1 options.go:125] AgentKey set to "/certs/client.key".
I1002 22:18:56.603344       1 options.go:126] CACert set to "/certs/ca.crt".
I1002 22:18:56.603347       1 options.go:127] ProxyServerHost set to "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io".
I1002 22:18:56.603349       1 options.go:128] ProxyServerPort set to 443.
I1002 22:18:56.603352       1 options.go:129] ALPNProtos set to [konnectivity].
I1002 22:18:56.603364       1 options.go:130] HealthServerHost set to 
I1002 22:18:56.603367       1 options.go:131] HealthServerPort set to 8082.
I1002 22:18:56.603369       1 options.go:132] Admin bind address set to "127.0.0.1".
I1002 22:18:56.603372       1 options.go:133] AdminServerPort set to 8094.
I1002 22:18:56.603375       1 options.go:134] EnableProfiling set to false.
I1002 22:18:56.603377       1 options.go:135] EnableContentionProfiling set to false.
I1002 22:18:56.603380       1 options.go:136] AgentID set to 0bf5c38e-6a26-4499-8233-6294e3dde368.
I1002 22:18:56.603383       1 options.go:137] SyncInterval set to 1s.
I1002 22:18:56.603388       1 options.go:138] ProbeInterval set to 1s.
I1002 22:18:56.603391       1 options.go:139] SyncIntervalCap set to 10s.
I1002 22:18:56.603394       1 options.go:140] Keepalive time set to 30s.
I1002 22:18:56.603397       1 options.go:141] ServiceAccountTokenPath set to "".
I1002 22:18:56.603446       1 options.go:142] AgentIdentifiers set to default-route=true.
I1002 22:18:56.603449       1 options.go:143] WarnOnChannelLimit set to false.
I1002 22:18:56.603453       1 options.go:144] SyncForever set to false.
I1002 22:18:56.659197       1 client.go:210] "Connect to server" serverID="81a6356a-1259-4842-8052-772149ded951"
I1002 22:18:56.659251       1 clientset.go:222] "sync added client connecting to proxy server" serverID="81a6356a-1259-4842-8052-772149ded951"
I1002 22:18:56.659280       1 client.go:321] "Start serving" serverID="81a6356a-1259-4842-8052-772149ded951" agentID="0bf5c38e-6a26-4499-8233-6294e3dde368"
I1002 22:18:57.752637       1 client.go:210] "Connect to server" serverID="81a6356a-1259-4842-8052-772149ded951"
I1002 22:18:58.853560       1 client.go:210] "Connect to server" serverID="81a6356a-1259-4842-8052-772149ded951"
I1002 22:18:59.952619       1 client.go:210] "Connect to server" serverID="81a6356a-1259-4842-8052-772149ded951"
I1002 22:19:01.049831       1 client.go:210] "Connect to server" serverID="81a6356a-1259-4842-8052-772149ded951"
I1002 22:19:02.150618       1 client.go:210] "Connect to server" serverID="81a6356a-1259-4842-8052-772149ded951"
I1002 22:19:03.244599       1 client.go:210] "Connect to server" serverID="81a6356a-1259-4842-8052-772149ded951"
I1002 22:19:04.340697       1 client.go:210] "Connect to server" serverID="81a6356a-1259-4842-8052-772149ded951"
I1002 22:19:05.448074       1 client.go:210] "Connect to server" serverID="81a6356a-1259-4842-8052-772149ded951"
I1002 22:19:06.559682       1 client.go:210] "Connect to server" serverID="3b3be274-6875-469f-937a-4927b8fe0801"
I1002 22:19:06.559717       1 clientset.go:222] "sync added client connecting to proxy server" serverID="3b3be274-6875-469f-937a-4927b8fe0801"
I1002 22:19:06.559756       1 client.go:321] "Start serving" serverID="3b3be274-6875-469f-937a-4927b8fe0801" agentID="0bf5c38e-6a26-4499-8233-6294e3dde368"
I1002 22:20:19.914619       1 client.go:528] "remote connection EOF" connectionID=9
I1002 22:20:26.941314       1 client.go:528] "remote connection EOF" connectionID=10
I1002 22:20:31.333737       1 client.go:528] "remote connection EOF" connectionID=14
I1002 22:20:44.681572       1 client.go:528] "remote connection EOF" connectionID=11
I1002 22:20:46.981816       1 client.go:528] "remote connection EOF" connectionID=12
I1002 22:20:51.381695       1 client.go:528] "remote connection EOF" connectionID=13
I1002 22:20:59.983576       1 client.go:528] "remote connection EOF" connectionID=17
I1002 22:21:04.686795       1 client.go:528] "remote connection EOF" connectionID=18
I1002 22:21:06.981760       1 client.go:528] "remote connection EOF" connectionID=14
I1002 22:21:44.601846       1 client.go:528] "remote connection EOF" connectionID=21
I1002 22:21:46.985978       1 client.go:528] "remote connection EOF" connectionID=15
I1002 22:21:59.981934       1 client.go:528] "remote connection EOF" connectionID=22
I1002 22:22:11.385685       1 client.go:528] "remote connection EOF" connectionID=16
I1002 22:22:19.910377       1 client.go:528] "remote connection EOF" connectionID=24
I1002 22:22:24.601475       1 client.go:528] "remote connection EOF" connectionID=17
I1002 22:22:26.938010       1 client.go:528] "remote connection EOF" connectionID=25
I1002 22:22:31.319317       1 client.go:528] "remote connection EOF" connectionID=26
I1002 22:22:39.914506       1 client.go:528] "remote connection EOF" connectionID=18
I1002 22:22:46.947785       1 client.go:528] "remote connection EOF" connectionID=27
I1002 22:22:51.319181       1 client.go:528] "remote connection EOF" connectionID=19
I1002 22:23:11.383309       1 client.go:528] "remote connection EOF" connectionID=20
I1002 22:23:19.917347       1 client.go:528] "remote connection EOF" connectionID=21
I1002 22:23:31.383211       1 client.go:528] "remote connection EOF" connectionID=29
I1002 22:23:39.908640       1 client.go:528] "remote connection EOF" connectionID=30
I1002 22:23:46.938508       1 client.go:528] "remote connection EOF" connectionID=31
I1002 22:23:51.397979       1 client.go:528] "remote connection EOF" connectionID=22
I1002 22:23:59.911981       1 client.go:528] "remote connection EOF" connectionID=32
I1002 22:24:19.913121       1 client.go:528] "remote connection EOF" connectionID=23
I1002 22:24:24.604056       1 client.go:528] "remote connection EOF" connectionID=34
I1002 22:24:46.943419       1 client.go:528] "remote connection EOF" connectionID=24
I1002 22:25:04.598485       1 client.go:528] "remote connection EOF" connectionID=25
I1002 22:25:24.602589       1 client.go:528] "remote connection EOF" connectionID=26
I1002 22:25:31.323163       1 client.go:528] "remote connection EOF" connectionID=27
I1002 22:25:44.600455       1 client.go:528] "remote connection EOF" connectionID=36
I1002 22:25:46.983758       1 client.go:528] "remote connection EOF" connectionID=37
I1002 22:25:51.324169       1 client.go:528] "remote connection EOF" connectionID=28
I1002 22:26:04.599666       1 client.go:528] "remote connection EOF" connectionID=38
I1002 22:26:19.915754       1 client.go:528] "remote connection EOF" connectionID=29
I1002 22:26:31.331370       1 client.go:528] "remote connection EOF" connectionID=30
I1002 22:26:44.605351       1 client.go:528] "remote connection EOF" connectionID=33
I1002 22:27:04.599109       1 client.go:528] "remote connection EOF" connectionID=40
I1002 22:27:26.938820       1 client.go:528] "remote connection EOF" connectionID=41
I1002 22:27:39.912658       1 client.go:528] "remote connection EOF" connectionID=35
I1002 22:27:46.980338       1 client.go:528] "remote connection EOF" connectionID=42
I1002 22:28:06.937587       1 client.go:528] "remote connection EOF" connectionID=43
I1002 22:28:24.598553       1 client.go:528] "remote connection EOF" connectionID=44
I1002 22:28:26.938732       1 client.go:528] "remote connection EOF" connectionID=45
I1002 22:28:31.314400       1 client.go:528] "remote connection EOF" connectionID=46
I1002 22:28:44.603921       1 client.go:528] "remote connection EOF" connectionID=38
I1002 22:28:46.986580       1 client.go:528] "remote connection EOF" connectionID=39
I1002 22:28:59.915723       1 client.go:528] "remote connection EOF" connectionID=40
I1002 22:29:04.680348       1 client.go:528] "remote connection EOF" connectionID=41
I1002 22:29:06.940771       1 client.go:528] "remote connection EOF" connectionID=42
I1002 22:29:19.908912       1 client.go:528] "remote connection EOF" connectionID=47
I1002 22:29:31.313768       1 client.go:528] "remote connection EOF" connectionID=48
I1002 22:30:06.940583       1 client.go:528] "remote connection EOF" connectionID=44
I1002 22:30:26.943231       1 client.go:528] "remote connection EOF" connectionID=49
I1002 22:30:31.384542       1 client.go:528] "remote connection EOF" connectionID=45
I1002 22:30:39.910365       1 client.go:528] "remote connection EOF" connectionID=46
I1002 22:30:44.597697       1 client.go:528] "remote connection EOF" connectionID=51
I1002 22:30:46.980180       1 client.go:528] "remote connection EOF" connectionID=52
I1002 22:30:51.385308       1 client.go:528] "remote connection EOF" connectionID=47
I1002 22:31:04.608139       1 client.go:528] "remote connection EOF" connectionID=48
I1002 22:31:06.939417       1 client.go:528] "remote connection EOF" connectionID=53
I1002 22:31:24.597937       1 client.go:528] "remote connection EOF" connectionID=54
I1002 22:31:26.941938       1 client.go:528] "remote connection EOF" connectionID=55
I1002 22:31:31.315407       1 client.go:528] "remote connection EOF" connectionID=56
I1002 22:31:39.914814       1 client.go:528] "remote connection EOF" connectionID=50
I1002 22:31:44.604271       1 client.go:528] "remote connection EOF" connectionID=57
I1002 22:31:46.942902       1 client.go:528] "remote connection EOF" connectionID=52
I1002 22:32:04.601707       1 client.go:528] "remote connection EOF" connectionID=59
I1002 22:32:06.938568       1 client.go:528] "remote connection EOF" connectionID=60
I1002 22:32:11.319423       1 client.go:528] "remote connection EOF" connectionID=61
I1002 22:32:24.601287       1 client.go:528] "remote connection EOF" connectionID=62
I1002 22:32:26.943486       1 client.go:528] "remote connection EOF" connectionID=63
I1002 22:33:11.316119       1 client.go:528] "remote connection EOF" connectionID=65
I1002 22:33:19.907917       1 client.go:528] "remote connection EOF" connectionID=66
I1002 22:33:24.598832       1 client.go:528] "remote connection EOF" connectionID=67
I1002 22:33:44.681300       1 client.go:528] "remote connection EOF" connectionID=54
I1002 22:34:06.939588       1 client.go:528] "remote connection EOF" connectionID=55
I1002 22:34:11.322374       1 client.go:528] "remote connection EOF" connectionID=56
==== END logs for container konnectivity-agent of pod kube-system/konnectivity-agent-5c7766456f-mftbf ====
==== START logs for container konnectivity-agent of pod kube-system/konnectivity-agent-5c7766456f-ncsmt ====
I1002 22:18:56.603424       1 options.go:124] AgentCert set to "/certs/client.crt".
I1002 22:18:56.603499       1 options.go:125] AgentKey set to "/certs/client.key".
I1002 22:18:56.603504       1 options.go:126] CACert set to "/certs/ca.crt".
I1002 22:18:56.603507       1 options.go:127] ProxyServerHost set to "wow-testing-dns-aom7r6n1.hcp.eastus.azmk8s.io".
I1002 22:18:56.603512       1 options.go:128] ProxyServerPort set to 443.
I1002 22:18:56.603515       1 options.go:129] ALPNProtos set to [konnectivity].
I1002 22:18:56.603524       1 options.go:130] HealthServerHost set to 
I1002 22:18:56.603528       1 options.go:131] HealthServerPort set to 8082.
I1002 22:18:56.603532       1 options.go:132] Admin bind address set to "127.0.0.1".
I1002 22:18:56.603537       1 options.go:133] AdminServerPort set to 8094.
I1002 22:18:56.603540       1 options.go:134] EnableProfiling set to false.
I1002 22:18:56.603546       1 options.go:135] EnableContentionProfiling set to false.
I1002 22:18:56.603552       1 options.go:136] AgentID set to 7be4ef64-276d-47bf-9cbd-09a35c389e65.
I1002 22:18:56.603556       1 options.go:137] SyncInterval set to 1s.
I1002 22:18:56.603563       1 options.go:138] ProbeInterval set to 1s.
I1002 22:18:56.603567       1 options.go:139] SyncIntervalCap set to 10s.
I1002 22:18:56.603571       1 options.go:140] Keepalive time set to 30s.
I1002 22:18:56.603576       1 options.go:141] ServiceAccountTokenPath set to "".
I1002 22:18:56.603586       1 options.go:142] AgentIdentifiers set to default-route=true.
I1002 22:18:56.603590       1 options.go:143] WarnOnChannelLimit set to false.
I1002 22:18:56.603595       1 options.go:144] SyncForever set to false.
I1002 22:18:56.665236       1 client.go:210] "Connect to server" serverID="3b3be274-6875-469f-937a-4927b8fe0801"
I1002 22:18:56.665273       1 clientset.go:222] "sync added client connecting to proxy server" serverID="3b3be274-6875-469f-937a-4927b8fe0801"
I1002 22:18:56.665314       1 client.go:321] "Start serving" serverID="3b3be274-6875-469f-937a-4927b8fe0801" agentID="7be4ef64-276d-47bf-9cbd-09a35c389e65"
I1002 22:18:57.760741       1 client.go:210] "Connect to server" serverID="3b3be274-6875-469f-937a-4927b8fe0801"
I1002 22:18:58.864891       1 client.go:210] "Connect to server" serverID="3b3be274-6875-469f-937a-4927b8fe0801"
I1002 22:18:59.971920       1 client.go:210] "Connect to server" serverID="3b3be274-6875-469f-937a-4927b8fe0801"
I1002 22:19:01.086096       1 client.go:210] "Connect to server" serverID="3b3be274-6875-469f-937a-4927b8fe0801"
I1002 22:19:02.190736       1 client.go:210] "Connect to server" serverID="3b3be274-6875-469f-937a-4927b8fe0801"
I1002 22:19:03.299045       1 client.go:210] "Connect to server" serverID="3b3be274-6875-469f-937a-4927b8fe0801"
I1002 22:19:04.404486       1 client.go:210] "Connect to server" serverID="3b3be274-6875-469f-937a-4927b8fe0801"
I1002 22:19:05.502298       1 client.go:210] "Connect to server" serverID="81a6356a-1259-4842-8052-772149ded951"
I1002 22:19:05.502334       1 clientset.go:222] "sync added client connecting to proxy server" serverID="81a6356a-1259-4842-8052-772149ded951"
I1002 22:19:05.502374       1 client.go:321] "Start serving" serverID="81a6356a-1259-4842-8052-772149ded951" agentID="7be4ef64-276d-47bf-9cbd-09a35c389e65"
I1002 22:20:24.601139       1 client.go:528] "remote connection EOF" connectionID=12
I1002 22:20:39.916155       1 client.go:528] "remote connection EOF" connectionID=13
I1002 22:21:11.323316       1 client.go:528] "remote connection EOF" connectionID=14
I1002 22:21:19.910223       1 client.go:528] "remote connection EOF" connectionID=11
I1002 22:21:24.681401       1 client.go:528] "remote connection EOF" connectionID=15
I1002 22:21:26.947164       1 client.go:528] "remote connection EOF" connectionID=16
I1002 22:21:31.332337       1 client.go:528] "remote connection EOF" connectionID=17
I1002 22:21:39.918770       1 client.go:528] "remote connection EOF" connectionID=18
I1002 22:21:51.322335       1 client.go:528] "remote connection EOF" connectionID=15
I1002 22:22:04.604727       1 client.go:528] "remote connection EOF" connectionID=19
I1002 22:22:06.938898       1 client.go:528] "remote connection EOF" connectionID=16
I1002 22:22:44.604007       1 client.go:528] "remote connection EOF" connectionID=17
I1002 22:22:59.912590       1 client.go:528] "remote connection EOF" connectionID=19
I1002 22:23:04.606134       1 client.go:528] "remote connection EOF" connectionID=20
I1002 22:23:06.940169       1 client.go:528] "remote connection EOF" connectionID=20
I1002 22:23:24.598128       1 client.go:528] "remote connection EOF" connectionID=21
I1002 22:23:26.945178       1 client.go:528] "remote connection EOF" connectionID=22
I1002 22:23:44.607491       1 client.go:528] "remote connection EOF" connectionID=23
I1002 22:24:04.606433       1 client.go:528] "remote connection EOF" connectionID=21
I1002 22:24:06.983588       1 client.go:528] "remote connection EOF" connectionID=25
I1002 22:24:11.319436       1 client.go:528] "remote connection EOF" connectionID=22
I1002 22:24:26.940404       1 client.go:528] "remote connection EOF" connectionID=27
I1002 22:24:31.313655       1 client.go:528] "remote connection EOF" connectionID=28
I1002 22:24:39.910834       1 client.go:528] "remote connection EOF" connectionID=24
I1002 22:24:44.614427       1 client.go:528] "remote connection EOF" connectionID=25
I1002 22:24:51.380167       1 client.go:528] "remote connection EOF" connectionID=26
I1002 22:24:59.908524       1 client.go:528] "remote connection EOF" connectionID=29
I1002 22:25:06.942724       1 client.go:528] "remote connection EOF" connectionID=27
I1002 22:25:11.385154       1 client.go:528] "remote connection EOF" connectionID=30
I1002 22:25:19.911363       1 client.go:528] "remote connection EOF" connectionID=28
I1002 22:25:26.938475       1 client.go:528] "remote connection EOF" connectionID=32
I1002 22:25:39.911918       1 client.go:528] "remote connection EOF" connectionID=29
I1002 22:25:59.913287       1 client.go:528] "remote connection EOF" connectionID=30
I1002 22:26:06.940975       1 client.go:528] "remote connection EOF" connectionID=31
I1002 22:26:11.325278       1 client.go:528] "remote connection EOF" connectionID=32
I1002 22:26:24.601611       1 client.go:528] "remote connection EOF" connectionID=33
I1002 22:26:26.939259       1 client.go:528] "remote connection EOF" connectionID=33
I1002 22:26:39.916630       1 client.go:528] "remote connection EOF" connectionID=34
I1002 22:26:46.939479       1 client.go:528] "remote connection EOF" connectionID=34
I1002 22:26:51.386259       1 client.go:528] "remote connection EOF" connectionID=35
I1002 22:26:59.908766       1 client.go:528] "remote connection EOF" connectionID=35
I1002 22:27:06.937151       1 client.go:528] "remote connection EOF" connectionID=36
I1002 22:27:11.379599       1 client.go:528] "remote connection EOF" connectionID=37
I1002 22:27:12.554106       1 client.go:528] "remote connection EOF" connectionID=38
I1002 22:27:19.909132       1 client.go:528] "remote connection EOF" connectionID=41
I1002 22:27:24.602823       1 client.go:528] "remote connection EOF" connectionID=42
I1002 22:27:31.381243       1 client.go:528] "remote connection EOF" connectionID=43
I1002 22:27:44.682010       1 client.go:528] "remote connection EOF" connectionID=44
I1002 22:27:51.387501       1 client.go:528] "remote connection EOF" connectionID=37
I1002 22:27:59.980221       1 client.go:528] "remote connection EOF" connectionID=38
I1002 22:28:04.603110       1 client.go:528] "remote connection EOF" connectionID=45
I1002 22:28:11.321722       1 client.go:528] "remote connection EOF" connectionID=39
I1002 22:28:19.910477       1 client.go:528] "remote connection EOF" connectionID=40
I1002 22:28:39.982090       1 client.go:528] "remote connection EOF" connectionID=41
I1002 22:28:51.314441       1 client.go:528] "remote connection EOF" connectionID=47
I1002 22:29:11.316413       1 client.go:528] "remote connection EOF" connectionID=42
I1002 22:29:24.604159       1 client.go:528] "remote connection EOF" connectionID=48
I1002 22:29:26.937513       1 client.go:528] "remote connection EOF" connectionID=49
I1002 22:29:39.911224       1 client.go:528] "remote connection EOF" connectionID=50
I1002 22:29:44.601367       1 client.go:528] "remote connection EOF" connectionID=51
I1002 22:29:46.942736       1 client.go:528] "remote connection EOF" connectionID=43
I1002 22:29:51.382835       1 client.go:528] "remote connection EOF" connectionID=52
I1002 22:29:59.907927       1 client.go:528] "remote connection EOF" connectionID=53
I1002 22:30:04.600298       1 client.go:528] "remote connection EOF" connectionID=44
I1002 22:30:11.315418       1 client.go:528] "remote connection EOF" connectionID=54
I1002 22:30:19.908511       1 client.go:528] "remote connection EOF" connectionID=55
I1002 22:30:24.612063       1 client.go:528] "remote connection EOF" connectionID=45
I1002 22:30:59.909142       1 client.go:528] "remote connection EOF" connectionID=56
I1002 22:31:11.321808       1 client.go:528] "remote connection EOF" connectionID=46
I1002 22:31:19.984503       1 client.go:528] "remote connection EOF" connectionID=57
I1002 22:31:51.317217       1 client.go:528] "remote connection EOF" connectionID=58
I1002 22:31:59.982108       1 client.go:528] "remote connection EOF" connectionID=48
I1002 22:32:19.914965       1 client.go:528] "remote connection EOF" connectionID=49
I1002 22:32:31.322922       1 client.go:528] "remote connection EOF" connectionID=50
I1002 22:32:39.908709       1 client.go:528] "remote connection EOF" connectionID=59
I1002 22:32:44.600929       1 client.go:528] "remote connection EOF" connectionID=51
I1002 22:32:46.948420       1 client.go:528] "remote connection EOF" connectionID=60
I1002 22:32:51.333283       1 client.go:528] "remote connection EOF" connectionID=61
I1002 22:32:59.908744       1 client.go:528] "remote connection EOF" connectionID=62
I1002 22:33:04.679949       1 client.go:528] "remote connection EOF" connectionID=63
I1002 22:33:06.939764       1 client.go:528] "remote connection EOF" connectionID=64
I1002 22:33:25.251202       1 client.go:528] "remote connection EOF" connectionID=52
I1002 22:33:26.943401       1 client.go:528] "remote connection EOF" connectionID=53
I1002 22:33:31.383295       1 client.go:528] "remote connection EOF" connectionID=66
I1002 22:33:39.980839       1 client.go:528] "remote connection EOF" connectionID=67
I1002 22:33:46.941393       1 client.go:528] "remote connection EOF" connectionID=69
I1002 22:33:51.380808       1 client.go:528] "remote connection EOF" connectionID=54
I1002 22:33:59.915752       1 client.go:528] "remote connection EOF" connectionID=55
I1002 22:34:04.603682       1 client.go:528] "remote connection EOF" connectionID=70
I1002 22:34:19.910558       1 client.go:528] "remote connection EOF" connectionID=71
==== END logs for container konnectivity-agent of pod kube-system/konnectivity-agent-5c7766456f-ncsmt ====
==== START logs for container kube-proxy-bootstrap of pod kube-system/kube-proxy-lsxcg ====
Current net.netfilter.nf_conntrack_max: 262144
AKS custom config for net.netfilter.nf_conntrack_max not set.
Setting nf_conntrack_max to 131072 (32768 * 4 cores, minimum 131072).
==== END logs for container kube-proxy-bootstrap of pod kube-system/kube-proxy-lsxcg ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-lsxcg ====
I1002 22:19:00.397063       1 server_others.go:72] "Using iptables proxy"
I1002 22:19:00.397200       1 flags.go:64] FLAG: --bind-address="0.0.0.0"
I1002 22:19:00.397214       1 flags.go:64] FLAG: --bind-address-hard-fail="false"
I1002 22:19:00.397220       1 flags.go:64] FLAG: --boot-id-file="/proc/sys/kernel/random/boot_id"
I1002 22:19:00.397226       1 flags.go:64] FLAG: --cleanup="false"
I1002 22:19:00.397229       1 flags.go:64] FLAG: --cluster-cidr="10.244.0.0/16"
I1002 22:19:00.397235       1 flags.go:64] FLAG: --config=""
I1002 22:19:00.397240       1 flags.go:64] FLAG: --config-sync-period="15m0s"
I1002 22:19:00.397246       1 flags.go:64] FLAG: --conntrack-max-per-core="0"
I1002 22:19:00.397252       1 flags.go:64] FLAG: --conntrack-min="131072"
I1002 22:19:00.397256       1 flags.go:64] FLAG: --conntrack-tcp-be-liberal="false"
I1002 22:19:00.397260       1 flags.go:64] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I1002 22:19:00.397270       1 flags.go:64] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I1002 22:19:00.397274       1 flags.go:64] FLAG: --conntrack-udp-timeout="0s"
I1002 22:19:00.397278       1 flags.go:64] FLAG: --conntrack-udp-timeout-stream="0s"
I1002 22:19:00.397293       1 flags.go:64] FLAG: --detect-local-mode="InterfaceNamePrefix"
I1002 22:19:00.397299       1 flags.go:64] FLAG: --feature-gates=""
I1002 22:19:00.397304       1 flags.go:64] FLAG: --healthz-bind-address="0.0.0.0:10256"
I1002 22:19:00.397309       1 flags.go:64] FLAG: --healthz-port="10256"
I1002 22:19:00.397312       1 flags.go:64] FLAG: --help="false"
I1002 22:19:00.397316       1 flags.go:64] FLAG: --hostname-override=""
I1002 22:19:00.397321       1 flags.go:64] FLAG: --init-only="false"
I1002 22:19:00.397325       1 flags.go:64] FLAG: --iptables-localhost-nodeports="true"
I1002 22:19:00.397329       1 flags.go:64] FLAG: --iptables-masquerade-bit="14"
I1002 22:19:00.397333       1 flags.go:64] FLAG: --iptables-min-sync-period="1s"
I1002 22:19:00.397338       1 flags.go:64] FLAG: --iptables-sync-period="30s"
I1002 22:19:00.397342       1 flags.go:64] FLAG: --ipvs-exclude-cidrs="[]"
I1002 22:19:00.397359       1 flags.go:64] FLAG: --ipvs-min-sync-period="0s"
I1002 22:19:00.397364       1 flags.go:64] FLAG: --ipvs-scheduler=""
I1002 22:19:00.397368       1 flags.go:64] FLAG: --ipvs-strict-arp="false"
I1002 22:19:00.397371       1 flags.go:64] FLAG: --ipvs-sync-period="30s"
I1002 22:19:00.397376       1 flags.go:64] FLAG: --ipvs-tcp-timeout="0s"
I1002 22:19:00.397379       1 flags.go:64] FLAG: --ipvs-tcpfin-timeout="0s"
I1002 22:19:00.397383       1 flags.go:64] FLAG: --ipvs-udp-timeout="0s"
I1002 22:19:00.397387       1 flags.go:64] FLAG: --kube-api-burst="10"
I1002 22:19:00.397390       1 flags.go:64] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I1002 22:19:00.397405       1 flags.go:64] FLAG: --kube-api-qps="5"
I1002 22:19:00.397416       1 flags.go:64] FLAG: --kubeconfig=""
I1002 22:19:00.397420       1 flags.go:64] FLAG: --log-flush-frequency="5s"
I1002 22:19:00.397424       1 flags.go:64] FLAG: --log-json-info-buffer-size="0"
I1002 22:19:00.397432       1 flags.go:64] FLAG: --log-json-split-stream="false"
I1002 22:19:00.397436       1 flags.go:64] FLAG: --logging-format="text"
I1002 22:19:00.397440       1 flags.go:64] FLAG: --machine-id-file="/etc/machine-id,/var/lib/dbus/machine-id"
I1002 22:19:00.397445       1 flags.go:64] FLAG: --masquerade-all="false"
I1002 22:19:00.397449       1 flags.go:64] FLAG: --master=""
I1002 22:19:00.397452       1 flags.go:64] FLAG: --metrics-bind-address="0.0.0.0:10249"
I1002 22:19:00.397470       1 flags.go:64] FLAG: --metrics-port="10249"
I1002 22:19:00.397474       1 flags.go:64] FLAG: --nodeport-addresses="[]"
I1002 22:19:00.397481       1 flags.go:64] FLAG: --oom-score-adj="-999"
I1002 22:19:00.397485       1 flags.go:64] FLAG: --pod-bridge-interface=""
I1002 22:19:00.397488       1 flags.go:64] FLAG: --pod-interface-name-prefix="azv"
I1002 22:19:00.397492       1 flags.go:64] FLAG: --profiling="false"
I1002 22:19:00.397496       1 flags.go:64] FLAG: --proxy-mode="iptables"
I1002 22:19:00.397504       1 flags.go:64] FLAG: --proxy-port-range=""
I1002 22:19:00.397509       1 flags.go:64] FLAG: --show-hidden-metrics-for-version=""
I1002 22:19:00.397514       1 flags.go:64] FLAG: --v="3"
I1002 22:19:00.397519       1 flags.go:64] FLAG: --version="false"
I1002 22:19:00.397530       1 flags.go:64] FLAG: --vmodule=""
I1002 22:19:00.397534       1 flags.go:64] FLAG: --write-config-to=""
I1002 22:19:00.397607       1 feature_gate.go:249] feature gates: &{map[]}
I1002 22:19:00.397882       1 server.go:773] "Neither kubeconfig file nor master URL was specified, falling back to in-cluster config"
I1002 22:19:01.293409       1 server.go:1050] "Successfully retrieved node IP(s)" IPs=["10.224.0.5"]
I1002 22:19:01.293545       1 conntrack.go:118] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_established" value=86400
I1002 22:19:01.293603       1 conntrack.go:118] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I1002 22:19:01.722723       1 server.go:652] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I1002 22:19:01.722750       1 server_others.go:168] "Using iptables Proxier"
I1002 22:19:01.724356       1 proxier.go:245] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I1002 22:19:01.724482       1 utils.go:290] "Changed sysctl" name="net/ipv4/conf/all/route_localnet" before=0 after=1
I1002 22:19:01.724536       1 proxier.go:268] "Using iptables mark for masquerade" ipFamily="IPv4" mark="0x00004000"
I1002 22:19:01.724559       1 proxier.go:304] "Iptables sync params" ipFamily="IPv4" minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I1002 22:19:01.724590       1 proxier.go:314] "Iptables supports --random-fully" ipFamily="IPv4"
I1002 22:19:01.724612       1 proxier.go:268] "Using iptables mark for masquerade" ipFamily="IPv6" mark="0x00004000"
I1002 22:19:01.724626       1 proxier.go:304] "Iptables sync params" ipFamily="IPv6" minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I1002 22:19:01.724647       1 proxier.go:314] "Iptables supports --random-fully" ipFamily="IPv6"
I1002 22:19:01.741373       1 server.go:865] "Version info" version="v1.29.8"
I1002 22:19:01.741390       1 server.go:867] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1002 22:19:01.741700       1 proxier_health.go:176] "Starting healthz HTTP server" address="0.0.0.0:10256"
I1002 22:19:01.894910       1 bounded_frequency_runner.go:192] sync-runner Loop running
I1002 22:19:01.894933       1 bounded_frequency_runner.go:192] sync-runner Loop running
I1002 22:19:01.894995       1 config.go:315] "Starting node config controller"
I1002 22:19:01.895039       1 config.go:97] "Starting endpoint slice config controller"
I1002 22:19:01.912801       1 shared_informer.go:311] Waiting for caches to sync for node config
I1002 22:19:01.912831       1 reflector.go:289] Starting reflector *v1.Service (15m0s) from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:19:01.912801       1 config.go:188] "Starting service config controller"
I1002 22:19:01.912842       1 reflector.go:325] Listing and watching *v1.Service from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:19:01.912845       1 shared_informer.go:311] Waiting for caches to sync for service config
I1002 22:19:01.912853       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I1002 22:19:01.912893       1 reflector.go:289] Starting reflector *v1.EndpointSlice (15m0s) from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:19:01.912922       1 reflector.go:325] Listing and watching *v1.EndpointSlice from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:19:01.912841       1 reflector.go:289] Starting reflector *v1.Node (15m0s) from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:19:01.912976       1 reflector.go:325] Listing and watching *v1.Node from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:19:01.921424       1 reflector.go:351] Caches populated for *v1.EndpointSlice from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:19:01.922619       1 reflector.go:351] Caches populated for *v1.Node from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:19:01.922695       1 proxier.go:775] "Not syncing iptables until Services and Endpoints have been received from master"
I1002 22:19:01.922714       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:01.922739       1 proxier.go:775] "Not syncing iptables until Services and Endpoints have been received from master"
I1002 22:19:01.922749       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:01.944452       1 reflector.go:351] Caches populated for *v1.Service from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:19:01.944602       1 utils.go:135] "Skipping service due to cluster IP" service="calico-system/calico-kube-controllers-metrics" clusterIP="None"
I1002 22:19:01.944647       1 utils.go:135] "Skipping service due to cluster IP" service="calico-system/calico-kube-controllers-metrics" clusterIP="None"
I1002 22:19:02.012967       1 shared_informer.go:318] Caches are synced for endpoint slice config
I1002 22:19:02.013000       1 shared_informer.go:318] Caches are synced for service config
I1002 22:19:02.013018       1 config.go:195] "Calling handler.OnServiceSynced()"
I1002 22:19:02.013045       1 proxier.go:775] "Not syncing iptables until Services and Endpoints have been received from master"
I1002 22:19:02.013055       1 proxier.go:775] "Not syncing iptables until Services and Endpoints have been received from master"
I1002 22:19:02.013002       1 config.go:104] "Calling handler.OnEndpointSlicesSynced()"
I1002 22:19:02.012969       1 shared_informer.go:318] Caches are synced for node config
I1002 22:19:02.013158       1 config.go:322] "Calling handler.OnNodeSynced()"
I1002 22:19:02.013186       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:02.013211       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:02.013237       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-apiserver/calico-api:apiserver" endpoints=["10.244.0.181:5443","10.244.0.205:5443"]
I1002 22:19:02.013256       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-system/calico-typha:calico-typha" endpoints=["10.224.0.5:5473"]
I1002 22:19:02.013287       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/kubernetes:https" endpoints=["52.191.238.193:443"]
I1002 22:19:02.013304       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:02.172090       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=8 numFilterChains=6 numFilterRules=20 numNATChains=6 numNATRules=10
I1002 22:19:02.295408       1 proxier.go:792] "SyncProxyRules complete" elapsed="282.328751ms"
I1002 22:19:02.295436       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:02.331597       1 proxier.go:1508] "Reloading service iptables data" numServices=0 numEndpoints=0 numFilterChains=5 numFilterRules=3 numNATChains=4 numNATRules=5
I1002 22:19:02.333001       1 proxier.go:792] "SyncProxyRules complete" elapsed="37.56767ms"
I1002 22:19:03.053280       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:03.054107       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:03.082089       1 proxier.go:1508] "Reloading service iptables data" numServices=0 numEndpoints=0 numFilterChains=5 numFilterRules=3 numNATChains=4 numNATRules=5
I1002 22:19:03.082326       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=8 numFilterChains=6 numFilterRules=20 numNATChains=6 numNATRules=10
I1002 22:19:03.104292       1 proxier.go:792] "SyncProxyRules complete" elapsed="51.043025ms"
I1002 22:19:03.104314       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:03.147503       1 proxier.go:792] "SyncProxyRules complete" elapsed="94.250731ms"
I1002 22:19:03.147526       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:04.327417       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.327437       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.327470       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.327477       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.327491       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:04.329498       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=8 numFilterChains=6 numFilterRules=18 numNATChains=8 numNATRules=16
I1002 22:19:04.474631       1 proxier.go:792] "SyncProxyRules complete" elapsed="147.262849ms"
I1002 22:19:04.474653       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:04.474716       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.474732       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.474757       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.474770       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.474788       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:04.476752       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=8 numFilterChains=6 numFilterRules=18 numNATChains=10 numNATRules=22
I1002 22:19:04.587270       1 proxier.go:792] "SyncProxyRules complete" elapsed="112.592732ms"
I1002 22:19:04.587294       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:05.587565       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="cert-manager/cert-manager:tcp-prometheus-servicemonitor" endpoints=["10.244.0.155:9402"]
I1002 22:19:05.587594       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:05.590048       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=9 numFilterChains=6 numFilterRules=17 numNATChains=6 numNATRules=13
I1002 22:19:05.616258       1 proxier.go:792] "SyncProxyRules complete" elapsed="28.737832ms"
I1002 22:19:05.616278       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:06.752420       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-one" endpoints=["10.244.0.245:80"]
I1002 22:19:06.752447       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:06.755320       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=10 numFilterChains=6 numFilterRules=16 numNATChains=6 numNATRules=14
I1002 22:19:06.791320       1 proxier.go:792] "SyncProxyRules complete" elapsed="38.921257ms"
I1002 22:19:06.791343       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:07.759091       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.49:4443"]
I1002 22:19:07.759114       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:07.761742       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=11 numFilterChains=6 numFilterRules=16 numNATChains=4 numNATRules=10
I1002 22:19:07.795505       1 proxier.go:792] "SyncProxyRules complete" elapsed="36.435023ms"
I1002 22:19:07.795526       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:08.795658       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.49:4443"]
I1002 22:19:08.795698       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.20:4443","10.244.0.49:4443"]
I1002 22:19:08.795710       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:08.798595       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=12 numFilterChains=6 numFilterRules=16 numNATChains=4 numNATRules=10
I1002 22:19:08.835263       1 proxier.go:792] "SyncProxyRules complete" elapsed="39.638927ms"
I1002 22:19:08.835285       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:13.461305       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-system/calico-typha:calico-typha" endpoints=["10.224.0.5:5473"]
I1002 22:19:13.461328       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-system/calico-typha:calico-typha" endpoints=["10.224.0.5:5473"]
I1002 22:19:13.461339       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:13.463894       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=12 numFilterChains=6 numFilterRules=16 numNATChains=4 numNATRules=10
I1002 22:19:13.499246       1 proxier.go:792] "SyncProxyRules complete" elapsed="37.969422ms"
I1002 22:19:13.499264       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:19.788213       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-two" endpoints=["10.244.0.230:5000"]
I1002 22:19:19.788239       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:19.790780       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=13 numFilterChains=6 numFilterRules=15 numNATChains=6 numNATRules=15
I1002 22:19:19.831266       1 proxier.go:792] "SyncProxyRules complete" elapsed="43.077554ms"
I1002 22:19:19.831284       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:20.837413       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="cert-manager/cert-manager-webhook:https" endpoints=["10.244.0.0:10250"]
I1002 22:19:20.837437       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:20.840177       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=14 numFilterChains=6 numFilterRules=15 numNATChains=4 numNATRules=11
I1002 22:19:20.891318       1 proxier.go:792] "SyncProxyRules complete" elapsed="53.928719ms"
I1002 22:19:20.891341       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:23.819228       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller-admission:https-webhook" endpoints=["10.244.0.72:8443"]
I1002 22:19:23.819261       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller:http" endpoints=["10.244.0.72:80"]
I1002 22:19:23.819268       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller:https" endpoints=["10.244.0.72:443"]
I1002 22:19:23.819294       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:23.821987       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=15 numNATChains=4 numNATRules=11
I1002 22:19:23.851383       1 proxier.go:792] "SyncProxyRules complete" elapsed="32.183686ms"
I1002 22:19:23.851400       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:23.851416       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:23.853627       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=15 numNATChains=4 numNATRules=11
I1002 22:19:23.911420       1 proxier.go:792] "SyncProxyRules complete" elapsed="60.00496ms"
I1002 22:19:23.911439       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:26.509685       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-system/calico-typha:calico-typha" endpoints=["10.224.0.5:5473"]
I1002 22:19:26.509710       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-system/calico-typha:calico-typha" endpoints=["10.224.0.5:5473"]
I1002 22:19:26.509720       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:26.512326       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=14 numNATChains=6 numNATRules=16
I1002 22:19:26.527499       1 proxier.go:792] "SyncProxyRules complete" elapsed="17.848039ms"
I1002 22:19:26.527517       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:29.369750       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="cert-manager/cert-manager-webhook:https" endpoints=["10.244.0.0:10250"]
I1002 22:19:29.369768       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="cert-manager/cert-manager-webhook:https" endpoints=["10.244.0.0:10250"]
I1002 22:19:29.369777       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:29.372338       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=13 numNATChains=6 numNATRules=17
I1002 22:19:29.395545       1 proxier.go:792] "SyncProxyRules complete" elapsed="25.813675ms"
I1002 22:19:29.395564       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:34.398903       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller-admission:https-webhook" endpoints=["10.244.0.72:8443"]
I1002 22:19:34.398936       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller-admission:https-webhook" endpoints=["10.244.0.72:8443"]
I1002 22:19:34.398952       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller:http" endpoints=["10.244.0.72:80"]
I1002 22:19:34.398979       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller:https" endpoints=["10.244.0.72:443"]
I1002 22:19:34.398991       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller:http" endpoints=["10.244.0.72:80"]
I1002 22:19:34.399000       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller:https" endpoints=["10.244.0.72:443"]
I1002 22:19:34.399016       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:34.401968       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=6 numNATChains=12 numNATRules=36
I1002 22:19:34.427758       1 proxier.go:792] "SyncProxyRules complete" elapsed="28.879205ms"
I1002 22:19:34.427779       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:34.427873       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:34.430607       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=6 numNATChains=4 numNATRules=20
I1002 22:19:34.471625       1 proxier.go:792] "SyncProxyRules complete" elapsed="43.822698ms"
I1002 22:19:34.471646       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:39.226796       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-apiserver/calico-api:apiserver" endpoints=["10.244.0.181:5443","10.244.0.205:5443"]
I1002 22:19:39.226825       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-apiserver/calico-api:apiserver" endpoints=["10.244.0.181:5443","10.244.0.205:5443"]
I1002 22:19:39.226838       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:39.230895       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=5 numNATChains=6 numNATRules=25
I1002 22:19:39.279347       1 proxier.go:792] "SyncProxyRules complete" elapsed="52.569986ms"
I1002 22:19:39.279373       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:42.479505       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-apiserver/calico-api:apiserver" endpoints=["10.244.0.181:5443","10.244.0.205:5443"]
I1002 22:19:42.479534       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-apiserver/calico-api:apiserver" endpoints=["10.244.0.181:5443","10.244.0.205:5443"]
I1002 22:19:42.479547       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:42.482774       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=5 numNATChains=7 numNATRules=28
I1002 22:19:42.504550       1 proxier.go:792] "SyncProxyRules complete" elapsed="25.064188ms"
I1002 22:19:42.504572       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:20:14.391352       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.20:4443","10.244.0.49:4443"]
I1002 22:20:14.391372       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.20:4443","10.244.0.49:4443"]
I1002 22:20:14.391381       1 proxier.go:798] "Syncing iptables rules"
I1002 22:20:14.394765       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=4 numNATChains=6 numNATRules=26
I1002 22:20:14.435258       1 proxier.go:792] "SyncProxyRules complete" elapsed="43.929619ms"
I1002 22:20:14.435279       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:20:14.492663       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.20:4443","10.244.0.49:4443"]
I1002 22:20:14.492683       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.20:4443","10.244.0.49:4443"]
I1002 22:20:14.492693       1 proxier.go:798] "Syncing iptables rules"
I1002 22:20:14.496032       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=4 numNATChains=7 numNATRules=29
I1002 22:20:14.515564       1 proxier.go:792] "SyncProxyRules complete" elapsed="22.92094ms"
I1002 22:20:14.515580       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:21:15.918563       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-one" endpoints=["10.244.0.245:80"]
I1002 22:21:15.918587       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-one" endpoints=["10.244.0.245:80"]
I1002 22:21:15.918596       1 proxier.go:798] "Syncing iptables rules"
I1002 22:21:15.922627       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=4 numNATChains=6 numNATRules=26
I1002 22:21:15.943613       1 proxier.go:792] "SyncProxyRules complete" elapsed="25.069608ms"
I1002 22:21:15.943633       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:21:16.349315       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-one" endpoints=["10.244.0.245:80"]
I1002 22:21:16.349340       1 proxier.go:798] "Syncing iptables rules"
I1002 22:21:16.352740       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=16 numFilterChains=6 numFilterRules=5 numNATChains=6 numNATRules=23
I1002 22:21:16.391339       1 proxier.go:792] "SyncProxyRules complete" elapsed="42.051092ms"
I1002 22:21:16.391374       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:21:18.319472       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-one" endpoints=["10.0.24.193:80"]
I1002 22:21:18.319525       1 proxier.go:798] "Syncing iptables rules"
I1002 22:21:18.323639       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=4 numNATChains=6 numNATRules=26
I1002 22:21:18.351527       1 proxier.go:792] "SyncProxyRules complete" elapsed="32.118067ms"
I1002 22:21:18.351543       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:21:51.988675       1 proxier.go:798] "Syncing iptables rules"
I1002 22:21:51.992597       1 proxier.go:1508] "Reloading service iptables data" numServices=12 numEndpoints=16 numFilterChains=6 numFilterRules=4 numNATChains=6 numNATRules=23
I1002 22:21:52.011954       1 proxier.go:792] "SyncProxyRules complete" elapsed="23.290046ms"
I1002 22:21:52.011973       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:21:52.019172       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-one" endpoints=["10.0.24.193:80"]
I1002 22:21:52.019193       1 proxier.go:798] "Syncing iptables rules"
I1002 22:21:52.022510       1 proxier.go:1508] "Reloading service iptables data" numServices=12 numEndpoints=16 numFilterChains=6 numFilterRules=4 numNATChains=4 numNATRules=21
I1002 22:21:52.051947       1 proxier.go:792] "SyncProxyRules complete" elapsed="32.796807ms"
I1002 22:21:52.051967       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:23:07.479865       1 proxier.go:798] "Syncing iptables rules"
I1002 22:23:07.483963       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=16 numFilterChains=6 numFilterRules=5 numNATChains=4 numNATRules=21
I1002 22:23:07.507581       1 proxier.go:792] "SyncProxyRules complete" elapsed="27.72778ms"
I1002 22:23:07.507600       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:23:07.507623       1 proxier.go:798] "Syncing iptables rules"
I1002 22:23:07.510900       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=16 numFilterChains=6 numFilterRules=5 numNATChains=4 numNATRules=21
I1002 22:23:07.571293       1 proxier.go:792] "SyncProxyRules complete" elapsed="63.671346ms"
I1002 22:23:07.571314       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:34:01.945876       1 utils.go:135] "Skipping service due to cluster IP" service="calico-system/calico-kube-controllers-metrics" clusterIP="None"
I1002 22:34:01.945896       1 utils.go:135] "Skipping service due to cluster IP" service="calico-system/calico-kube-controllers-metrics" clusterIP="None"
I1002 22:34:01.945902       1 utils.go:135] "Skipping service due to cluster IP" service="calico-system/calico-kube-controllers-metrics" clusterIP="None"
I1002 22:34:01.945906       1 utils.go:135] "Skipping service due to cluster IP" service="calico-system/calico-kube-controllers-metrics" clusterIP="None"
==== END logs for container kube-proxy of pod kube-system/kube-proxy-lsxcg ====
==== START logs for container kube-proxy-bootstrap of pod kube-system/kube-proxy-zj62b ====
Current net.netfilter.nf_conntrack_max: 262144
AKS custom config for net.netfilter.nf_conntrack_max not set.
Setting nf_conntrack_max to 131072 (32768 * 4 cores, minimum 131072).
==== END logs for container kube-proxy-bootstrap of pod kube-system/kube-proxy-zj62b ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-zj62b ====
I1002 22:18:45.424875       1 server_others.go:72] "Using iptables proxy"
I1002 22:18:45.425061       1 flags.go:64] FLAG: --bind-address="0.0.0.0"
I1002 22:18:45.425071       1 flags.go:64] FLAG: --bind-address-hard-fail="false"
I1002 22:18:45.425078       1 flags.go:64] FLAG: --boot-id-file="/proc/sys/kernel/random/boot_id"
I1002 22:18:45.425084       1 flags.go:64] FLAG: --cleanup="false"
I1002 22:18:45.425087       1 flags.go:64] FLAG: --cluster-cidr="10.244.0.0/16"
I1002 22:18:45.425093       1 flags.go:64] FLAG: --config=""
I1002 22:18:45.425097       1 flags.go:64] FLAG: --config-sync-period="15m0s"
I1002 22:18:45.425103       1 flags.go:64] FLAG: --conntrack-max-per-core="0"
I1002 22:18:45.425108       1 flags.go:64] FLAG: --conntrack-min="131072"
I1002 22:18:45.425113       1 flags.go:64] FLAG: --conntrack-tcp-be-liberal="false"
I1002 22:18:45.425116       1 flags.go:64] FLAG: --conntrack-tcp-timeout-close-wait="1h0m0s"
I1002 22:18:45.425119       1 flags.go:64] FLAG: --conntrack-tcp-timeout-established="24h0m0s"
I1002 22:18:45.425122       1 flags.go:64] FLAG: --conntrack-udp-timeout="0s"
I1002 22:18:45.425125       1 flags.go:64] FLAG: --conntrack-udp-timeout-stream="0s"
I1002 22:18:45.425128       1 flags.go:64] FLAG: --detect-local-mode="InterfaceNamePrefix"
I1002 22:18:45.425134       1 flags.go:64] FLAG: --feature-gates=""
I1002 22:18:45.425139       1 flags.go:64] FLAG: --healthz-bind-address="0.0.0.0:10256"
I1002 22:18:45.425144       1 flags.go:64] FLAG: --healthz-port="10256"
I1002 22:18:45.425147       1 flags.go:64] FLAG: --help="false"
I1002 22:18:45.425150       1 flags.go:64] FLAG: --hostname-override=""
I1002 22:18:45.425152       1 flags.go:64] FLAG: --init-only="false"
I1002 22:18:45.425155       1 flags.go:64] FLAG: --iptables-localhost-nodeports="true"
I1002 22:18:45.425158       1 flags.go:64] FLAG: --iptables-masquerade-bit="14"
I1002 22:18:45.425161       1 flags.go:64] FLAG: --iptables-min-sync-period="1s"
I1002 22:18:45.425165       1 flags.go:64] FLAG: --iptables-sync-period="30s"
I1002 22:18:45.425168       1 flags.go:64] FLAG: --ipvs-exclude-cidrs="[]"
I1002 22:18:45.425179       1 flags.go:64] FLAG: --ipvs-min-sync-period="0s"
I1002 22:18:45.425190       1 flags.go:64] FLAG: --ipvs-scheduler=""
I1002 22:18:45.425195       1 flags.go:64] FLAG: --ipvs-strict-arp="false"
I1002 22:18:45.425198       1 flags.go:64] FLAG: --ipvs-sync-period="30s"
I1002 22:18:45.425201       1 flags.go:64] FLAG: --ipvs-tcp-timeout="0s"
I1002 22:18:45.425205       1 flags.go:64] FLAG: --ipvs-tcpfin-timeout="0s"
I1002 22:18:45.425208       1 flags.go:64] FLAG: --ipvs-udp-timeout="0s"
I1002 22:18:45.425210       1 flags.go:64] FLAG: --kube-api-burst="10"
I1002 22:18:45.425213       1 flags.go:64] FLAG: --kube-api-content-type="application/vnd.kubernetes.protobuf"
I1002 22:18:45.425217       1 flags.go:64] FLAG: --kube-api-qps="5"
I1002 22:18:45.425231       1 flags.go:64] FLAG: --kubeconfig=""
I1002 22:18:45.425234       1 flags.go:64] FLAG: --log-flush-frequency="5s"
I1002 22:18:45.425237       1 flags.go:64] FLAG: --log-json-info-buffer-size="0"
I1002 22:18:45.425246       1 flags.go:64] FLAG: --log-json-split-stream="false"
I1002 22:18:45.425249       1 flags.go:64] FLAG: --logging-format="text"
I1002 22:18:45.425252       1 flags.go:64] FLAG: --machine-id-file="/etc/machine-id,/var/lib/dbus/machine-id"
I1002 22:18:45.425256       1 flags.go:64] FLAG: --masquerade-all="false"
I1002 22:18:45.425259       1 flags.go:64] FLAG: --master=""
I1002 22:18:45.425262       1 flags.go:64] FLAG: --metrics-bind-address="0.0.0.0:10249"
I1002 22:18:45.425265       1 flags.go:64] FLAG: --metrics-port="10249"
I1002 22:18:45.425268       1 flags.go:64] FLAG: --nodeport-addresses="[]"
I1002 22:18:45.425273       1 flags.go:64] FLAG: --oom-score-adj="-999"
I1002 22:18:45.425279       1 flags.go:64] FLAG: --pod-bridge-interface=""
I1002 22:18:45.425282       1 flags.go:64] FLAG: --pod-interface-name-prefix="azv"
I1002 22:18:45.425285       1 flags.go:64] FLAG: --profiling="false"
I1002 22:18:45.425288       1 flags.go:64] FLAG: --proxy-mode="iptables"
I1002 22:18:45.425295       1 flags.go:64] FLAG: --proxy-port-range=""
I1002 22:18:45.425300       1 flags.go:64] FLAG: --show-hidden-metrics-for-version=""
I1002 22:18:45.425302       1 flags.go:64] FLAG: --v="3"
I1002 22:18:45.425308       1 flags.go:64] FLAG: --version="false"
I1002 22:18:45.425314       1 flags.go:64] FLAG: --vmodule=""
I1002 22:18:45.425319       1 flags.go:64] FLAG: --write-config-to=""
I1002 22:18:45.425392       1 feature_gate.go:249] feature gates: &{map[]}
I1002 22:18:45.425779       1 server.go:773] "Neither kubeconfig file nor master URL was specified, falling back to in-cluster config"
I1002 22:18:45.753990       1 server.go:1050] "Successfully retrieved node IP(s)" IPs=["10.224.0.4"]
I1002 22:18:45.754207       1 conntrack.go:118] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_established" value=86400
I1002 22:18:45.754262       1 conntrack.go:118] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I1002 22:18:45.977029       1 server.go:652] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I1002 22:18:45.977129       1 server_others.go:168] "Using iptables Proxier"
I1002 22:18:45.982783       1 proxier.go:245] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I1002 22:18:45.982926       1 utils.go:290] "Changed sysctl" name="net/ipv4/conf/all/route_localnet" before=0 after=1
I1002 22:18:45.982986       1 proxier.go:268] "Using iptables mark for masquerade" ipFamily="IPv4" mark="0x00004000"
I1002 22:18:45.983017       1 proxier.go:304] "Iptables sync params" ipFamily="IPv4" minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I1002 22:18:45.983058       1 proxier.go:314] "Iptables supports --random-fully" ipFamily="IPv4"
I1002 22:18:45.983083       1 proxier.go:268] "Using iptables mark for masquerade" ipFamily="IPv6" mark="0x00004000"
I1002 22:18:45.983103       1 proxier.go:304] "Iptables sync params" ipFamily="IPv6" minSyncPeriod="1s" syncPeriod="30s" burstSyncs=2
I1002 22:18:45.983116       1 proxier.go:314] "Iptables supports --random-fully" ipFamily="IPv6"
I1002 22:18:45.990229       1 server.go:865] "Version info" version="v1.29.8"
I1002 22:18:45.990266       1 server.go:867] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1002 22:18:45.990790       1 proxier_health.go:176] "Starting healthz HTTP server" address="0.0.0.0:10256"
I1002 22:18:46.065029       1 bounded_frequency_runner.go:192] sync-runner Loop running
I1002 22:18:46.065066       1 bounded_frequency_runner.go:192] sync-runner Loop running
I1002 22:18:46.065095       1 config.go:188] "Starting service config controller"
I1002 22:18:46.065270       1 shared_informer.go:311] Waiting for caches to sync for service config
I1002 22:18:46.065316       1 config.go:315] "Starting node config controller"
I1002 22:18:46.065559       1 shared_informer.go:311] Waiting for caches to sync for node config
I1002 22:18:46.065364       1 reflector.go:289] Starting reflector *v1.EndpointSlice (15m0s) from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:18:46.065576       1 reflector.go:325] Listing and watching *v1.EndpointSlice from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:18:46.065395       1 config.go:97] "Starting endpoint slice config controller"
I1002 22:18:46.065933       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I1002 22:18:46.065429       1 reflector.go:289] Starting reflector *v1.Node (15m0s) from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:18:46.065953       1 reflector.go:325] Listing and watching *v1.Node from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:18:46.065536       1 reflector.go:289] Starting reflector *v1.Service (15m0s) from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:18:46.066119       1 reflector.go:325] Listing and watching *v1.Service from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:18:46.072014       1 reflector.go:351] Caches populated for *v1.EndpointSlice from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:18:46.072068       1 reflector.go:351] Caches populated for *v1.Node from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:18:46.079917       1 reflector.go:351] Caches populated for *v1.Service from k8s.io/client-go@v0.0.0/tools/cache/reflector.go:229
I1002 22:18:46.080339       1 utils.go:135] "Skipping service due to cluster IP" service="calico-system/calico-kube-controllers-metrics" clusterIP="None"
I1002 22:18:46.080379       1 utils.go:135] "Skipping service due to cluster IP" service="calico-system/calico-kube-controllers-metrics" clusterIP="None"
I1002 22:18:46.085541       1 proxier.go:775] "Not syncing iptables until Services and Endpoints have been received from master"
I1002 22:18:46.085580       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:18:46.085541       1 proxier.go:775] "Not syncing iptables until Services and Endpoints have been received from master"
I1002 22:18:46.085594       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:18:46.165383       1 shared_informer.go:318] Caches are synced for service config
I1002 22:18:46.165418       1 config.go:195] "Calling handler.OnServiceSynced()"
I1002 22:18:46.165462       1 proxier.go:775] "Not syncing iptables until Services and Endpoints have been received from master"
I1002 22:18:46.165477       1 proxier.go:775] "Not syncing iptables until Services and Endpoints have been received from master"
I1002 22:18:46.166594       1 shared_informer.go:318] Caches are synced for endpoint slice config
I1002 22:18:46.166625       1 shared_informer.go:318] Caches are synced for node config
I1002 22:18:46.166647       1 config.go:322] "Calling handler.OnNodeSynced()"
I1002 22:18:46.166613       1 config.go:104] "Calling handler.OnEndpointSlicesSynced()"
I1002 22:18:46.166809       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/kubernetes:https" endpoints=["52.191.238.193:443"]
I1002 22:18:46.166826       1 proxier.go:798] "Syncing iptables rules"
I1002 22:18:46.305833       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=1 numFilterChains=6 numFilterRules=20 numNATChains=6 numNATRules=10
I1002 22:18:46.359353       1 proxier.go:792] "SyncProxyRules complete" elapsed="192.652243ms"
I1002 22:18:46.359395       1 proxier.go:798] "Syncing iptables rules"
I1002 22:18:46.430248       1 proxier.go:1508] "Reloading service iptables data" numServices=0 numEndpoints=0 numFilterChains=5 numFilterRules=3 numNATChains=4 numNATRules=5
I1002 22:18:46.432459       1 proxier.go:792] "SyncProxyRules complete" elapsed="73.054029ms"
I1002 22:18:48.642772       1 proxier.go:798] "Syncing iptables rules"
I1002 22:18:48.642833       1 proxier.go:798] "Syncing iptables rules"
I1002 22:18:48.678619       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=1 numFilterChains=6 numFilterRules=20 numNATChains=6 numNATRules=10
I1002 22:18:48.678996       1 proxier.go:1508] "Reloading service iptables data" numServices=0 numEndpoints=0 numFilterChains=5 numFilterRules=3 numNATChains=4 numNATRules=5
I1002 22:18:48.767063       1 proxier.go:792] "SyncProxyRules complete" elapsed="124.286741ms"
I1002 22:18:48.767093       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:18:48.767572       1 proxier.go:792] "SyncProxyRules complete" elapsed="124.752875ms"
I1002 22:18:48.767587       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:18:51.034594       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-system/calico-typha:calico-typha" endpoints=["10.224.0.5:5473"]
I1002 22:18:51.034627       1 proxier.go:798] "Syncing iptables rules"
I1002 22:18:51.037362       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=2 numFilterChains=6 numFilterRules=20 numNATChains=4 numNATRules=6
I1002 22:18:51.067652       1 proxier.go:792] "SyncProxyRules complete" elapsed="33.123839ms"
I1002 22:18:51.067679       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:18:55.693150       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=["10.244.0.76:53"]
I1002 22:18:55.693183       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=["10.244.0.76:53"]
I1002 22:18:55.693199       1 proxier.go:798] "Syncing iptables rules"
I1002 22:18:55.696640       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=4 numFilterChains=6 numFilterRules=20 numNATChains=4 numNATRules=6
I1002 22:18:55.739355       1 proxier.go:792] "SyncProxyRules complete" elapsed="46.256063ms"
I1002 22:18:55.739387       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:18:55.739451       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=["10.244.0.76:53"]
I1002 22:18:55.739461       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=["10.244.0.76:53"]
I1002 22:18:55.739489       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:18:55.739498       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:18:55.739511       1 proxier.go:798] "Syncing iptables rules"
I1002 22:18:55.742750       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=6 numFilterChains=6 numFilterRules=20 numNATChains=4 numNATRules=6
I1002 22:18:55.815976       1 proxier.go:792] "SyncProxyRules complete" elapsed="76.55672ms"
I1002 22:18:55.816004       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:18:58.731111       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-apiserver/calico-api:apiserver" endpoints=["10.244.0.181:5443"]
I1002 22:18:58.731144       1 proxier.go:798] "Syncing iptables rules"
I1002 22:18:58.733855       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=7 numFilterChains=6 numFilterRules=20 numNATChains=4 numNATRules=6
I1002 22:18:58.779347       1 proxier.go:792] "SyncProxyRules complete" elapsed="48.280954ms"
I1002 22:18:58.779381       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:18:58.779438       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-apiserver/calico-api:apiserver" endpoints=["10.244.0.181:5443"]
I1002 22:18:58.779464       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-apiserver/calico-api:apiserver" endpoints=["10.244.0.181:5443","10.244.0.205:5443"]
I1002 22:18:58.779477       1 proxier.go:798] "Syncing iptables rules"
I1002 22:18:58.782198       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=8 numFilterChains=6 numFilterRules=20 numNATChains=4 numNATRules=6
I1002 22:18:58.831457       1 proxier.go:792] "SyncProxyRules complete" elapsed="52.042582ms"
I1002 22:18:58.831498       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:04.327245       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.327273       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.327301       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.327310       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.327325       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:04.330456       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=8 numFilterChains=6 numFilterRules=18 numNATChains=8 numNATRules=16
I1002 22:19:04.480875       1 proxier.go:792] "SyncProxyRules complete" elapsed="153.675621ms"
I1002 22:19:04.480905       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:04.480990       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.481001       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.481032       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.481043       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/kube-dns:dns-tcp" endpoints=["10.244.0.19:53","10.244.0.76:53"]
I1002 22:19:04.481060       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:04.483819       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=8 numFilterChains=6 numFilterRules=18 numNATChains=10 numNATRules=22
I1002 22:19:04.572212       1 proxier.go:792] "SyncProxyRules complete" elapsed="91.273199ms"
I1002 22:19:04.572240       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:05.572451       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="cert-manager/cert-manager:tcp-prometheus-servicemonitor" endpoints=["10.244.0.155:9402"]
I1002 22:19:05.572489       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:05.575882       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=9 numFilterChains=6 numFilterRules=17 numNATChains=6 numNATRules=13
I1002 22:19:05.627121       1 proxier.go:792] "SyncProxyRules complete" elapsed="54.745304ms"
I1002 22:19:05.627151       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:06.752219       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-one" endpoints=["10.244.0.245:80"]
I1002 22:19:06.752250       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:06.755221       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=10 numFilterChains=6 numFilterRules=16 numNATChains=6 numNATRules=14
I1002 22:19:06.771408       1 proxier.go:792] "SyncProxyRules complete" elapsed="19.230442ms"
I1002 22:19:06.771436       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:07.758646       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.49:4443"]
I1002 22:19:07.758674       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:07.762078       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=11 numFilterChains=6 numFilterRules=16 numNATChains=4 numNATRules=10
I1002 22:19:07.779713       1 proxier.go:792] "SyncProxyRules complete" elapsed="21.09419ms"
I1002 22:19:07.779748       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:08.779936       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.49:4443"]
I1002 22:19:08.779998       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.20:4443","10.244.0.49:4443"]
I1002 22:19:08.780015       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:08.783449       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=12 numFilterChains=6 numFilterRules=16 numNATChains=4 numNATRules=10
I1002 22:19:08.823167       1 proxier.go:792] "SyncProxyRules complete" elapsed="43.291015ms"
I1002 22:19:08.823203       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:13.461139       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-system/calico-typha:calico-typha" endpoints=["10.224.0.5:5473"]
I1002 22:19:13.461173       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-system/calico-typha:calico-typha" endpoints=["10.224.0.5:5473"]
I1002 22:19:13.461189       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:13.464783       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=12 numFilterChains=6 numFilterRules=16 numNATChains=4 numNATRules=10
I1002 22:19:13.511120       1 proxier.go:792] "SyncProxyRules complete" elapsed="50.019545ms"
I1002 22:19:13.511153       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:19.787913       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-two" endpoints=["10.244.0.230:5000"]
I1002 22:19:19.787977       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:19.792006       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=13 numFilterChains=6 numFilterRules=15 numNATChains=6 numNATRules=15
I1002 22:19:19.839199       1 proxier.go:792] "SyncProxyRules complete" elapsed="51.328601ms"
I1002 22:19:19.839235       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:20.837038       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="cert-manager/cert-manager-webhook:https" endpoints=["10.244.0.0:10250"]
I1002 22:19:20.837073       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:20.840249       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=14 numFilterChains=6 numFilterRules=15 numNATChains=4 numNATRules=11
I1002 22:19:20.863511       1 proxier.go:792] "SyncProxyRules complete" elapsed="26.510093ms"
I1002 22:19:20.863547       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:23.819000       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller-admission:https-webhook" endpoints=["10.244.0.72:8443"]
I1002 22:19:23.819038       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller:https" endpoints=["10.244.0.72:443"]
I1002 22:19:23.819047       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller:http" endpoints=["10.244.0.72:80"]
I1002 22:19:23.819059       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:23.821957       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=15 numNATChains=4 numNATRules=11
I1002 22:19:23.839354       1 proxier.go:792] "SyncProxyRules complete" elapsed="20.412568ms"
I1002 22:19:23.839384       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:23.839407       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:23.842229       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=15 numNATChains=4 numNATRules=11
I1002 22:19:23.891516       1 proxier.go:792] "SyncProxyRules complete" elapsed="52.084448ms"
I1002 22:19:23.891547       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:26.509567       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-system/calico-typha:calico-typha" endpoints=["10.224.0.5:5473"]
I1002 22:19:26.509602       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-system/calico-typha:calico-typha" endpoints=["10.224.0.5:5473"]
I1002 22:19:26.509616       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:26.512700       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=14 numNATChains=6 numNATRules=16
I1002 22:19:26.539447       1 proxier.go:792] "SyncProxyRules complete" elapsed="29.906629ms"
I1002 22:19:26.539480       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:29.369766       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="cert-manager/cert-manager-webhook:https" endpoints=["10.244.0.0:10250"]
I1002 22:19:29.369796       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="cert-manager/cert-manager-webhook:https" endpoints=["10.244.0.0:10250"]
I1002 22:19:29.369811       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:29.372973       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=13 numNATChains=6 numNATRules=17
I1002 22:19:29.395634       1 proxier.go:792] "SyncProxyRules complete" elapsed="25.916842ms"
I1002 22:19:29.395664       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:34.399023       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller:http" endpoints=["10.244.0.72:80"]
I1002 22:19:34.399053       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller:https" endpoints=["10.244.0.72:443"]
I1002 22:19:34.399072       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller:http" endpoints=["10.244.0.72:80"]
I1002 22:19:34.399079       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller:https" endpoints=["10.244.0.72:443"]
I1002 22:19:34.399095       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller-admission:https-webhook" endpoints=["10.244.0.72:8443"]
I1002 22:19:34.399115       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/my-nginx-ingress-ingress-nginx-controller-admission:https-webhook" endpoints=["10.244.0.72:8443"]
I1002 22:19:34.399135       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:34.405501       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=6 numNATChains=12 numNATRules=36
I1002 22:19:34.427879       1 proxier.go:792] "SyncProxyRules complete" elapsed="28.902666ms"
I1002 22:19:34.427915       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:34.427939       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:34.434479       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=6 numNATChains=4 numNATRules=20
I1002 22:19:34.475922       1 proxier.go:792] "SyncProxyRules complete" elapsed="47.974696ms"
I1002 22:19:34.475954       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:39.226752       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-apiserver/calico-api:apiserver" endpoints=["10.244.0.181:5443","10.244.0.205:5443"]
I1002 22:19:39.226780       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-apiserver/calico-api:apiserver" endpoints=["10.244.0.181:5443","10.244.0.205:5443"]
I1002 22:19:39.226792       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:39.233589       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=5 numNATChains=6 numNATRules=25
I1002 22:19:39.259843       1 proxier.go:792] "SyncProxyRules complete" elapsed="33.113538ms"
I1002 22:19:39.259881       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:19:42.479768       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-apiserver/calico-api:apiserver" endpoints=["10.244.0.181:5443","10.244.0.205:5443"]
I1002 22:19:42.479816       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="calico-apiserver/calico-api:apiserver" endpoints=["10.244.0.181:5443","10.244.0.205:5443"]
I1002 22:19:42.479832       1 proxier.go:798] "Syncing iptables rules"
I1002 22:19:42.487935       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=5 numNATChains=7 numNATRules=28
I1002 22:19:42.508309       1 proxier.go:792] "SyncProxyRules complete" elapsed="28.57048ms"
I1002 22:19:42.508345       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:20:14.391305       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.20:4443","10.244.0.49:4443"]
I1002 22:20:14.391345       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.20:4443","10.244.0.49:4443"]
I1002 22:20:14.391360       1 proxier.go:798] "Syncing iptables rules"
I1002 22:20:14.397756       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=4 numNATChains=6 numNATRules=26
I1002 22:20:14.428225       1 proxier.go:792] "SyncProxyRules complete" elapsed="36.950484ms"
I1002 22:20:14.428255       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:20:14.492563       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.20:4443","10.244.0.49:4443"]
I1002 22:20:14.492592       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="kube-system/metrics-server" endpoints=["10.244.0.20:4443","10.244.0.49:4443"]
I1002 22:20:14.492602       1 proxier.go:798] "Syncing iptables rules"
I1002 22:20:14.498943       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=4 numNATChains=7 numNATRules=29
I1002 22:20:14.523918       1 proxier.go:792] "SyncProxyRules complete" elapsed="31.383293ms"
I1002 22:20:14.523949       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:21:15.917159       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-one" endpoints=["10.244.0.245:80"]
I1002 22:21:15.917194       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-one" endpoints=["10.244.0.245:80"]
I1002 22:21:15.917211       1 proxier.go:798] "Syncing iptables rules"
I1002 22:21:15.923257       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=4 numNATChains=6 numNATRules=26
I1002 22:21:15.947714       1 proxier.go:792] "SyncProxyRules complete" elapsed="30.600704ms"
I1002 22:21:15.947746       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:21:16.351649       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-one" endpoints=["10.244.0.245:80"]
I1002 22:21:16.351677       1 proxier.go:798] "Syncing iptables rules"
I1002 22:21:16.357657       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=16 numFilterChains=6 numFilterRules=5 numNATChains=6 numNATRules=23
I1002 22:21:16.379729       1 proxier.go:792] "SyncProxyRules complete" elapsed="28.115803ms"
I1002 22:21:16.379762       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:21:18.322103       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-one" endpoints=["10.0.24.193:80"]
I1002 22:21:18.322134       1 proxier.go:798] "Syncing iptables rules"
I1002 22:21:18.327757       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=17 numFilterChains=6 numFilterRules=4 numNATChains=6 numNATRules=26
I1002 22:21:18.359771       1 proxier.go:792] "SyncProxyRules complete" elapsed="37.708183ms"
I1002 22:21:18.359804       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:21:51.988618       1 proxier.go:798] "Syncing iptables rules"
I1002 22:21:51.994757       1 proxier.go:1508] "Reloading service iptables data" numServices=12 numEndpoints=16 numFilterChains=6 numFilterRules=4 numNATChains=6 numNATRules=23
I1002 22:21:52.020061       1 proxier.go:792] "SyncProxyRules complete" elapsed="31.45152ms"
I1002 22:21:52.020089       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:21:52.020147       1 endpointslicecache.go:348] "Setting endpoints for service port name" portName="default/aks-helloworld-one" endpoints=["10.0.24.193:80"]
I1002 22:21:52.020164       1 proxier.go:798] "Syncing iptables rules"
I1002 22:21:52.025775       1 proxier.go:1508] "Reloading service iptables data" numServices=12 numEndpoints=16 numFilterChains=6 numFilterRules=4 numNATChains=4 numNATRules=21
I1002 22:21:52.063643       1 proxier.go:792] "SyncProxyRules complete" elapsed="43.51767ms"
I1002 22:21:52.063683       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:23:07.479932       1 proxier.go:798] "Syncing iptables rules"
I1002 22:23:07.485702       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=16 numFilterChains=6 numFilterRules=5 numNATChains=4 numNATRules=21
I1002 22:23:07.523035       1 proxier.go:792] "SyncProxyRules complete" elapsed="43.105549ms"
I1002 22:23:07.523067       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:23:07.523103       1 proxier.go:798] "Syncing iptables rules"
I1002 22:23:07.528424       1 proxier.go:1508] "Reloading service iptables data" numServices=13 numEndpoints=16 numFilterChains=6 numFilterRules=5 numNATChains=4 numNATRules=21
I1002 22:23:07.551500       1 proxier.go:792] "SyncProxyRules complete" elapsed="28.396788ms"
I1002 22:23:07.551526       1 bounded_frequency_runner.go:296] sync-runner: ran, next possible in 1s, periodic in 1h0m0s
I1002 22:33:46.080752       1 utils.go:135] "Skipping service due to cluster IP" service="calico-system/calico-kube-controllers-metrics" clusterIP="None"
I1002 22:33:46.080792       1 utils.go:135] "Skipping service due to cluster IP" service="calico-system/calico-kube-controllers-metrics" clusterIP="None"
I1002 22:33:46.080806       1 utils.go:135] "Skipping service due to cluster IP" service="calico-system/calico-kube-controllers-metrics" clusterIP="None"
I1002 22:33:46.080811       1 utils.go:135] "Skipping service due to cluster IP" service="calico-system/calico-kube-controllers-metrics" clusterIP="None"
==== END logs for container kube-proxy of pod kube-system/kube-proxy-zj62b ====
==== START logs for container metrics-server-vpa of pod kube-system/metrics-server-f46f56d7b-5fc5j ====
I1002 22:18:57.849563       1 pod_nanny.go:86] Invoked by [/pod_nanny --config-dir=/etc/config --cpu=44m --extra-cpu=0.5m --memory=51Mi --extra-memory=4Mi --poll-period=180000 --threshold=5 --deployment=metrics-server --container=metrics-server]
I1002 22:18:57.857604       1 pod_nanny.go:87] Version: 1.8.22
I1002 22:18:57.857642       1 pod_nanny.go:109] Watching namespace: kube-system, pod: metrics-server-f46f56d7b-5fc5j, container: metrics-server.
I1002 22:18:57.857647       1 pod_nanny.go:110] storage: MISSING, extra_storage: 0Gi
I1002 22:18:58.088537       1 pod_nanny.go:214] Failed to read data from config file "/etc/config/NannyConfiguration": open /etc/config/NannyConfiguration: no such file or directory, using default parameters
I1002 22:18:58.088575       1 pod_nanny.go:144] cpu: 44m, extra_cpu: 0.5m, memory: 51Mi, extra_memory: 4Mi
I1002 22:18:58.088591       1 pod_nanny.go:278] Resources: [{Base:{i:{value:44 scale:-3} d:{Dec:<nil>} s:44m Format:DecimalSI} ExtraPerResource:{i:{value:5 scale:-4} d:{Dec:<nil>} s: Format:DecimalSI} Name:cpu} {Base:{i:{value:53477376 scale:0} d:{Dec:<nil>} s:51Mi Format:BinarySI} ExtraPerResource:{i:{value:4194304 scale:0} d:{Dec:<nil>} s:4Mi Format:BinarySI} Name:memory}]
==== END logs for container metrics-server-vpa of pod kube-system/metrics-server-f46f56d7b-5fc5j ====
==== START logs for container metrics-server of pod kube-system/metrics-server-f46f56d7b-5fc5j ====
I1002 22:19:17.732144       1 serving.go:342] Generated self-signed cert (/tmp/apiserver.crt, /tmp/apiserver.key)
I1002 22:19:27.140004       1 secure_serving.go:267] Serving securely on [::]:4443
I1002 22:19:27.140050       1 requestheader_controller.go:169] Starting RequestHeaderAuthRequestController
I1002 22:19:27.140061       1 shared_informer.go:240] Waiting for caches to sync for RequestHeaderAuthRequestController
I1002 22:19:27.140105       1 dynamic_serving_content.go:131] "Starting controller" name="serving-cert::/tmp/apiserver.crt::/tmp/apiserver.key"
I1002 22:19:27.231248       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W1002 22:19:27.231395       1 shared_informer.go:372] The sharedIndexInformer has started, run more than once is not allowed
I1002 22:19:27.231505       1 configmap_cafile_content.go:201] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file"
I1002 22:19:27.231518       1 shared_informer.go:240] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file
I1002 22:19:27.231562       1 configmap_cafile_content.go:201] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I1002 22:19:27.231568       1 shared_informer.go:240] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I1002 22:19:27.434193       1 shared_informer.go:247] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file 
I1002 22:19:27.630842       1 shared_informer.go:247] Caches are synced for RequestHeaderAuthRequestController 
I1002 22:19:27.631316       1 shared_informer.go:247] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file 
==== END logs for container metrics-server of pod kube-system/metrics-server-f46f56d7b-5fc5j ====
==== START logs for container metrics-server-vpa of pod kube-system/metrics-server-f46f56d7b-trtqp ====
I1002 22:18:57.849394       1 pod_nanny.go:86] Invoked by [/pod_nanny --config-dir=/etc/config --cpu=44m --extra-cpu=0.5m --memory=51Mi --extra-memory=4Mi --poll-period=180000 --threshold=5 --deployment=metrics-server --container=metrics-server]
I1002 22:18:57.857243       1 pod_nanny.go:87] Version: 1.8.22
I1002 22:18:57.857302       1 pod_nanny.go:109] Watching namespace: kube-system, pod: metrics-server-f46f56d7b-trtqp, container: metrics-server.
I1002 22:18:57.857312       1 pod_nanny.go:110] storage: MISSING, extra_storage: 0Gi
I1002 22:18:58.088537       1 pod_nanny.go:214] Failed to read data from config file "/etc/config/NannyConfiguration": open /etc/config/NannyConfiguration: no such file or directory, using default parameters
I1002 22:18:58.088811       1 pod_nanny.go:144] cpu: 44m, extra_cpu: 0.5m, memory: 51Mi, extra_memory: 4Mi
I1002 22:18:58.088832       1 pod_nanny.go:278] Resources: [{Base:{i:{value:44 scale:-3} d:{Dec:<nil>} s:44m Format:DecimalSI} ExtraPerResource:{i:{value:5 scale:-4} d:{Dec:<nil>} s: Format:DecimalSI} Name:cpu} {Base:{i:{value:53477376 scale:0} d:{Dec:<nil>} s:51Mi Format:BinarySI} ExtraPerResource:{i:{value:4194304 scale:0} d:{Dec:<nil>} s:4Mi Format:BinarySI} Name:memory}]
==== END logs for container metrics-server-vpa of pod kube-system/metrics-server-f46f56d7b-trtqp ====
==== START logs for container metrics-server of pod kube-system/metrics-server-f46f56d7b-trtqp ====
I1002 22:19:22.930794       1 serving.go:342] Generated self-signed cert (/tmp/apiserver.crt, /tmp/apiserver.key)
I1002 22:19:32.530694       1 requestheader_controller.go:169] Starting RequestHeaderAuthRequestController
I1002 22:19:32.530727       1 shared_informer.go:240] Waiting for caches to sync for RequestHeaderAuthRequestController
I1002 22:19:32.530795       1 configmap_cafile_content.go:201] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I1002 22:19:32.530821       1 shared_informer.go:240] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I1002 22:19:32.530850       1 configmap_cafile_content.go:201] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file"
I1002 22:19:32.530858       1 shared_informer.go:240] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file
I1002 22:19:32.531205       1 secure_serving.go:267] Serving securely on [::]:4443
I1002 22:19:32.531251       1 dynamic_serving_content.go:131] "Starting controller" name="serving-cert::/tmp/apiserver.crt::/tmp/apiserver.key"
I1002 22:19:32.531870       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W1002 22:19:32.531968       1 shared_informer.go:372] The sharedIndexInformer has started, run more than once is not allowed
I1002 22:19:32.731733       1 shared_informer.go:247] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::requestheader-client-ca-file 
I1002 22:19:32.731780       1 shared_informer.go:247] Caches are synced for RequestHeaderAuthRequestController 
I1002 22:19:32.731761       1 shared_informer.go:247] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file 
==== END logs for container metrics-server of pod kube-system/metrics-server-f46f56d7b-trtqp ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "433859"
    },
    "items": [
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000006.17fa93470c525f00",
                "namespace": "default",
                "uid": "b30d5976-8b55-4f6b-b173-fd42205d1588",
                "resourceVersion": "428149",
                "creationTimestamp": "2024-10-02T22:13:03Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000006",
                "uid": "aks-agentpool-29385454-vmss000006"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node aks-agentpool-29385454-vmss000006 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000006"
            },
            "firstTimestamp": "2024-10-02T07:49:00Z",
            "lastTimestamp": "2024-10-02T22:13:05Z",
            "count": 9,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000006"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000006.17fa93470c52aec7",
                "namespace": "default",
                "uid": "1b752605-9133-4712-9ede-6ccf4c6cd729",
                "resourceVersion": "428150",
                "creationTimestamp": "2024-10-02T22:13:03Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000006",
                "uid": "aks-agentpool-29385454-vmss000006"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node aks-agentpool-29385454-vmss000006 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000006"
            },
            "firstTimestamp": "2024-10-02T07:49:00Z",
            "lastTimestamp": "2024-10-02T22:13:05Z",
            "count": 9,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000006"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000006.17fa93470c52e71b",
                "namespace": "default",
                "uid": "ff3dd0f8-b207-4dfa-8bba-c50e28c6a7f1",
                "resourceVersion": "428151",
                "creationTimestamp": "2024-10-02T22:13:03Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000006",
                "uid": "aks-agentpool-29385454-vmss000006"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node aks-agentpool-29385454-vmss000006 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000006"
            },
            "firstTimestamp": "2024-10-02T07:49:00Z",
            "lastTimestamp": "2024-10-02T22:13:05Z",
            "count": 9,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000006"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000006.17fac26c7f890627",
                "namespace": "default",
                "uid": "63464dfa-0829-4c31-a5b8-b8fbb3a4bb06",
                "resourceVersion": "427745",
                "creationTimestamp": "2024-10-02T22:12:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000006",
                "uid": "a6f4f9f8-b14e-4bdf-9c68-344fc07a1ea3",
                "apiVersion": "v1",
                "resourceVersion": "427736"
            },
            "reason": "Drain",
            "message": "Draining node: aks-agentpool-29385454-vmss000006",
            "source": {
                "component": "upgrader"
            },
            "firstTimestamp": "2024-10-02T22:12:58Z",
            "lastTimestamp": "2024-10-02T22:12:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "upgrader",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000006.17fac26e692bbba0",
                "namespace": "default",
                "uid": "c11d8cd5-8ad9-4596-a5e7-3943fc77cad6",
                "resourceVersion": "428156",
                "creationTimestamp": "2024-10-02T22:13:06Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000006",
                "uid": "a6f4f9f8-b14e-4bdf-9c68-344fc07a1ea3",
                "apiVersion": "v1"
            },
            "reason": "RemovingNode",
            "message": "Node aks-agentpool-29385454-vmss000006 event: Removing Node aks-agentpool-29385454-vmss000006 from Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:06Z",
            "lastTimestamp": "2024-10-02T22:13:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "node-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000007.17fa93479c0675ea",
                "namespace": "default",
                "uid": "a66867f1-60b3-42c5-856d-4f09d39bd95f",
                "resourceVersion": "428120",
                "creationTimestamp": "2024-10-02T22:13:03Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000007",
                "uid": "aks-agentpool-29385454-vmss000007"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node aks-agentpool-29385454-vmss000007 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000007"
            },
            "firstTimestamp": "2024-10-02T07:49:02Z",
            "lastTimestamp": "2024-10-02T22:13:03Z",
            "count": 24,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000007"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000007.17fa93479c06affc",
                "namespace": "default",
                "uid": "b4c9f2df-078f-435f-97be-6345b94b05f3",
                "resourceVersion": "428122",
                "creationTimestamp": "2024-10-02T22:13:03Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000007",
                "uid": "aks-agentpool-29385454-vmss000007"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node aks-agentpool-29385454-vmss000007 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000007"
            },
            "firstTimestamp": "2024-10-02T07:49:02Z",
            "lastTimestamp": "2024-10-02T22:13:03Z",
            "count": 24,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000007"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000007.17fa93479c06d6ef",
                "namespace": "default",
                "uid": "34fffe60-9f62-4fc4-825a-37015b486424",
                "resourceVersion": "428123",
                "creationTimestamp": "2024-10-02T22:13:03Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000007",
                "uid": "aks-agentpool-29385454-vmss000007"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node aks-agentpool-29385454-vmss000007 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000007"
            },
            "firstTimestamp": "2024-10-02T07:49:02Z",
            "lastTimestamp": "2024-10-02T22:13:03Z",
            "count": 24,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000007"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000007.17fac26c7f7ee715",
                "namespace": "default",
                "uid": "9f767fb4-e56d-49ad-a2f2-89d2df199296",
                "resourceVersion": "427738",
                "creationTimestamp": "2024-10-02T22:12:58Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000007",
                "uid": "66553079-4512-4fb3-bb02-4cebf2d543ca",
                "apiVersion": "v1",
                "resourceVersion": "427735"
            },
            "reason": "Drain",
            "message": "Draining node: aks-agentpool-29385454-vmss000007",
            "source": {
                "component": "upgrader"
            },
            "firstTimestamp": "2024-10-02T22:12:58Z",
            "lastTimestamp": "2024-10-02T22:12:58Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "upgrader",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000007.17fac26e692c5dbd",
                "namespace": "default",
                "uid": "bff502fd-7494-4785-898d-6af5d82c54e2",
                "resourceVersion": "428157",
                "creationTimestamp": "2024-10-02T22:13:06Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000007",
                "uid": "66553079-4512-4fb3-bb02-4cebf2d543ca",
                "apiVersion": "v1"
            },
            "reason": "RemovingNode",
            "message": "Node aks-agentpool-29385454-vmss000007 event: Removing Node aks-agentpool-29385454-vmss000007 from Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:06Z",
            "lastTimestamp": "2024-10-02T22:13:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "node-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2bd3252c0af",
                "namespace": "default",
                "uid": "05ff172e-9eb3-41cd-8705-e6f7ab0f5a61",
                "resourceVersion": "428844",
                "creationTimestamp": "2024-10-02T22:18:44Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:44Z",
            "lastTimestamp": "2024-10-02T22:18:44Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2bd3702525d",
                "namespace": "default",
                "uid": "ce7ebdc9-0216-468b-b5c3-1fbff137c9b7",
                "resourceVersion": "428947",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node aks-agentpool-29385454-vmss000008 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:44Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 8,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2bd3703955c",
                "namespace": "default",
                "uid": "4f4ea9a3-698c-4e2d-b588-0437612166f9",
                "resourceVersion": "428949",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node aks-agentpool-29385454-vmss000008 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:44Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 8,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2bd3704a09f",
                "namespace": "default",
                "uid": "7eef60a7-ee38-4c26-9315-b75bbdc401bc",
                "resourceVersion": "428946",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node aks-agentpool-29385454-vmss000008 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:44Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 7,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2bd39566561",
                "namespace": "default",
                "uid": "3bbc2fb9-3dd9-4bed-b3ec-8f9812ba2785",
                "resourceVersion": "428864",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2bd3b03a0d4",
                "namespace": "default",
                "uid": "fae11f98-6bcd-4ee7-a179-1bae69d8c9e0",
                "resourceVersion": "428853",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "CreatedNNC",
            "message": "Created NodeNetworkConfig aks-agentpool-29385454-vmss000008",
            "source": {
                "component": "dnc-rc/node-reconciler"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "dnc-rc/node-reconciler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2bd54c15244",
                "namespace": "default",
                "uid": "f985a33c-176f-4e11-b261-27a25f5c4a55",
                "resourceVersion": "428913",
                "creationTimestamp": "2024-10-02T22:18:45Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "f6340ec7-31e7-4ed2-a07b-a69d90a223a8",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node aks-agentpool-29385454-vmss000008 event: Registered Node aks-agentpool-29385454-vmss000008 in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:45Z",
            "lastTimestamp": "2024-10-02T22:18:45Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "node-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2bf43d78099",
                "namespace": "default",
                "uid": "d2a7cb9d-6ab6-49cb-a32a-a805a01431a5",
                "resourceVersion": "429154",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "ContainerdStart",
            "message": "Starting containerd container runtime...",
            "source": {
                "component": "systemd-monitor",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "systemd-monitor",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2c1275ce9ad",
                "namespace": "default",
                "uid": "ad7532f3-adbf-4870-a821-0c5e7f63df5a",
                "resourceVersion": "429382",
                "creationTimestamp": "2024-10-02T22:19:02Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2024-10-02T22:19:01.894877Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2c4b84be36c",
                "namespace": "default",
                "uid": "280be13c-06e3-4daa-87c0-91b418f12e36",
                "resourceVersion": "429518",
                "creationTimestamp": "2024-10-02T22:19:17Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "NoVMEventScheduled",
            "message": "Node condition VMEventScheduled is now: Unknown, reason: NoVMEventScheduled, message: \"IMDS query failed, exit code: 28\\nConnection timed out after 24 seconds.\"",
            "source": {
                "component": "custom-scheduledevents-consolidated-condition-plugin-monitor",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:19:17Z",
            "lastTimestamp": "2024-10-02T22:19:17Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "custom-scheduledevents-consolidated-condition-plugin-monitor",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2c4bf5b942b",
                "namespace": "default",
                "uid": "5deffd73-57f7-4de2-8f0f-78ebb6d16811",
                "resourceVersion": "429872",
                "creationTimestamp": "2024-10-02T22:19:17Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "PreemptScheduled",
            "message": "IMDS query failed, exit code: 28\nConnection timed out after 24 seconds.",
            "source": {
                "component": "custom-scheduledevents-consolidated-preempt-plugin-monitor",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:19:17Z",
            "lastTimestamp": "2024-10-02T22:20:05Z",
            "count": 3,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "custom-scheduledevents-consolidated-preempt-plugin-monitor",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2cbbc744037",
                "namespace": "default",
                "uid": "294cb142-035d-482a-9b89-9aa8e4d67c16",
                "resourceVersion": "429784",
                "creationTimestamp": "2024-10-02T22:19:47Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "TerminateScheduled",
            "message": "IMDS query failed, exit code: 28\nConnection timed out after 54 seconds.",
            "source": {
                "component": "custom-scheduledevents-consolidated-plugin-monitor",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:19:47Z",
            "lastTimestamp": "2024-10-02T22:19:47Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "custom-scheduledevents-consolidated-plugin-monitor",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2cbf5f01242",
                "namespace": "default",
                "uid": "0a5abe3f-107a-499e-b23c-eccb0a9ade88",
                "resourceVersion": "429787",
                "creationTimestamp": "2024-10-02T22:19:48Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "FreezeScheduled",
            "message": "Timeout when running plugin \"/etc/node-problem-detector.d/plugin/check_freeze.sh\": state - signal: killed. output - \"\"",
            "source": {
                "component": "custom-scheduledevents-consolidated-plugin-monitor",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:19:48Z",
            "lastTimestamp": "2024-10-02T22:19:48Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "custom-scheduledevents-consolidated-plugin-monitor",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2cbf61702d3",
                "namespace": "default",
                "uid": "517f997f-e941-4df2-a328-42d31bff856d",
                "resourceVersion": "429789",
                "creationTimestamp": "2024-10-02T22:19:48Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "RebootScheduled",
            "message": "Timeout when running plugin \"/etc/node-problem-detector.d/plugin/check_reboot.sh\": state - signal: killed. output - \"\"",
            "source": {
                "component": "custom-scheduledevents-consolidated-plugin-monitor",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:19:48Z",
            "lastTimestamp": "2024-10-02T22:19:48Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "custom-scheduledevents-consolidated-plugin-monitor",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2cbf6b68532",
                "namespace": "default",
                "uid": "a6f19104-7c04-4273-81f3-def04f8bb4e9",
                "resourceVersion": "429790",
                "creationTimestamp": "2024-10-02T22:19:48Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "RedeployScheduled",
            "message": "Timeout when running plugin \"/etc/node-problem-detector.d/plugin/check_redeploy.sh\": state - signal: killed. output - \"\"",
            "source": {
                "component": "custom-scheduledevents-consolidated-plugin-monitor",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:19:48Z",
            "lastTimestamp": "2024-10-02T22:19:48Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "custom-scheduledevents-consolidated-plugin-monitor",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000008.17fac2cfe91fb604",
                "namespace": "default",
                "uid": "5b7a0f37-8703-4585-8f1f-f7ace9ca0ff1",
                "resourceVersion": "429871",
                "creationTimestamp": "2024-10-02T22:20:05Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000008",
                "uid": "aks-agentpool-29385454-vmss000008"
            },
            "reason": "NoVMEventScheduled",
            "message": "Node condition VMEventScheduled is now: False, reason: NoVMEventScheduled, message: \"VM has no scheduled event\"",
            "source": {
                "component": "custom-scheduledevents-consolidated-condition-plugin-monitor",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:20:05Z",
            "lastTimestamp": "2024-10-02T22:20:05Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "custom-scheduledevents-consolidated-condition-plugin-monitor",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2bb38de8f8a",
                "namespace": "default",
                "uid": "676bb7d9-7f46-4b83-8572-246e383c871d",
                "resourceVersion": "428647",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "aks-agentpool-29385454-vmss000009"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2bb3fc22709",
                "namespace": "default",
                "uid": "b05fa913-4e53-4ac4-b725-f1d9eff9746f",
                "resourceVersion": "428651",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "aks-agentpool-29385454-vmss000009"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node aks-agentpool-29385454-vmss000009 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2bb3fc26a66",
                "namespace": "default",
                "uid": "f30fddef-fae5-4816-a9df-abbfdc07d06f",
                "resourceVersion": "428652",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "aks-agentpool-29385454-vmss000009"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node aks-agentpool-29385454-vmss000009 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2bb3fc297b8",
                "namespace": "default",
                "uid": "216a46d5-dc50-4552-92b6-b7e8c370cc99",
                "resourceVersion": "428654",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "aks-agentpool-29385454-vmss000009"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node aks-agentpool-29385454-vmss000009 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2bb4351596d",
                "namespace": "default",
                "uid": "299dfee2-f26b-476f-9f38-a7b1b4a5a034",
                "resourceVersion": "428657",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "aks-agentpool-29385454-vmss000009"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2bb44ad6ade",
                "namespace": "default",
                "uid": "d22bd141-1109-494e-b69a-d31bedd0287e",
                "resourceVersion": "428658",
                "creationTimestamp": "2024-10-02T22:18:36Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "aks-agentpool-29385454-vmss000009"
            },
            "reason": "CreatedNNC",
            "message": "Created NodeNetworkConfig aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "dnc-rc/node-reconciler"
            },
            "firstTimestamp": "2024-10-02T22:18:36Z",
            "lastTimestamp": "2024-10-02T22:18:36Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "dnc-rc/node-reconciler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2bc2aac657c",
                "namespace": "default",
                "uid": "cc4dffff-f03e-4730-bd5b-372a7e185ce0",
                "resourceVersion": "428784",
                "creationTimestamp": "2024-10-02T22:18:40Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "20d30808-e32f-4192-81d6-b0f2752e0a99",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node aks-agentpool-29385454-vmss000009 event: Registered Node aks-agentpool-29385454-vmss000009 in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:40Z",
            "lastTimestamp": "2024-10-02T22:18:40Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "node-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2bcd17972ef",
                "namespace": "default",
                "uid": "d4f17405-0947-4d32-8da5-7e3c3f44eddf",
                "resourceVersion": "428826",
                "creationTimestamp": "2024-10-02T22:18:43Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "aks-agentpool-29385454-vmss000009"
            },
            "reason": "ContainerdStart",
            "message": "Starting containerd container runtime...",
            "source": {
                "component": "systemd-monitor",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:43Z",
            "lastTimestamp": "2024-10-02T22:18:43Z",
            "count": 2,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "systemd-monitor",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2bd77d358cf",
                "namespace": "default",
                "uid": "5fe95202-3ec6-45b1-8b63-ba44dee44870",
                "resourceVersion": "428954",
                "creationTimestamp": "2024-10-02T22:18:46Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "aks-agentpool-29385454-vmss000009"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2024-10-02T22:18:46.064942Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2bf4c6b78dc",
                "namespace": "default",
                "uid": "e2c45a7e-5ced-4c9a-8c1a-c4d534c06d53",
                "resourceVersion": "429159",
                "creationTimestamp": "2024-10-02T22:18:53Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "aks-agentpool-29385454-vmss000009"
            },
            "reason": "NodeReady",
            "message": "Node aks-agentpool-29385454-vmss000009 status is now: NodeReady",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2c255d0c30c",
                "namespace": "default",
                "uid": "b0b3e970-312b-4c95-9383-eaee74d96185",
                "resourceVersion": "429996",
                "creationTimestamp": "2024-10-02T22:19:06Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "aks-agentpool-29385454-vmss000009"
            },
            "reason": "NoVMEventScheduled",
            "message": "Node condition VMEventScheduled is now: Unknown, reason: NoVMEventScheduled, message: \"IMDS query failed, exit code: 28\\nConnection timed out after 24 seconds.\"",
            "source": {
                "component": "custom-scheduledevents-consolidated-condition-plugin-monitor",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:06Z",
            "lastTimestamp": "2024-10-02T22:20:26Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "custom-scheduledevents-consolidated-condition-plugin-monitor",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2c25a55210f",
                "namespace": "default",
                "uid": "4c33ad9a-4581-486d-b844-e26998d5567f",
                "resourceVersion": "429997",
                "creationTimestamp": "2024-10-02T22:19:07Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "aks-agentpool-29385454-vmss000009"
            },
            "reason": "PreemptScheduled",
            "message": "IMDS query failed, exit code: 28\nConnection timed out after 24 seconds.",
            "source": {
                "component": "custom-scheduledevents-consolidated-preempt-plugin-monitor",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:07Z",
            "lastTimestamp": "2024-10-02T22:20:26Z",
            "count": 3,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "custom-scheduledevents-consolidated-preempt-plugin-monitor",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-agentpool-29385454-vmss000009.17fac2c91a574806",
                "namespace": "default",
                "uid": "0da4bd1c-bff6-419e-aaff-f27e6dd57d69",
                "resourceVersion": "430045",
                "creationTimestamp": "2024-10-02T22:19:36Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "aks-agentpool-29385454-vmss000009",
                "uid": "aks-agentpool-29385454-vmss000009"
            },
            "reason": "NoVMEventScheduled",
            "message": "Node condition VMEventScheduled is now: False, reason: NoVMEventScheduled, message: \"VM has no scheduled event\"",
            "source": {
                "component": "custom-scheduledevents-consolidated-condition-plugin-monitor",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:36Z",
            "lastTimestamp": "2024-10-02T22:20:37Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "custom-scheduledevents-consolidated-condition-plugin-monitor",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-2722m.17fac2e05ecd344f",
                "namespace": "default",
                "uid": "315537c0-3847-496a-b981-47f3307ea9d3",
                "resourceVersion": "430229",
                "creationTimestamp": "2024-10-02T22:21:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-2722m",
                "uid": "59453695-fe35-422b-9750-eb93cf25ca99",
                "apiVersion": "v1",
                "resourceVersion": "430225"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/aks-helloworld-one-7c84df798-2722m to aks-agentpool-29385454-vmss000008",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:21:15Z",
            "lastTimestamp": "2024-10-02T22:21:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-2722m.17fac2e084a5cd9d",
                "namespace": "default",
                "uid": "438b6efd-d844-4281-830b-08b8ba968dad",
                "resourceVersion": "430244",
                "creationTimestamp": "2024-10-02T22:21:16Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-2722m",
                "uid": "59453695-fe35-422b-9750-eb93cf25ca99",
                "apiVersion": "v1",
                "resourceVersion": "430226",
                "fieldPath": "spec.containers{aks-helloworld-one}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"nginx\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:21:16Z",
            "lastTimestamp": "2024-10-02T22:21:16Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-2722m.17fac2e0e6244d75",
                "namespace": "default",
                "uid": "28615667-d126-4774-8cd6-dd30bdae8920",
                "resourceVersion": "430255",
                "creationTimestamp": "2024-10-02T22:21:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-2722m",
                "uid": "59453695-fe35-422b-9750-eb93cf25ca99",
                "apiVersion": "v1",
                "resourceVersion": "430226",
                "fieldPath": "spec.containers{aks-helloworld-one}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"nginx\" in 1.635s (1.635s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:21:18Z",
            "lastTimestamp": "2024-10-02T22:21:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-2722m.17fac2e0e6a5ca77",
                "namespace": "default",
                "uid": "701f5ce3-9f6a-4e6a-b0f0-2694bb6c809b",
                "resourceVersion": "430256",
                "creationTimestamp": "2024-10-02T22:21:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-2722m",
                "uid": "59453695-fe35-422b-9750-eb93cf25ca99",
                "apiVersion": "v1",
                "resourceVersion": "430226",
                "fieldPath": "spec.containers{aks-helloworld-one}"
            },
            "reason": "Created",
            "message": "Created container aks-helloworld-one",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:21:18Z",
            "lastTimestamp": "2024-10-02T22:21:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-2722m.17fac2e0e88086fc",
                "namespace": "default",
                "uid": "c8ac4abe-be69-425e-a6c7-60a28360c772",
                "resourceVersion": "430257",
                "creationTimestamp": "2024-10-02T22:21:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-2722m",
                "uid": "59453695-fe35-422b-9750-eb93cf25ca99",
                "apiVersion": "v1",
                "resourceVersion": "430226",
                "fieldPath": "spec.containers{aks-helloworld-one}"
            },
            "reason": "Started",
            "message": "Started container aks-helloworld-one",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000008"
            },
            "firstTimestamp": "2024-10-02T22:21:18Z",
            "lastTimestamp": "2024-10-02T22:21:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000008"
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-bbhs7.17fac26d092889a2",
                "namespace": "default",
                "uid": "801bf255-686c-4637-9861-b1e1e52acb97",
                "resourceVersion": "427845",
                "creationTimestamp": "2024-10-02T22:13:00Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-bbhs7",
                "uid": "fb694f78-0453-4520-99f0-9cbaf83c2887",
                "apiVersion": "v1",
                "resourceVersion": "275914",
                "fieldPath": "spec.containers{aks-helloworld-one}"
            },
            "reason": "Killing",
            "message": "Stopping container aks-helloworld-one",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000006"
            },
            "firstTimestamp": "2024-10-02T22:13:00Z",
            "lastTimestamp": "2024-10-02T22:13:00Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000006"
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-vks75.17fac26d0b99c12a",
                "namespace": "default",
                "uid": "1390949d-4ec1-453f-ab0d-6d244f4caf5b",
                "resourceVersion": "427852",
                "creationTimestamp": "2024-10-02T22:13:00Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-vks75",
                "uid": "fd0c2cda-177a-48a3-a59d-2088bb7d2b3c",
                "apiVersion": "v1",
                "resourceVersion": "427848"
            },
            "reason": "FailedScheduling",
            "message": "0/2 nodes are available: 2 node(s) were unschedulable. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Warning",
            "eventTime": "2024-10-02T22:13:00.651850Z",
            "action": "Scheduling",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-kube-scheduler-v2-84b957bb87-7p7l9"
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-vks75.17fac26f6939d285",
                "namespace": "default",
                "uid": "10af3682-5dcb-4c5c-a60a-09eb45ac3284",
                "resourceVersion": "428186",
                "creationTimestamp": "2024-10-02T22:13:11Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-vks75",
                "uid": "fd0c2cda-177a-48a3-a59d-2088bb7d2b3c",
                "apiVersion": "v1",
                "resourceVersion": "427851"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:13:10Z",
            "lastTimestamp": "2024-10-02T22:13:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-vks75.17fac2ac59c915ce",
                "namespace": "default",
                "uid": "abeea14f-bc15-4cc9-8263-c87fc370ecfc",
                "resourceVersion": "428305",
                "creationTimestamp": "2024-10-02T22:17:34Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-vks75",
                "uid": "fd0c2cda-177a-48a3-a59d-2088bb7d2b3c",
                "apiVersion": "v1",
                "resourceVersion": "427851"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:17:32Z",
            "lastTimestamp": "2024-10-02T22:17:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-vks75.17fac2b3a3079c1a",
                "namespace": "default",
                "uid": "b1dbe8ab-28d1-44de-a25c-f22a12617d13",
                "resourceVersion": "428615",
                "creationTimestamp": "2024-10-02T22:18:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-vks75",
                "uid": "fd0c2cda-177a-48a3-a59d-2088bb7d2b3c",
                "apiVersion": "v1",
                "resourceVersion": "427851"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:03Z",
            "lastTimestamp": "2024-10-02T22:18:29Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-vks75.17fac2bc0504d84d",
                "namespace": "default",
                "uid": "62439db5-7fb4-48e8-b209-31d88caa89a5",
                "resourceVersion": "428776",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-vks75",
                "uid": "fd0c2cda-177a-48a3-a59d-2088bb7d2b3c",
                "apiVersion": "v1",
                "resourceVersion": "428410"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-vks75.17fac2bf4fee22e0",
                "namespace": "default",
                "uid": "942e4e0d-e2b1-45cf-8c5c-d28454d11d33",
                "resourceVersion": "429193",
                "creationTimestamp": "2024-10-02T22:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-vks75",
                "uid": "fd0c2cda-177a-48a3-a59d-2088bb7d2b3c",
                "apiVersion": "v1",
                "resourceVersion": "428777"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/aks-helloworld-one-7c84df798-vks75 to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-vks75.17fac2bfb7968078",
                "namespace": "default",
                "uid": "03be2665-c77a-46b6-9669-9a94e0d6b647",
                "resourceVersion": "429261",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-vks75",
                "uid": "fd0c2cda-177a-48a3-a59d-2088bb7d2b3c",
                "apiVersion": "v1",
                "resourceVersion": "429175",
                "fieldPath": "spec.containers{aks-helloworld-one}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"nginx\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-vks75.17fac2c2191dd423",
                "namespace": "default",
                "uid": "0c85a69b-e244-42e6-81c1-779945f3f671",
                "resourceVersion": "429432",
                "creationTimestamp": "2024-10-02T22:19:05Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-vks75",
                "uid": "fd0c2cda-177a-48a3-a59d-2088bb7d2b3c",
                "apiVersion": "v1",
                "resourceVersion": "429175",
                "fieldPath": "spec.containers{aks-helloworld-one}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"nginx\" in 2.193s (10.226s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:05Z",
            "lastTimestamp": "2024-10-02T22:19:05Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-vks75.17fac2c219fef14a",
                "namespace": "default",
                "uid": "12c11177-8294-4c10-808e-9fba5e9b2641",
                "resourceVersion": "429433",
                "creationTimestamp": "2024-10-02T22:19:05Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-vks75",
                "uid": "fd0c2cda-177a-48a3-a59d-2088bb7d2b3c",
                "apiVersion": "v1",
                "resourceVersion": "429175",
                "fieldPath": "spec.containers{aks-helloworld-one}"
            },
            "reason": "Created",
            "message": "Created container aks-helloworld-one",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:05Z",
            "lastTimestamp": "2024-10-02T22:19:05Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-vks75.17fac2c21d1480da",
                "namespace": "default",
                "uid": "4bc5a27b-5422-4df3-83ce-183009e54759",
                "resourceVersion": "429436",
                "creationTimestamp": "2024-10-02T22:19:06Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-vks75",
                "uid": "fd0c2cda-177a-48a3-a59d-2088bb7d2b3c",
                "apiVersion": "v1",
                "resourceVersion": "429175",
                "fieldPath": "spec.containers{aks-helloworld-one}"
            },
            "reason": "Started",
            "message": "Started container aks-helloworld-one",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:06Z",
            "lastTimestamp": "2024-10-02T22:19:06Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-vks75.17fac2e05adcdb07",
                "namespace": "default",
                "uid": "4b1978c5-dbd8-4902-963e-b223f6014d96",
                "resourceVersion": "430224",
                "creationTimestamp": "2024-10-02T22:21:15Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798-vks75",
                "uid": "fd0c2cda-177a-48a3-a59d-2088bb7d2b3c",
                "apiVersion": "v1",
                "resourceVersion": "429175",
                "fieldPath": "spec.containers{aks-helloworld-one}"
            },
            "reason": "Killing",
            "message": "Stopping container aks-helloworld-one",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:21:15Z",
            "lastTimestamp": "2024-10-02T22:21:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798.17fac26d0bf96d3b",
                "namespace": "default",
                "uid": "a7128735-4e69-43ee-94f1-26c2825db103",
                "resourceVersion": "427850",
                "creationTimestamp": "2024-10-02T22:13:00Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798",
                "uid": "5a45568b-99db-4569-9c23-47a9bc263acc",
                "apiVersion": "apps/v1",
                "resourceVersion": "275942"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: aks-helloworld-one-7c84df798-vks75",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:00Z",
            "lastTimestamp": "2024-10-02T22:13:00Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798.17fac2e05e342a7f",
                "namespace": "default",
                "uid": "28f872e7-f591-46df-a60f-87f97a398bdb",
                "resourceVersion": "430228",
                "creationTimestamp": "2024-10-02T22:21:15Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "aks-helloworld-one-7c84df798",
                "uid": "5a45568b-99db-4569-9c23-47a9bc263acc",
                "apiVersion": "apps/v1",
                "resourceVersion": "429451"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: aks-helloworld-one-7c84df798-2722m",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-10-02T22:21:15Z",
            "lastTimestamp": "2024-10-02T22:21:15Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8-9ghhf.17fac26d23e350be",
                "namespace": "default",
                "uid": "cbbdf316-1585-4750-91f1-a210d29d5872",
                "resourceVersion": "427891",
                "creationTimestamp": "2024-10-02T22:13:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-two-7c88969bd8-9ghhf",
                "uid": "638ba335-c77a-4808-8d79-e5ae67fb4cf4",
                "apiVersion": "v1",
                "resourceVersion": "427885"
            },
            "reason": "FailedScheduling",
            "message": "0/2 nodes are available: 2 node(s) were unschedulable. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Warning",
            "eventTime": "2024-10-02T22:13:01.059326Z",
            "action": "Scheduling",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-kube-scheduler-v2-84b957bb87-7p7l9"
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8-9ghhf.17fac26f6939eb21",
                "namespace": "default",
                "uid": "a3804f09-b201-42d9-a941-0e70142c050b",
                "resourceVersion": "428193",
                "creationTimestamp": "2024-10-02T22:13:12Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-two-7c88969bd8-9ghhf",
                "uid": "638ba335-c77a-4808-8d79-e5ae67fb4cf4",
                "apiVersion": "v1",
                "resourceVersion": "427888"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:13:10Z",
            "lastTimestamp": "2024-10-02T22:13:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8-9ghhf.17fac2ac59c8c361",
                "namespace": "default",
                "uid": "a403214a-adc8-44bb-b8f6-025dbbd2989d",
                "resourceVersion": "428289",
                "creationTimestamp": "2024-10-02T22:17:32Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-two-7c88969bd8-9ghhf",
                "uid": "638ba335-c77a-4808-8d79-e5ae67fb4cf4",
                "apiVersion": "v1",
                "resourceVersion": "427888"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:17:32Z",
            "lastTimestamp": "2024-10-02T22:17:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8-9ghhf.17fac2b3a44c56e6",
                "namespace": "default",
                "uid": "7632b8ad-4274-44c5-8f05-a141566da2dd",
                "resourceVersion": "428616",
                "creationTimestamp": "2024-10-02T22:18:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-two-7c88969bd8-9ghhf",
                "uid": "638ba335-c77a-4808-8d79-e5ae67fb4cf4",
                "apiVersion": "v1",
                "resourceVersion": "427888"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:03Z",
            "lastTimestamp": "2024-10-02T22:18:29Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8-9ghhf.17fac2bc059f5d13",
                "namespace": "default",
                "uid": "de9306f8-dd29-4536-80ff-88b85a78411f",
                "resourceVersion": "428778",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-two-7c88969bd8-9ghhf",
                "uid": "638ba335-c77a-4808-8d79-e5ae67fb4cf4",
                "apiVersion": "v1",
                "resourceVersion": "428412"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8-9ghhf.17fac2bf4ff7b9fd",
                "namespace": "default",
                "uid": "1da41899-2133-4dac-9efb-2746e65605a8",
                "resourceVersion": "429194",
                "creationTimestamp": "2024-10-02T22:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-two-7c88969bd8-9ghhf",
                "uid": "638ba335-c77a-4808-8d79-e5ae67fb4cf4",
                "apiVersion": "v1",
                "resourceVersion": "428779"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/aks-helloworld-two-7c88969bd8-9ghhf to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8-9ghhf.17fac2bfc476a0f9",
                "namespace": "default",
                "uid": "5e47fb8a-e364-417b-89d1-8212c34d1a80",
                "resourceVersion": "429277",
                "creationTimestamp": "2024-10-02T22:18:55Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-two-7c88969bd8-9ghhf",
                "uid": "638ba335-c77a-4808-8d79-e5ae67fb4cf4",
                "apiVersion": "v1",
                "resourceVersion": "429177",
                "fieldPath": "spec.containers{aks-helloworld-two}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"dhubtesting/testing:flask\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:55Z",
            "lastTimestamp": "2024-10-02T22:18:55Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8-9ghhf.17fac2c4ef3dac02",
                "namespace": "default",
                "uid": "038ad581-0630-40a3-bf69-f3a9db7fa9d4",
                "resourceVersion": "429523",
                "creationTimestamp": "2024-10-02T22:19:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-two-7c88969bd8-9ghhf",
                "uid": "638ba335-c77a-4808-8d79-e5ae67fb4cf4",
                "apiVersion": "v1",
                "resourceVersion": "429177",
                "fieldPath": "spec.containers{aks-helloworld-two}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"dhubtesting/testing:flask\" in 11.402s (22.192s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:18Z",
            "lastTimestamp": "2024-10-02T22:19:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8-9ghhf.17fac2c51bbc18db",
                "namespace": "default",
                "uid": "a1b77b48-378f-46fd-918c-5b1bbb83e998",
                "resourceVersion": "429526",
                "creationTimestamp": "2024-10-02T22:19:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-two-7c88969bd8-9ghhf",
                "uid": "638ba335-c77a-4808-8d79-e5ae67fb4cf4",
                "apiVersion": "v1",
                "resourceVersion": "429177",
                "fieldPath": "spec.containers{aks-helloworld-two}"
            },
            "reason": "Created",
            "message": "Created container aks-helloworld-two",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:18Z",
            "lastTimestamp": "2024-10-02T22:19:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8-9ghhf.17fac2c51ea40554",
                "namespace": "default",
                "uid": "871eae72-db08-48e6-bc20-3c5ffb94ab12",
                "resourceVersion": "429527",
                "creationTimestamp": "2024-10-02T22:19:18Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-two-7c88969bd8-9ghhf",
                "uid": "638ba335-c77a-4808-8d79-e5ae67fb4cf4",
                "apiVersion": "v1",
                "resourceVersion": "429177",
                "fieldPath": "spec.containers{aks-helloworld-two}"
            },
            "reason": "Started",
            "message": "Started container aks-helloworld-two",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:18Z",
            "lastTimestamp": "2024-10-02T22:19:18Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8-zxx52.17fac26d213324b7",
                "namespace": "default",
                "uid": "622ed001-d552-439c-99da-0ee5e375c8ca",
                "resourceVersion": "427886",
                "creationTimestamp": "2024-10-02T22:13:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "aks-helloworld-two-7c88969bd8-zxx52",
                "uid": "c7253503-3d7b-4c5d-b3ec-02ff6ad365d6",
                "apiVersion": "v1",
                "resourceVersion": "199081",
                "fieldPath": "spec.containers{aks-helloworld-two}"
            },
            "reason": "Killing",
            "message": "Stopping container aks-helloworld-two",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000006"
            },
            "firstTimestamp": "2024-10-02T22:13:01Z",
            "lastTimestamp": "2024-10-02T22:13:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000006"
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8.17fac26d244b49bc",
                "namespace": "default",
                "uid": "b39ba4e9-a5b0-45e0-b89e-f6d4fce6f2db",
                "resourceVersion": "427890",
                "creationTimestamp": "2024-10-02T22:13:01Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "aks-helloworld-two-7c88969bd8",
                "uid": "efb210ff-1ab8-4c77-9f2d-9287eb595fd8",
                "apiVersion": "apps/v1",
                "resourceVersion": "199276"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: aks-helloworld-two-7c88969bd8-9ghhf",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:01Z",
            "lastTimestamp": "2024-10-02T22:13:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "hello-ingress.17fac2c6602a4718",
                "namespace": "default",
                "uid": "15b558df-20f9-4510-b984-0993b795aec6",
                "resourceVersion": "429587",
                "creationTimestamp": "2024-10-02T22:19:24Z"
            },
            "involvedObject": {
                "kind": "Ingress",
                "namespace": "default",
                "name": "hello-ingress",
                "uid": "73f3455e-8f00-4b20-8807-2d09c4a7fdcb",
                "apiVersion": "networking.k8s.io/v1",
                "resourceVersion": "48751"
            },
            "reason": "Sync",
            "message": "Scheduled for sync",
            "source": {
                "component": "nginx-ingress-controller"
            },
            "firstTimestamp": "2024-10-02T22:19:24Z",
            "lastTimestamp": "2024-10-02T22:19:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "nginx-ingress-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-4vdcm.17fac26d38edf07b",
                "namespace": "default",
                "uid": "07927b5d-9e3b-474f-9222-afde1c26dd2a",
                "resourceVersion": "427914",
                "creationTimestamp": "2024-10-02T22:13:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-4vdcm",
                "uid": "0bd36419-1b0b-49dc-bfc0-0e5dbf48b8e0",
                "apiVersion": "v1",
                "resourceVersion": "199082",
                "fieldPath": "spec.containers{controller}"
            },
            "reason": "Killing",
            "message": "Stopping container controller",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000006"
            },
            "firstTimestamp": "2024-10-02T22:13:01Z",
            "lastTimestamp": "2024-10-02T22:13:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000006"
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm.17fac26d3b81bbb7",
                "namespace": "default",
                "uid": "d3110dc6-3c8b-4129-847d-fdf5c19a3d10",
                "resourceVersion": "427920",
                "creationTimestamp": "2024-10-02T22:13:01Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
                "uid": "6acb4766-897c-4d8d-a4d6-d45e029d7205",
                "apiVersion": "v1",
                "resourceVersion": "427919"
            },
            "reason": "FailedScheduling",
            "message": "0/2 nodes are available: 2 node(s) were unschedulable. preemption: 0/2 nodes are available: 2 Preemption is not helpful for scheduling.",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Warning",
            "eventTime": "2024-10-02T22:13:01.455583Z",
            "action": "Scheduling",
            "reportingComponent": "default-scheduler",
            "reportingInstance": "default-scheduler-kube-scheduler-v2-84b957bb87-7p7l9"
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm.17fac26f6939bfc5",
                "namespace": "default",
                "uid": "65a045af-4ccd-4b22-b087-c904ae007551",
                "resourceVersion": "428180",
                "creationTimestamp": "2024-10-02T22:13:10Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
                "uid": "6acb4766-897c-4d8d-a4d6-d45e029d7205",
                "apiVersion": "v1",
                "resourceVersion": "427922"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:13:10Z",
            "lastTimestamp": "2024-10-02T22:13:10Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm.17fac2ac59c90691",
                "namespace": "default",
                "uid": "c6af13eb-18a5-479b-b5a0-baca71ff85eb",
                "resourceVersion": "428300",
                "creationTimestamp": "2024-10-02T22:17:33Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
                "uid": "6acb4766-897c-4d8d-a4d6-d45e029d7205",
                "apiVersion": "v1",
                "resourceVersion": "427922"
            },
            "reason": "NotTriggerScaleUp",
            "message": "pod didn't trigger scale-up: ",
            "source": {
                "component": "cluster-autoscaler"
            },
            "firstTimestamp": "2024-10-02T22:17:32Z",
            "lastTimestamp": "2024-10-02T22:17:32Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "cluster-autoscaler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm.17fac2b3a4d5861e",
                "namespace": "default",
                "uid": "63fbf9fa-0df9-4f2a-aca5-56cb12a08296",
                "resourceVersion": "428617",
                "creationTimestamp": "2024-10-02T22:18:03Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
                "uid": "6acb4766-897c-4d8d-a4d6-d45e029d7205",
                "apiVersion": "v1",
                "resourceVersion": "427922"
            },
            "reason": "FailedScheduling",
            "message": "no nodes available to schedule pods",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:03Z",
            "lastTimestamp": "2024-10-02T22:18:29Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm.17fac2bc06231702",
                "namespace": "default",
                "uid": "28a81b8a-2c5a-411e-aff1-3bbde0ae96e2",
                "resourceVersion": "428780",
                "creationTimestamp": "2024-10-02T22:18:39Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
                "uid": "6acb4766-897c-4d8d-a4d6-d45e029d7205",
                "apiVersion": "v1",
                "resourceVersion": "428414"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.cloudprovider.kubernetes.io/uninitialized: true}. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling.",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:39Z",
            "lastTimestamp": "2024-10-02T22:18:39Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm.17fac2bf50043490",
                "namespace": "default",
                "uid": "05dda3b5-9f23-4462-a15a-d2c1bb00a294",
                "resourceVersion": "429196",
                "creationTimestamp": "2024-10-02T22:18:54Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
                "uid": "6acb4766-897c-4d8d-a4d6-d45e029d7205",
                "apiVersion": "v1",
                "resourceVersion": "428781"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned default/my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm to aks-agentpool-29385454-vmss000009",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2024-10-02T22:18:53Z",
            "lastTimestamp": "2024-10-02T22:18:53Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "default-scheduler",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm.17fac2bfd3f1a80e",
                "namespace": "default",
                "uid": "16f362f9-560d-4d93-9f71-3cdaba51ca52",
                "resourceVersion": "429283",
                "creationTimestamp": "2024-10-02T22:18:56Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
                "uid": "6acb4766-897c-4d8d-a4d6-d45e029d7205",
                "apiVersion": "v1",
                "resourceVersion": "429178",
                "fieldPath": "spec.containers{controller}"
            },
            "reason": "Pulling",
            "message": "Pulling image \"registry.k8s.io/ingress-nginx/controller:v1.11.2@sha256:d5f8217feeac4887cb1ed21f27c2674e58be06bd8f5184cacea2a69abaf78dce\"",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:18:56Z",
            "lastTimestamp": "2024-10-02T22:18:56Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm.17fac2c60ac551a1",
                "namespace": "default",
                "uid": "d1581b35-0227-4288-b819-2d948e8a76aa",
                "resourceVersion": "429569",
                "creationTimestamp": "2024-10-02T22:19:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
                "uid": "6acb4766-897c-4d8d-a4d6-d45e029d7205",
                "apiVersion": "v1",
                "resourceVersion": "429178",
                "fieldPath": "spec.containers{controller}"
            },
            "reason": "Pulled",
            "message": "Successfully pulled image \"registry.k8s.io/ingress-nginx/controller:v1.11.2@sha256:d5f8217feeac4887cb1ed21f27c2674e58be06bd8f5184cacea2a69abaf78dce\" in 2.353s (26.689s including waiting)",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:22Z",
            "lastTimestamp": "2024-10-02T22:19:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm.17fac2c60baaa4e2",
                "namespace": "default",
                "uid": "4e0ad942-7cca-40d1-b8c9-1acc2a6ae54b",
                "resourceVersion": "429570",
                "creationTimestamp": "2024-10-02T22:19:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
                "uid": "6acb4766-897c-4d8d-a4d6-d45e029d7205",
                "apiVersion": "v1",
                "resourceVersion": "429178",
                "fieldPath": "spec.containers{controller}"
            },
            "reason": "Created",
            "message": "Created container controller",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:22Z",
            "lastTimestamp": "2024-10-02T22:19:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm.17fac2c60f76ae3d",
                "namespace": "default",
                "uid": "87c9d7d8-6b07-4543-8f5b-eca37b455bef",
                "resourceVersion": "429572",
                "creationTimestamp": "2024-10-02T22:19:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
                "uid": "6acb4766-897c-4d8d-a4d6-d45e029d7205",
                "apiVersion": "v1",
                "resourceVersion": "429178",
                "fieldPath": "spec.containers{controller}"
            },
            "reason": "Started",
            "message": "Started container controller",
            "source": {
                "component": "kubelet",
                "host": "aks-agentpool-29385454-vmss000009"
            },
            "firstTimestamp": "2024-10-02T22:19:22Z",
            "lastTimestamp": "2024-10-02T22:19:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "kubelet",
            "reportingInstance": "aks-agentpool-29385454-vmss000009"
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm.17fac2c6686b0757",
                "namespace": "default",
                "uid": "4ce85ec4-8f0e-4137-a5d2-ca5bd99b01a4",
                "resourceVersion": "430422",
                "creationTimestamp": "2024-10-02T22:19:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
                "uid": "6acb4766-897c-4d8d-a4d6-d45e029d7205",
                "apiVersion": "v1",
                "resourceVersion": "429217"
            },
            "reason": "RELOAD",
            "message": "NGINX reload triggered due to a change in configuration",
            "source": {
                "component": "nginx-ingress-controller"
            },
            "firstTimestamp": "2024-10-02T22:19:24Z",
            "lastTimestamp": "2024-10-02T22:21:52Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "nginx-ingress-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949.17fac26d3bdb1dc7",
                "namespace": "default",
                "uid": "5429556f-4d4d-41d7-bea8-e84862c7fc3e",
                "resourceVersion": "427923",
                "creationTimestamp": "2024-10-02T22:13:01Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949",
                "uid": "0b739329-67dd-42ad-a2cd-7c9ad6145713",
                "apiVersion": "apps/v1",
                "resourceVersion": "199412"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:01Z",
            "lastTimestamp": "2024-10-02T22:13:01Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "replicaset-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-admission.17fac2b53eb8b0ff",
                "namespace": "default",
                "uid": "df3df548-00f8-488f-a302-12b3027882a5",
                "resourceVersion": "428797",
                "creationTimestamp": "2024-10-02T22:18:10Z"
            },
            "involvedObject": {
                "kind": "Service",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller-admission",
                "uid": "d83d1f36-22b6-467b-9467-d445b42e960e",
                "apiVersion": "v1",
                "resourceVersion": "43472"
            },
            "reason": "FailedToUpdateEndpointSlices",
            "message": "Error updating Endpoint Slices for Service default/my-nginx-ingress-ingress-nginx-controller-admission: skipping Pod my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-4vdcm for Service default/my-nginx-ingress-ingress-nginx-controller-admission: Node aks-agentpool-29385454-vmss000006 Not Found",
            "source": {
                "component": "endpoint-slice-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:10Z",
            "lastTimestamp": "2024-10-02T22:18:41Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "endpoint-slice-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller.17fac26dd501e7d9",
                "namespace": "default",
                "uid": "d7c634bf-6879-4a8c-923d-bbd135495f27",
                "resourceVersion": "428124",
                "creationTimestamp": "2024-10-02T22:13:04Z"
            },
            "involvedObject": {
                "kind": "Service",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller",
                "uid": "80ad9134-856a-462b-acc4-f6a8707791ef",
                "apiVersion": "v1",
                "resourceVersion": "43554"
            },
            "reason": "UpdatedLoadBalancer",
            "message": "Updated load balancer with new hosts",
            "source": {
                "component": "service-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:04Z",
            "lastTimestamp": "2024-10-02T22:13:04Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "service-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller.17fac26e0d8ea29b",
                "namespace": "default",
                "uid": "9032716b-5813-44ff-9634-cc7605549dbf",
                "resourceVersion": "428147",
                "creationTimestamp": "2024-10-02T22:13:04Z"
            },
            "involvedObject": {
                "kind": "Service",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller",
                "uid": "80ad9134-856a-462b-acc4-f6a8707791ef",
                "apiVersion": "v1",
                "resourceVersion": "43554"
            },
            "reason": "UnAvailableLoadBalancer",
            "message": "There are no available nodes for LoadBalancer",
            "source": {
                "component": "service-controller"
            },
            "firstTimestamp": "2024-10-02T22:13:04Z",
            "lastTimestamp": "2024-10-02T22:13:04Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "service-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller.17fac2b20cdadc4b",
                "namespace": "default",
                "uid": "f842a8e7-f472-4ef9-887b-306c0c16cf0b",
                "resourceVersion": "428362",
                "creationTimestamp": "2024-10-02T22:17:57Z"
            },
            "involvedObject": {
                "kind": "Service",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller",
                "uid": "80ad9134-856a-462b-acc4-f6a8707791ef",
                "apiVersion": "v1",
                "resourceVersion": "43554"
            },
            "reason": "EnsuringLoadBalancer",
            "message": "Ensuring load balancer",
            "source": {
                "component": "service-controller"
            },
            "firstTimestamp": "2024-10-02T22:17:57Z",
            "lastTimestamp": "2024-10-02T22:17:57Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "service-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller.17fac2b20cdb4240",
                "namespace": "default",
                "uid": "bd48527d-dcaa-4c67-9f08-857a31d8cf6d",
                "resourceVersion": "428363",
                "creationTimestamp": "2024-10-02T22:17:57Z"
            },
            "involvedObject": {
                "kind": "Service",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller",
                "uid": "80ad9134-856a-462b-acc4-f6a8707791ef",
                "apiVersion": "v1",
                "resourceVersion": "43554"
            },
            "reason": "UnAvailableLoadBalancer",
            "message": "There are no available nodes for LoadBalancer",
            "source": {
                "component": "service-controller"
            },
            "firstTimestamp": "2024-10-02T22:17:57Z",
            "lastTimestamp": "2024-10-02T22:17:57Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "service-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller.17fac2b2395df7d7",
                "namespace": "default",
                "uid": "507b8337-814c-4aff-9b53-2192089c63b6",
                "resourceVersion": "428366",
                "creationTimestamp": "2024-10-02T22:17:57Z"
            },
            "involvedObject": {
                "kind": "Service",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller",
                "uid": "80ad9134-856a-462b-acc4-f6a8707791ef",
                "apiVersion": "v1",
                "resourceVersion": "43554"
            },
            "reason": "EnsuredLoadBalancer",
            "message": "Ensured load balancer",
            "source": {
                "component": "service-controller"
            },
            "firstTimestamp": "2024-10-02T22:17:57Z",
            "lastTimestamp": "2024-10-02T22:17:57Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "service-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller.17fac2b53eb0ec49",
                "namespace": "default",
                "uid": "02405977-3fb7-4775-a404-90eecb6bb930",
                "resourceVersion": "428796",
                "creationTimestamp": "2024-10-02T22:18:10Z"
            },
            "involvedObject": {
                "kind": "Service",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller",
                "uid": "80ad9134-856a-462b-acc4-f6a8707791ef",
                "apiVersion": "v1",
                "resourceVersion": "43554"
            },
            "reason": "FailedToUpdateEndpointSlices",
            "message": "Error updating Endpoint Slices for Service default/my-nginx-ingress-ingress-nginx-controller: skipping Pod my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-4vdcm for Service default/my-nginx-ingress-ingress-nginx-controller: Node aks-agentpool-29385454-vmss000006 Not Found",
            "source": {
                "component": "endpoint-slice-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:10Z",
            "lastTimestamp": "2024-10-02T22:18:41Z",
            "count": 6,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "endpoint-slice-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller.17fac2bb73bf76bd",
                "namespace": "default",
                "uid": "d947bafc-27d0-4f15-8729-10ea94947607",
                "resourceVersion": "429385",
                "creationTimestamp": "2024-10-02T22:18:37Z"
            },
            "involvedObject": {
                "kind": "Service",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller",
                "uid": "80ad9134-856a-462b-acc4-f6a8707791ef",
                "apiVersion": "v1",
                "resourceVersion": "43554"
            },
            "reason": "UpdatedLoadBalancer",
            "message": "Updated load balancer with new hosts",
            "source": {
                "component": "service-controller"
            },
            "firstTimestamp": "2024-10-02T22:18:37Z",
            "lastTimestamp": "2024-10-02T22:19:02Z",
            "count": 4,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "service-controller",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller.17fac2c61f4d6c6f",
                "namespace": "default",
                "uid": "5abed5fb-f904-4eb1-9470-443e30d8578e",
                "resourceVersion": "429573",
                "creationTimestamp": "2024-10-02T22:19:23Z"
            },
            "involvedObject": {
                "kind": "ConfigMap",
                "namespace": "default",
                "name": "my-nginx-ingress-ingress-nginx-controller",
                "uid": "ceda05a1-0859-42ab-816b-3d9b5e368069",
                "apiVersion": "v1",
                "resourceVersion": "43462"
            },
            "reason": "CREATE",
            "message": "ConfigMap default/my-nginx-ingress-ingress-nginx-controller",
            "source": {
                "component": "nginx-ingress-controller"
            },
            "firstTimestamp": "2024-10-02T22:19:23Z",
            "lastTimestamp": "2024-10-02T22:19:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "nginx-ingress-controller",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "433859"
    },
    "items": []
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "433861"
    },
    "items": [
        {
            "metadata": {
                "name": "aks-helloworld-two",
                "namespace": "default",
                "uid": "2633b05e-e774-4e6f-80c7-d613095222fa",
                "resourceVersion": "41898",
                "creationTimestamp": "2024-09-29T18:16:40Z",
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\":\"aks-helloworld-two\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"port\":5000}],\"selector\":{\"app\":\"aks-helloworld-two\"},\"type\":\"ClusterIP\"}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 5000,
                        "targetPort": 5000
                    }
                ],
                "selector": {
                    "app": "aks-helloworld-two"
                },
                "clusterIP": "10.0.127.255",
                "clusterIPs": [
                    "10.0.127.255"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "a6e1caee-1e7d-4cd1-ad90-eb7aae7f0023",
                "resourceVersion": "197",
                "creationTimestamp": "2024-09-29T15:17:05Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 443
                    }
                ],
                "clusterIP": "10.0.0.1",
                "clusterIPs": [
                    "10.0.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller",
                "namespace": "default",
                "uid": "80ad9134-856a-462b-acc4-f6a8707791ef",
                "resourceVersion": "43554",
                "creationTimestamp": "2024-09-29T18:23:18Z",
                "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "my-nginx-ingress",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ingress-nginx",
                    "app.kubernetes.io/part-of": "ingress-nginx",
                    "app.kubernetes.io/version": "1.11.2",
                    "helm.sh/chart": "ingress-nginx-4.11.2"
                },
                "annotations": {
                    "meta.helm.sh/release-name": "my-nginx-ingress",
                    "meta.helm.sh/release-namespace": "default"
                },
                "finalizers": [
                    "service.kubernetes.io/load-balancer-cleanup"
                ]
            },
            "spec": {
                "ports": [
                    {
                        "name": "http",
                        "protocol": "TCP",
                        "appProtocol": "http",
                        "port": 80,
                        "targetPort": "http",
                        "nodePort": 30659
                    },
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "appProtocol": "https",
                        "port": 443,
                        "targetPort": "https",
                        "nodePort": 32132
                    }
                ],
                "selector": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "my-nginx-ingress",
                    "app.kubernetes.io/name": "ingress-nginx"
                },
                "clusterIP": "10.0.181.4",
                "clusterIPs": [
                    "10.0.181.4"
                ],
                "type": "LoadBalancer",
                "sessionAffinity": "None",
                "externalTrafficPolicy": "Cluster",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "allocateLoadBalancerNodePorts": true,
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {
                    "ingress": [
                        {
                            "ip": "57.151.55.215"
                        }
                    ]
                }
            }
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-admission",
                "namespace": "default",
                "uid": "d83d1f36-22b6-467b-9467-d445b42e960e",
                "resourceVersion": "43472",
                "creationTimestamp": "2024-09-29T18:23:18Z",
                "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "my-nginx-ingress",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ingress-nginx",
                    "app.kubernetes.io/part-of": "ingress-nginx",
                    "app.kubernetes.io/version": "1.11.2",
                    "helm.sh/chart": "ingress-nginx-4.11.2"
                },
                "annotations": {
                    "meta.helm.sh/release-name": "my-nginx-ingress",
                    "meta.helm.sh/release-namespace": "default"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https-webhook",
                        "protocol": "TCP",
                        "appProtocol": "https",
                        "port": 443,
                        "targetPort": "webhook"
                    }
                ],
                "selector": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "my-nginx-ingress",
                    "app.kubernetes.io/name": "ingress-nginx"
                },
                "clusterIP": "10.0.16.41",
                "clusterIPs": [
                    "10.0.16.41"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "metadata": {
                "name": "utility-api-service",
                "namespace": "default",
                "uid": "c56fa6df-cbcc-4c85-a441-72ad9dc2d52d",
                "resourceVersion": "430766",
                "creationTimestamp": "2024-10-02T22:23:07Z",
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"annotations\":{},\"name\":\"utility-api-service\",\"namespace\":\"default\"},\"spec\":{\"ports\":[{\"port\":8080,\"targetPort\":8080}],\"selector\":{\"app\":\"ak-utility\"}}}\n"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "app": "ak-utility"
                },
                "clusterIP": "10.0.178.230",
                "clusterIPs": [
                    "10.0.178.230"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "433862"
    },
    "items": []
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "433863"
    },
    "items": [
        {
            "metadata": {
                "name": "aks-helloworld-one",
                "namespace": "default",
                "uid": "f2112530-e6f8-4f01-ab3f-2624d8cc4a17",
                "resourceVersion": "430262",
                "generation": 1,
                "creationTimestamp": "2024-09-29T18:16:39Z",
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"aks-helloworld-one\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"aks-helloworld-one\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"aks-helloworld-one\"}},\"spec\":{\"containers\":[{\"image\":\"nginx\",\"name\":\"aks-helloworld-one\",\"ports\":[{\"containerPort\":80}]}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "aks-helloworld-one"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "aks-helloworld-one"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "aks-helloworld-one",
                                "image": "nginx",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-09-29T18:16:42Z",
                        "lastTransitionTime": "2024-09-29T18:16:39Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"aks-helloworld-one-7c84df798\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-02T22:21:18Z",
                        "lastTransitionTime": "2024-10-02T22:21:18Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "aks-helloworld-two",
                "namespace": "default",
                "uid": "2367debf-6aa6-423f-9a05-a116f4f81b06",
                "resourceVersion": "429538",
                "generation": 1,
                "creationTimestamp": "2024-09-29T18:16:40Z",
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"name\":\"aks-helloworld-two\",\"namespace\":\"default\"},\"spec\":{\"replicas\":1,\"selector\":{\"matchLabels\":{\"app\":\"aks-helloworld-two\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"aks-helloworld-two\"}},\"spec\":{\"containers\":[{\"image\":\"dhubtesting/testing:flask\",\"name\":\"aks-helloworld-two\",\"ports\":[{\"containerPort\":5000}]}]}}}}\n"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "aks-helloworld-two"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "aks-helloworld-two"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "aks-helloworld-two",
                                "image": "dhubtesting/testing:flask",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-09-29T18:16:51Z",
                        "lastTransitionTime": "2024-09-29T18:16:40Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"aks-helloworld-two-7c88969bd8\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-02T22:19:19Z",
                        "lastTransitionTime": "2024-10-02T22:19:19Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller",
                "namespace": "default",
                "uid": "232fe0d9-b298-417e-85b7-629e5cc71cfb",
                "resourceVersion": "429700",
                "generation": 1,
                "creationTimestamp": "2024-09-29T18:23:18Z",
                "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "my-nginx-ingress",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ingress-nginx",
                    "app.kubernetes.io/part-of": "ingress-nginx",
                    "app.kubernetes.io/version": "1.11.2",
                    "helm.sh/chart": "ingress-nginx-4.11.2"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "my-nginx-ingress",
                    "meta.helm.sh/release-namespace": "default"
                }
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "controller",
                        "app.kubernetes.io/instance": "my-nginx-ingress",
                        "app.kubernetes.io/name": "ingress-nginx"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "controller",
                            "app.kubernetes.io/instance": "my-nginx-ingress",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "ingress-nginx",
                            "app.kubernetes.io/part-of": "ingress-nginx",
                            "app.kubernetes.io/version": "1.11.2",
                            "helm.sh/chart": "ingress-nginx-4.11.2"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "webhook-cert",
                                "secret": {
                                    "secretName": "my-nginx-ingress-ingress-nginx-admission",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "controller",
                                "image": "registry.k8s.io/ingress-nginx/controller:v1.11.2@sha256:d5f8217feeac4887cb1ed21f27c2674e58be06bd8f5184cacea2a69abaf78dce",
                                "args": [
                                    "/nginx-ingress-controller",
                                    "--publish-service=$(POD_NAMESPACE)/my-nginx-ingress-ingress-nginx-controller",
                                    "--election-id=my-nginx-ingress-ingress-nginx-leader",
                                    "--controller-class=k8s.io/ingress-nginx",
                                    "--ingress-class=nginx",
                                    "--configmap=$(POD_NAMESPACE)/my-nginx-ingress-ingress-nginx-controller",
                                    "--validating-webhook=:8443",
                                    "--validating-webhook-certificate=/usr/local/certificates/cert",
                                    "--validating-webhook-key=/usr/local/certificates/key",
                                    "--enable-metrics=false"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "https",
                                        "containerPort": 443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "webhook",
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "LD_PRELOAD",
                                        "value": "/usr/local/lib/libmimalloc.so"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "90Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "webhook-cert",
                                        "readOnly": true,
                                        "mountPath": "/usr/local/certificates/"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/wait-shutdown"
                                            ]
                                        }
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 101,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": false,
                                    "allowPrivilegeEscalation": false,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 300,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "my-nginx-ingress-ingress-nginx",
                        "serviceAccount": "my-nginx-ingress-ingress-nginx",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 1,
                "updatedReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "conditions": [
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2024-09-29T18:23:38Z",
                        "lastTransitionTime": "2024-09-29T18:23:18Z",
                        "reason": "NewReplicaSetAvailable",
                        "message": "ReplicaSet \"my-nginx-ingress-ingress-nginx-controller-5d8f8b4949\" has successfully progressed."
                    },
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2024-10-02T22:19:34Z",
                        "lastTransitionTime": "2024-10-02T22:19:34Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "433863"
    },
    "items": [
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798",
                "namespace": "default",
                "uid": "5a45568b-99db-4569-9c23-47a9bc263acc",
                "resourceVersion": "430261",
                "generation": 1,
                "creationTimestamp": "2024-09-29T18:16:39Z",
                "labels": {
                    "app": "aks-helloworld-one",
                    "pod-template-hash": "7c84df798"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "aks-helloworld-one",
                        "uid": "f2112530-e6f8-4f01-ab3f-2624d8cc4a17",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "aks-helloworld-one",
                        "pod-template-hash": "7c84df798"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "aks-helloworld-one",
                            "pod-template-hash": "7c84df798"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "aks-helloworld-one",
                                "image": "nginx",
                                "ports": [
                                    {
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "Always"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8",
                "namespace": "default",
                "uid": "efb210ff-1ab8-4c77-9f2d-9287eb595fd8",
                "resourceVersion": "429536",
                "generation": 1,
                "creationTimestamp": "2024-09-29T18:16:40Z",
                "labels": {
                    "app": "aks-helloworld-two",
                    "pod-template-hash": "7c88969bd8"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "aks-helloworld-two",
                        "uid": "2367debf-6aa6-423f-9a05-a116f4f81b06",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app": "aks-helloworld-two",
                        "pod-template-hash": "7c88969bd8"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app": "aks-helloworld-two",
                            "pod-template-hash": "7c88969bd8"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "aks-helloworld-two",
                                "image": "dhubtesting/testing:flask",
                                "ports": [
                                    {
                                        "containerPort": 5000,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {},
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949",
                "namespace": "default",
                "uid": "0b739329-67dd-42ad-a2cd-7c9ad6145713",
                "resourceVersion": "429699",
                "generation": 1,
                "creationTimestamp": "2024-09-29T18:23:18Z",
                "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "my-nginx-ingress",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ingress-nginx",
                    "app.kubernetes.io/part-of": "ingress-nginx",
                    "app.kubernetes.io/version": "1.11.2",
                    "helm.sh/chart": "ingress-nginx-4.11.2",
                    "pod-template-hash": "5d8f8b4949"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "my-nginx-ingress",
                    "meta.helm.sh/release-namespace": "default"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "my-nginx-ingress-ingress-nginx-controller",
                        "uid": "232fe0d9-b298-417e-85b7-629e5cc71cfb",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 1,
                "selector": {
                    "matchLabels": {
                        "app.kubernetes.io/component": "controller",
                        "app.kubernetes.io/instance": "my-nginx-ingress",
                        "app.kubernetes.io/name": "ingress-nginx",
                        "pod-template-hash": "5d8f8b4949"
                    }
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "app.kubernetes.io/component": "controller",
                            "app.kubernetes.io/instance": "my-nginx-ingress",
                            "app.kubernetes.io/managed-by": "Helm",
                            "app.kubernetes.io/name": "ingress-nginx",
                            "app.kubernetes.io/part-of": "ingress-nginx",
                            "app.kubernetes.io/version": "1.11.2",
                            "helm.sh/chart": "ingress-nginx-4.11.2",
                            "pod-template-hash": "5d8f8b4949"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "webhook-cert",
                                "secret": {
                                    "secretName": "my-nginx-ingress-ingress-nginx-admission",
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "controller",
                                "image": "registry.k8s.io/ingress-nginx/controller:v1.11.2@sha256:d5f8217feeac4887cb1ed21f27c2674e58be06bd8f5184cacea2a69abaf78dce",
                                "args": [
                                    "/nginx-ingress-controller",
                                    "--publish-service=$(POD_NAMESPACE)/my-nginx-ingress-ingress-nginx-controller",
                                    "--election-id=my-nginx-ingress-ingress-nginx-leader",
                                    "--controller-class=k8s.io/ingress-nginx",
                                    "--ingress-class=nginx",
                                    "--configmap=$(POD_NAMESPACE)/my-nginx-ingress-ingress-nginx-controller",
                                    "--validating-webhook=:8443",
                                    "--validating-webhook-certificate=/usr/local/certificates/cert",
                                    "--validating-webhook-key=/usr/local/certificates/key",
                                    "--enable-metrics=false"
                                ],
                                "ports": [
                                    {
                                        "name": "http",
                                        "containerPort": 80,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "https",
                                        "containerPort": 443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "webhook",
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "POD_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.name"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_NAMESPACE",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "metadata.namespace"
                                            }
                                        }
                                    },
                                    {
                                        "name": "LD_PRELOAD",
                                        "value": "/usr/local/lib/libmimalloc.so"
                                    }
                                ],
                                "resources": {
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "90Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "webhook-cert",
                                        "readOnly": true,
                                        "mountPath": "/usr/local/certificates/"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/healthz",
                                        "port": 10254,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "lifecycle": {
                                    "preStop": {
                                        "exec": {
                                            "command": [
                                                "/wait-shutdown"
                                            ]
                                        }
                                    }
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "ALL"
                                        ]
                                    },
                                    "runAsUser": 101,
                                    "runAsNonRoot": true,
                                    "readOnlyRootFilesystem": false,
                                    "allowPrivilegeEscalation": false,
                                    "seccompProfile": {
                                        "type": "RuntimeDefault"
                                    }
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 300,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "my-nginx-ingress-ingress-nginx",
                        "serviceAccount": "my-nginx-ingress-ingress-nginx",
                        "securityContext": {},
                        "schedulerName": "default-scheduler"
                    }
                }
            },
            "status": {
                "replicas": 1,
                "fullyLabeledReplicas": 1,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "433864"
    },
    "items": [
        {
            "metadata": {
                "name": "aks-helloworld-one-7c84df798-2722m",
                "generateName": "aks-helloworld-one-7c84df798-",
                "namespace": "default",
                "uid": "59453695-fe35-422b-9750-eb93cf25ca99",
                "resourceVersion": "430258",
                "creationTimestamp": "2024-10-02T22:21:15Z",
                "labels": {
                    "app": "aks-helloworld-one",
                    "pod-template-hash": "7c84df798"
                },
                "annotations": {
                    "cni.projectcalico.org/containerID": "71c839c88d0aa0289a151b3bba1fa2ddff064663c1031ab797be27d78168c069",
                    "cni.projectcalico.org/podIP": "10.0.24.193/32",
                    "cni.projectcalico.org/podIPs": "10.0.24.193/32"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "aks-helloworld-one-7c84df798",
                        "uid": "5a45568b-99db-4569-9c23-47a9bc263acc",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-8tkzk",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aks-helloworld-one",
                        "image": "nginx",
                        "ports": [
                            {
                                "containerPort": 80,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-8tkzk",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "aks-agentpool-29385454-vmss000008",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:21:18Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:21:15Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:21:18Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:21:18Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:21:15Z"
                    }
                ],
                "hostIP": "10.224.0.5",
                "hostIPs": [
                    {
                        "ip": "10.224.0.5"
                    }
                ],
                "podIP": "10.0.24.193",
                "podIPs": [
                    {
                        "ip": "10.0.24.193"
                    }
                ],
                "startTime": "2024-10-02T22:21:15Z",
                "containerStatuses": [
                    {
                        "name": "aks-helloworld-one",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:21:18Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/library/nginx:latest",
                        "imageID": "docker.io/library/nginx@sha256:b5d3f3e104699f0768e5ca8626914c16e52647943c65274d8a9e63072bd015bb",
                        "containerID": "containerd://c76c5cea67280c0152a289b4d008d3b9e4cf0dcbe989cf7d2a561df8d0cc2d26",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "aks-helloworld-two-7c88969bd8-9ghhf",
                "generateName": "aks-helloworld-two-7c88969bd8-",
                "namespace": "default",
                "uid": "638ba335-c77a-4808-8d79-e5ae67fb4cf4",
                "resourceVersion": "429533",
                "creationTimestamp": "2024-10-02T22:13:01Z",
                "labels": {
                    "app": "aks-helloworld-two",
                    "pod-template-hash": "7c88969bd8"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "aks-helloworld-two-7c88969bd8",
                        "uid": "efb210ff-1ab8-4c77-9f2d-9287eb595fd8",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-api-access-pz7mk",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "aks-helloworld-two",
                        "image": "dhubtesting/testing:flask",
                        "ports": [
                            {
                                "containerPort": 5000,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-api-access-pz7mk",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "serviceAccountName": "default",
                "serviceAccount": "default",
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:19:19Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:19:19Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:19:19Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.244.0.230",
                "podIPs": [
                    {
                        "ip": "10.244.0.230"
                    }
                ],
                "startTime": "2024-10-02T22:18:53Z",
                "containerStatuses": [
                    {
                        "name": "aks-helloworld-two",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:19:18Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/dhubtesting/testing:flask",
                        "imageID": "docker.io/dhubtesting/testing@sha256:32c1aa29a81a78464c67e7a5de2d78f58151bf9820d2e2d95f3a2776da2e9239",
                        "containerID": "containerd://653699afee8fd0cece3c2cff8df532c33a098786a79bb8b60313191227d42ffd",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm",
                "generateName": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-",
                "namespace": "default",
                "uid": "6acb4766-897c-4d8d-a4d6-d45e029d7205",
                "resourceVersion": "429694",
                "creationTimestamp": "2024-10-02T22:13:01Z",
                "labels": {
                    "app.kubernetes.io/component": "controller",
                    "app.kubernetes.io/instance": "my-nginx-ingress",
                    "app.kubernetes.io/managed-by": "Helm",
                    "app.kubernetes.io/name": "ingress-nginx",
                    "app.kubernetes.io/part-of": "ingress-nginx",
                    "app.kubernetes.io/version": "1.11.2",
                    "helm.sh/chart": "ingress-nginx-4.11.2",
                    "pod-template-hash": "5d8f8b4949"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "my-nginx-ingress-ingress-nginx-controller-5d8f8b4949",
                        "uid": "0b739329-67dd-42ad-a2cd-7c9ad6145713",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "webhook-cert",
                        "secret": {
                            "secretName": "my-nginx-ingress-ingress-nginx-admission",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-mnkwc",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "controller",
                        "image": "registry.k8s.io/ingress-nginx/controller:v1.11.2@sha256:d5f8217feeac4887cb1ed21f27c2674e58be06bd8f5184cacea2a69abaf78dce",
                        "args": [
                            "/nginx-ingress-controller",
                            "--publish-service=$(POD_NAMESPACE)/my-nginx-ingress-ingress-nginx-controller",
                            "--election-id=my-nginx-ingress-ingress-nginx-leader",
                            "--controller-class=k8s.io/ingress-nginx",
                            "--ingress-class=nginx",
                            "--configmap=$(POD_NAMESPACE)/my-nginx-ingress-ingress-nginx-controller",
                            "--validating-webhook=:8443",
                            "--validating-webhook-certificate=/usr/local/certificates/cert",
                            "--validating-webhook-key=/usr/local/certificates/key",
                            "--enable-metrics=false"
                        ],
                        "ports": [
                            {
                                "name": "http",
                                "containerPort": 80,
                                "protocol": "TCP"
                            },
                            {
                                "name": "https",
                                "containerPort": 443,
                                "protocol": "TCP"
                            },
                            {
                                "name": "webhook",
                                "containerPort": 8443,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "LD_PRELOAD",
                                "value": "/usr/local/lib/libmimalloc.so"
                            }
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "90Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "webhook-cert",
                                "readOnly": true,
                                "mountPath": "/usr/local/certificates/"
                            },
                            {
                                "name": "kube-api-access-mnkwc",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10254,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10254,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "lifecycle": {
                            "preStop": {
                                "exec": {
                                    "command": [
                                        "/wait-shutdown"
                                    ]
                                }
                            }
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "ALL"
                                ]
                            },
                            "runAsUser": 101,
                            "runAsNonRoot": true,
                            "readOnlyRootFilesystem": false,
                            "allowPrivilegeEscalation": false,
                            "seccompProfile": {
                                "type": "RuntimeDefault"
                            }
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 300,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "my-nginx-ingress-ingress-nginx",
                "serviceAccount": "my-nginx-ingress-ingress-nginx",
                "nodeName": "aks-agentpool-29385454-vmss000009",
                "securityContext": {},
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "PodReadyToStartContainers",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:19:23Z"
                    },
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:19:34Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:19:34Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2024-10-02T22:18:53Z"
                    }
                ],
                "hostIP": "10.224.0.4",
                "hostIPs": [
                    {
                        "ip": "10.224.0.4"
                    }
                ],
                "podIP": "10.244.0.72",
                "podIPs": [
                    {
                        "ip": "10.244.0.72"
                    }
                ],
                "startTime": "2024-10-02T22:18:53Z",
                "containerStatuses": [
                    {
                        "name": "controller",
                        "state": {
                            "running": {
                                "startedAt": "2024-10-02T22:19:22Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "sha256:a80c8fd6e52292d38d4e58453f310d612da59d802a3b62f4b88a21c50178f7ab",
                        "imageID": "registry.k8s.io/ingress-nginx/controller@sha256:d5f8217feeac4887cb1ed21f27c2674e58be06bd8f5184cacea2a69abaf78dce",
                        "containerID": "containerd://5f9bcc06bbb24d45b2eef61aacd1f088caf73512102a8ab9faa2d4bc67165601",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container aks-helloworld-one of pod default/aks-helloworld-one-7c84df798-2722m ====
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Sourcing /docker-entrypoint.d/15-local-resolvers.envsh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2024/10/02 22:21:18 [notice] 1#1: using the "epoll" event method
2024/10/02 22:21:18 [notice] 1#1: nginx/1.27.1
2024/10/02 22:21:18 [notice] 1#1: built by gcc 12.2.0 (Debian 12.2.0-14) 
2024/10/02 22:21:18 [notice] 1#1: OS: Linux 5.15.0-1071-azure
2024/10/02 22:21:18 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576
2024/10/02 22:21:18 [notice] 1#1: start worker processes
2024/10/02 22:21:18 [notice] 1#1: start worker process 29
2024/10/02 22:21:18 [notice] 1#1: start worker process 30
2024/10/02 22:21:18 [notice] 1#1: start worker process 31
2024/10/02 22:21:18 [notice] 1#1: start worker process 32
==== END logs for container aks-helloworld-one of pod default/aks-helloworld-one-7c84df798-2722m ====
==== START logs for container aks-helloworld-two of pod default/aks-helloworld-two-7c88969bd8-9ghhf ====
 * Serving Flask app 'server'
 * Debug mode: on
[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on all addresses (0.0.0.0)
 * Running on http://127.0.0.1:5000
 * Running on http://10.244.0.230:5000
[33mPress CTRL+C to quit[0m
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 528-331-794
==== END logs for container aks-helloworld-two of pod default/aks-helloworld-two-7c88969bd8-9ghhf ====
==== START logs for container controller of pod default/my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm ====
-------------------------------------------------------------------------------
NGINX Ingress controller
  Release:       v1.11.2
  Build:         46e76e5916813cfca2a9b0bfdc34b69a0000f6b9
  Repository:    https://github.com/kubernetes/ingress-nginx
  nginx version: nginx/1.25.5

-------------------------------------------------------------------------------

W1002 22:19:22.980616       7 client_config.go:659] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.
I1002 22:19:22.980762       7 main.go:205] "Creating API client" host="https://10.0.0.1:443"
I1002 22:19:23.003421       7 main.go:248] "Running in Kubernetes cluster" major="1" minor="29" git="v1.29.8" state="clean" commit="234bc63696ad15dcf62584b6ba48671bf0f25fb6" platform="linux/amd64"
I1002 22:19:23.156879       7 main.go:101] "SSL fake certificate created" file="/etc/ingress-controller/ssl/default-fake-certificate.pem"
I1002 22:19:23.197146       7 ssl.go:535] "loading tls certificate" path="/usr/local/certificates/cert" key="/usr/local/certificates/key"
I1002 22:19:23.217447       7 nginx.go:271] "Starting NGINX Ingress controller"
I1002 22:19:23.234624       7 event.go:377] Event(v1.ObjectReference{Kind:"ConfigMap", Namespace:"default", Name:"my-nginx-ingress-ingress-nginx-controller", UID:"ceda05a1-0859-42ab-816b-3d9b5e368069", APIVersion:"v1", ResourceVersion:"43462", FieldPath:""}): type: 'Normal' reason: 'CREATE' ConfigMap default/my-nginx-ingress-ingress-nginx-controller
I1002 22:19:24.322589       7 store.go:440] "Found valid IngressClass" ingress="default/hello-ingress" ingressclass="nginx"
I1002 22:19:24.322886       7 event.go:377] Event(v1.ObjectReference{Kind:"Ingress", Namespace:"default", Name:"hello-ingress", UID:"73f3455e-8f00-4b20-8807-2d09c4a7fdcb", APIVersion:"networking.k8s.io/v1", ResourceVersion:"48751", FieldPath:""}): type: 'Normal' reason: 'Sync' Scheduled for sync
I1002 22:19:24.323442       7 backend_ssl.go:67] "Adding secret to local store" name="default/wow-secret"
I1002 22:19:24.418936       7 nginx.go:317] "Starting NGINX process"
I1002 22:19:24.418994       7 leaderelection.go:250] attempting to acquire leader lease default/my-nginx-ingress-ingress-nginx-leader...
I1002 22:19:24.419410       7 nginx.go:337] "Starting validation webhook" address=":8443" certPath="/usr/local/certificates/cert" keyPath="/usr/local/certificates/key"
I1002 22:19:24.419697       7 controller.go:193] "Configuration changes detected, backend reload required"
I1002 22:19:24.426058       7 status.go:85] "New leader elected" identity="my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-4vdcm"
I1002 22:19:24.461099       7 controller.go:213] "Backend successfully reloaded"
I1002 22:19:24.461198       7 controller.go:224] "Initial sync, sleeping for 1 second"
I1002 22:19:24.461239       7 event.go:377] Event(v1.ObjectReference{Kind:"Pod", Namespace:"default", Name:"my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm", UID:"6acb4766-897c-4d8d-a4d6-d45e029d7205", APIVersion:"v1", ResourceVersion:"429217", FieldPath:""}): type: 'Normal' reason: 'RELOAD' NGINX reload triggered due to a change in configuration
I1002 22:20:07.685341       7 leaderelection.go:260] successfully acquired lease default/my-nginx-ingress-ingress-nginx-leader
I1002 22:20:07.685391       7 status.go:85] "New leader elected" identity="my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm"
W1002 22:21:15.910365       7 controller.go:1216] Service "default/aks-helloworld-one" does not have any active Endpoint.
W1002 22:21:52.018482       7 controller.go:1110] Error obtaining Endpoints for Service "default/aks-helloworld-one": no object matching key "default/aks-helloworld-one" in local store
I1002 22:21:52.018768       7 controller.go:193] "Configuration changes detected, backend reload required"
I1002 22:21:52.047969       7 controller.go:213] "Backend successfully reloaded"
I1002 22:21:52.048177       7 event.go:377] Event(v1.ObjectReference{Kind:"Pod", Namespace:"default", Name:"my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm", UID:"6acb4766-897c-4d8d-a4d6-d45e029d7205", APIVersion:"v1", ResourceVersion:"429217", FieldPath:""}): type: 'Normal' reason: 'RELOAD' NGINX reload triggered due to a change in configuration
W1002 22:23:07.488802       7 controller.go:1110] Error obtaining Endpoints for Service "default/aks-helloworld-one": no object matching key "default/aks-helloworld-one" in local store
==== END logs for container controller of pod default/my-nginx-ingress-ingress-nginx-controller-5d8f8b4949-pp2pm ====
